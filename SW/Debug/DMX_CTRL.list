
DMX_CTRL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007834  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001344  08007940  08007940  00017940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08008c84  08008c84  00018c84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08008c88  08008c88  00018c88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000003d4  20000000  08008c8c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00001558  200003d8  08009060  000203d8  2**3
                  ALLOC
  7 ._user_heap_stack 00000600  20001930  08009060  00021930  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  000203d4  2**0
                  CONTENTS, READONLY
  9 .debug_info   00035c29  00000000  00000000  000203fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008300  00000000  00000000  00056026  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000fa16  00000000  00000000  0005e326  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000017e0  00000000  00000000  0006dd40  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00002140  00000000  00000000  0006f520  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  0001da38  00000000  00000000  00071660  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   0001e8cc  00000000  00000000  0008f098  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00081b47  00000000  00000000  000ad964  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      0000007b  00000000  00000000  0012f4ab  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00004764  00000000  00000000  0012f528  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200003d8 	.word	0x200003d8
 8000128:	00000000 	.word	0x00000000
 800012c:	08007928 	.word	0x08007928

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200003dc 	.word	0x200003dc
 8000148:	08007928 	.word	0x08007928

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <__aeabi_frsub>:
 800015c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000160:	e002      	b.n	8000168 <__addsf3>
 8000162:	bf00      	nop

08000164 <__aeabi_fsub>:
 8000164:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000168 <__addsf3>:
 8000168:	0042      	lsls	r2, r0, #1
 800016a:	bf1f      	itttt	ne
 800016c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000170:	ea92 0f03 	teqne	r2, r3
 8000174:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000178:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800017c:	d06a      	beq.n	8000254 <__addsf3+0xec>
 800017e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000182:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000186:	bfc1      	itttt	gt
 8000188:	18d2      	addgt	r2, r2, r3
 800018a:	4041      	eorgt	r1, r0
 800018c:	4048      	eorgt	r0, r1
 800018e:	4041      	eorgt	r1, r0
 8000190:	bfb8      	it	lt
 8000192:	425b      	neglt	r3, r3
 8000194:	2b19      	cmp	r3, #25
 8000196:	bf88      	it	hi
 8000198:	4770      	bxhi	lr
 800019a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800019e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001a2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80001a6:	bf18      	it	ne
 80001a8:	4240      	negne	r0, r0
 80001aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001ae:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80001b2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80001b6:	bf18      	it	ne
 80001b8:	4249      	negne	r1, r1
 80001ba:	ea92 0f03 	teq	r2, r3
 80001be:	d03f      	beq.n	8000240 <__addsf3+0xd8>
 80001c0:	f1a2 0201 	sub.w	r2, r2, #1
 80001c4:	fa41 fc03 	asr.w	ip, r1, r3
 80001c8:	eb10 000c 	adds.w	r0, r0, ip
 80001cc:	f1c3 0320 	rsb	r3, r3, #32
 80001d0:	fa01 f103 	lsl.w	r1, r1, r3
 80001d4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80001d8:	d502      	bpl.n	80001e0 <__addsf3+0x78>
 80001da:	4249      	negs	r1, r1
 80001dc:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001e0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80001e4:	d313      	bcc.n	800020e <__addsf3+0xa6>
 80001e6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80001ea:	d306      	bcc.n	80001fa <__addsf3+0x92>
 80001ec:	0840      	lsrs	r0, r0, #1
 80001ee:	ea4f 0131 	mov.w	r1, r1, rrx
 80001f2:	f102 0201 	add.w	r2, r2, #1
 80001f6:	2afe      	cmp	r2, #254	; 0xfe
 80001f8:	d251      	bcs.n	800029e <__addsf3+0x136>
 80001fa:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80001fe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000202:	bf08      	it	eq
 8000204:	f020 0001 	biceq.w	r0, r0, #1
 8000208:	ea40 0003 	orr.w	r0, r0, r3
 800020c:	4770      	bx	lr
 800020e:	0049      	lsls	r1, r1, #1
 8000210:	eb40 0000 	adc.w	r0, r0, r0
 8000214:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000218:	f1a2 0201 	sub.w	r2, r2, #1
 800021c:	d1ed      	bne.n	80001fa <__addsf3+0x92>
 800021e:	fab0 fc80 	clz	ip, r0
 8000222:	f1ac 0c08 	sub.w	ip, ip, #8
 8000226:	ebb2 020c 	subs.w	r2, r2, ip
 800022a:	fa00 f00c 	lsl.w	r0, r0, ip
 800022e:	bfaa      	itet	ge
 8000230:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000234:	4252      	neglt	r2, r2
 8000236:	4318      	orrge	r0, r3
 8000238:	bfbc      	itt	lt
 800023a:	40d0      	lsrlt	r0, r2
 800023c:	4318      	orrlt	r0, r3
 800023e:	4770      	bx	lr
 8000240:	f092 0f00 	teq	r2, #0
 8000244:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000248:	bf06      	itte	eq
 800024a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800024e:	3201      	addeq	r2, #1
 8000250:	3b01      	subne	r3, #1
 8000252:	e7b5      	b.n	80001c0 <__addsf3+0x58>
 8000254:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000258:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800025c:	bf18      	it	ne
 800025e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000262:	d021      	beq.n	80002a8 <__addsf3+0x140>
 8000264:	ea92 0f03 	teq	r2, r3
 8000268:	d004      	beq.n	8000274 <__addsf3+0x10c>
 800026a:	f092 0f00 	teq	r2, #0
 800026e:	bf08      	it	eq
 8000270:	4608      	moveq	r0, r1
 8000272:	4770      	bx	lr
 8000274:	ea90 0f01 	teq	r0, r1
 8000278:	bf1c      	itt	ne
 800027a:	2000      	movne	r0, #0
 800027c:	4770      	bxne	lr
 800027e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000282:	d104      	bne.n	800028e <__addsf3+0x126>
 8000284:	0040      	lsls	r0, r0, #1
 8000286:	bf28      	it	cs
 8000288:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 800028c:	4770      	bx	lr
 800028e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000292:	bf3c      	itt	cc
 8000294:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000298:	4770      	bxcc	lr
 800029a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800029e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80002a2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002a6:	4770      	bx	lr
 80002a8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80002ac:	bf16      	itet	ne
 80002ae:	4608      	movne	r0, r1
 80002b0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002b4:	4601      	movne	r1, r0
 80002b6:	0242      	lsls	r2, r0, #9
 80002b8:	bf06      	itte	eq
 80002ba:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002be:	ea90 0f01 	teqeq	r0, r1
 80002c2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80002c6:	4770      	bx	lr

080002c8 <__aeabi_ui2f>:
 80002c8:	f04f 0300 	mov.w	r3, #0
 80002cc:	e004      	b.n	80002d8 <__aeabi_i2f+0x8>
 80002ce:	bf00      	nop

080002d0 <__aeabi_i2f>:
 80002d0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80002d4:	bf48      	it	mi
 80002d6:	4240      	negmi	r0, r0
 80002d8:	ea5f 0c00 	movs.w	ip, r0
 80002dc:	bf08      	it	eq
 80002de:	4770      	bxeq	lr
 80002e0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80002e4:	4601      	mov	r1, r0
 80002e6:	f04f 0000 	mov.w	r0, #0
 80002ea:	e01c      	b.n	8000326 <__aeabi_l2f+0x2a>

080002ec <__aeabi_ul2f>:
 80002ec:	ea50 0201 	orrs.w	r2, r0, r1
 80002f0:	bf08      	it	eq
 80002f2:	4770      	bxeq	lr
 80002f4:	f04f 0300 	mov.w	r3, #0
 80002f8:	e00a      	b.n	8000310 <__aeabi_l2f+0x14>
 80002fa:	bf00      	nop

080002fc <__aeabi_l2f>:
 80002fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000300:	bf08      	it	eq
 8000302:	4770      	bxeq	lr
 8000304:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000308:	d502      	bpl.n	8000310 <__aeabi_l2f+0x14>
 800030a:	4240      	negs	r0, r0
 800030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000310:	ea5f 0c01 	movs.w	ip, r1
 8000314:	bf02      	ittt	eq
 8000316:	4684      	moveq	ip, r0
 8000318:	4601      	moveq	r1, r0
 800031a:	2000      	moveq	r0, #0
 800031c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000320:	bf08      	it	eq
 8000322:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000326:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800032a:	fabc f28c 	clz	r2, ip
 800032e:	3a08      	subs	r2, #8
 8000330:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000334:	db10      	blt.n	8000358 <__aeabi_l2f+0x5c>
 8000336:	fa01 fc02 	lsl.w	ip, r1, r2
 800033a:	4463      	add	r3, ip
 800033c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000340:	f1c2 0220 	rsb	r2, r2, #32
 8000344:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000348:	fa20 f202 	lsr.w	r2, r0, r2
 800034c:	eb43 0002 	adc.w	r0, r3, r2
 8000350:	bf08      	it	eq
 8000352:	f020 0001 	biceq.w	r0, r0, #1
 8000356:	4770      	bx	lr
 8000358:	f102 0220 	add.w	r2, r2, #32
 800035c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000360:	f1c2 0220 	rsb	r2, r2, #32
 8000364:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000368:	fa21 f202 	lsr.w	r2, r1, r2
 800036c:	eb43 0002 	adc.w	r0, r3, r2
 8000370:	bf08      	it	eq
 8000372:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000376:	4770      	bx	lr

08000378 <__aeabi_fmul>:
 8000378:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800037c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000380:	bf1e      	ittt	ne
 8000382:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000386:	ea92 0f0c 	teqne	r2, ip
 800038a:	ea93 0f0c 	teqne	r3, ip
 800038e:	d06f      	beq.n	8000470 <__aeabi_fmul+0xf8>
 8000390:	441a      	add	r2, r3
 8000392:	ea80 0c01 	eor.w	ip, r0, r1
 8000396:	0240      	lsls	r0, r0, #9
 8000398:	bf18      	it	ne
 800039a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800039e:	d01e      	beq.n	80003de <__aeabi_fmul+0x66>
 80003a0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80003a4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80003a8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80003ac:	fba0 3101 	umull	r3, r1, r0, r1
 80003b0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80003b4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80003b8:	bf3e      	ittt	cc
 80003ba:	0049      	lslcc	r1, r1, #1
 80003bc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003c0:	005b      	lslcc	r3, r3, #1
 80003c2:	ea40 0001 	orr.w	r0, r0, r1
 80003c6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80003ca:	2afd      	cmp	r2, #253	; 0xfd
 80003cc:	d81d      	bhi.n	800040a <__aeabi_fmul+0x92>
 80003ce:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80003d2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003d6:	bf08      	it	eq
 80003d8:	f020 0001 	biceq.w	r0, r0, #1
 80003dc:	4770      	bx	lr
 80003de:	f090 0f00 	teq	r0, #0
 80003e2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80003e6:	bf08      	it	eq
 80003e8:	0249      	lsleq	r1, r1, #9
 80003ea:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80003ee:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80003f2:	3a7f      	subs	r2, #127	; 0x7f
 80003f4:	bfc2      	ittt	gt
 80003f6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80003fa:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80003fe:	4770      	bxgt	lr
 8000400:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000404:	f04f 0300 	mov.w	r3, #0
 8000408:	3a01      	subs	r2, #1
 800040a:	dc5d      	bgt.n	80004c8 <__aeabi_fmul+0x150>
 800040c:	f112 0f19 	cmn.w	r2, #25
 8000410:	bfdc      	itt	le
 8000412:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000416:	4770      	bxle	lr
 8000418:	f1c2 0200 	rsb	r2, r2, #0
 800041c:	0041      	lsls	r1, r0, #1
 800041e:	fa21 f102 	lsr.w	r1, r1, r2
 8000422:	f1c2 0220 	rsb	r2, r2, #32
 8000426:	fa00 fc02 	lsl.w	ip, r0, r2
 800042a:	ea5f 0031 	movs.w	r0, r1, rrx
 800042e:	f140 0000 	adc.w	r0, r0, #0
 8000432:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000436:	bf08      	it	eq
 8000438:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800043c:	4770      	bx	lr
 800043e:	f092 0f00 	teq	r2, #0
 8000442:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000446:	bf02      	ittt	eq
 8000448:	0040      	lsleq	r0, r0, #1
 800044a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800044e:	3a01      	subeq	r2, #1
 8000450:	d0f9      	beq.n	8000446 <__aeabi_fmul+0xce>
 8000452:	ea40 000c 	orr.w	r0, r0, ip
 8000456:	f093 0f00 	teq	r3, #0
 800045a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800045e:	bf02      	ittt	eq
 8000460:	0049      	lsleq	r1, r1, #1
 8000462:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000466:	3b01      	subeq	r3, #1
 8000468:	d0f9      	beq.n	800045e <__aeabi_fmul+0xe6>
 800046a:	ea41 010c 	orr.w	r1, r1, ip
 800046e:	e78f      	b.n	8000390 <__aeabi_fmul+0x18>
 8000470:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000474:	ea92 0f0c 	teq	r2, ip
 8000478:	bf18      	it	ne
 800047a:	ea93 0f0c 	teqne	r3, ip
 800047e:	d00a      	beq.n	8000496 <__aeabi_fmul+0x11e>
 8000480:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000484:	bf18      	it	ne
 8000486:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800048a:	d1d8      	bne.n	800043e <__aeabi_fmul+0xc6>
 800048c:	ea80 0001 	eor.w	r0, r0, r1
 8000490:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000494:	4770      	bx	lr
 8000496:	f090 0f00 	teq	r0, #0
 800049a:	bf17      	itett	ne
 800049c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80004a0:	4608      	moveq	r0, r1
 80004a2:	f091 0f00 	teqne	r1, #0
 80004a6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80004aa:	d014      	beq.n	80004d6 <__aeabi_fmul+0x15e>
 80004ac:	ea92 0f0c 	teq	r2, ip
 80004b0:	d101      	bne.n	80004b6 <__aeabi_fmul+0x13e>
 80004b2:	0242      	lsls	r2, r0, #9
 80004b4:	d10f      	bne.n	80004d6 <__aeabi_fmul+0x15e>
 80004b6:	ea93 0f0c 	teq	r3, ip
 80004ba:	d103      	bne.n	80004c4 <__aeabi_fmul+0x14c>
 80004bc:	024b      	lsls	r3, r1, #9
 80004be:	bf18      	it	ne
 80004c0:	4608      	movne	r0, r1
 80004c2:	d108      	bne.n	80004d6 <__aeabi_fmul+0x15e>
 80004c4:	ea80 0001 	eor.w	r0, r0, r1
 80004c8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80004cc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004d0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004d4:	4770      	bx	lr
 80004d6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004da:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80004de:	4770      	bx	lr

080004e0 <__aeabi_fdiv>:
 80004e0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004e4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004e8:	bf1e      	ittt	ne
 80004ea:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80004ee:	ea92 0f0c 	teqne	r2, ip
 80004f2:	ea93 0f0c 	teqne	r3, ip
 80004f6:	d069      	beq.n	80005cc <__aeabi_fdiv+0xec>
 80004f8:	eba2 0203 	sub.w	r2, r2, r3
 80004fc:	ea80 0c01 	eor.w	ip, r0, r1
 8000500:	0249      	lsls	r1, r1, #9
 8000502:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000506:	d037      	beq.n	8000578 <__aeabi_fdiv+0x98>
 8000508:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800050c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000510:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000514:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000518:	428b      	cmp	r3, r1
 800051a:	bf38      	it	cc
 800051c:	005b      	lslcc	r3, r3, #1
 800051e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000522:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000526:	428b      	cmp	r3, r1
 8000528:	bf24      	itt	cs
 800052a:	1a5b      	subcs	r3, r3, r1
 800052c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000530:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000534:	bf24      	itt	cs
 8000536:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800053a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800053e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000542:	bf24      	itt	cs
 8000544:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000548:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 800054c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000550:	bf24      	itt	cs
 8000552:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000556:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800055a:	011b      	lsls	r3, r3, #4
 800055c:	bf18      	it	ne
 800055e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000562:	d1e0      	bne.n	8000526 <__aeabi_fdiv+0x46>
 8000564:	2afd      	cmp	r2, #253	; 0xfd
 8000566:	f63f af50 	bhi.w	800040a <__aeabi_fmul+0x92>
 800056a:	428b      	cmp	r3, r1
 800056c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000570:	bf08      	it	eq
 8000572:	f020 0001 	biceq.w	r0, r0, #1
 8000576:	4770      	bx	lr
 8000578:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800057c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000580:	327f      	adds	r2, #127	; 0x7f
 8000582:	bfc2      	ittt	gt
 8000584:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000588:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800058c:	4770      	bxgt	lr
 800058e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000592:	f04f 0300 	mov.w	r3, #0
 8000596:	3a01      	subs	r2, #1
 8000598:	e737      	b.n	800040a <__aeabi_fmul+0x92>
 800059a:	f092 0f00 	teq	r2, #0
 800059e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80005a2:	bf02      	ittt	eq
 80005a4:	0040      	lsleq	r0, r0, #1
 80005a6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80005aa:	3a01      	subeq	r2, #1
 80005ac:	d0f9      	beq.n	80005a2 <__aeabi_fdiv+0xc2>
 80005ae:	ea40 000c 	orr.w	r0, r0, ip
 80005b2:	f093 0f00 	teq	r3, #0
 80005b6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80005ba:	bf02      	ittt	eq
 80005bc:	0049      	lsleq	r1, r1, #1
 80005be:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80005c2:	3b01      	subeq	r3, #1
 80005c4:	d0f9      	beq.n	80005ba <__aeabi_fdiv+0xda>
 80005c6:	ea41 010c 	orr.w	r1, r1, ip
 80005ca:	e795      	b.n	80004f8 <__aeabi_fdiv+0x18>
 80005cc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005d0:	ea92 0f0c 	teq	r2, ip
 80005d4:	d108      	bne.n	80005e8 <__aeabi_fdiv+0x108>
 80005d6:	0242      	lsls	r2, r0, #9
 80005d8:	f47f af7d 	bne.w	80004d6 <__aeabi_fmul+0x15e>
 80005dc:	ea93 0f0c 	teq	r3, ip
 80005e0:	f47f af70 	bne.w	80004c4 <__aeabi_fmul+0x14c>
 80005e4:	4608      	mov	r0, r1
 80005e6:	e776      	b.n	80004d6 <__aeabi_fmul+0x15e>
 80005e8:	ea93 0f0c 	teq	r3, ip
 80005ec:	d104      	bne.n	80005f8 <__aeabi_fdiv+0x118>
 80005ee:	024b      	lsls	r3, r1, #9
 80005f0:	f43f af4c 	beq.w	800048c <__aeabi_fmul+0x114>
 80005f4:	4608      	mov	r0, r1
 80005f6:	e76e      	b.n	80004d6 <__aeabi_fmul+0x15e>
 80005f8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80005fc:	bf18      	it	ne
 80005fe:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000602:	d1ca      	bne.n	800059a <__aeabi_fdiv+0xba>
 8000604:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000608:	f47f af5c 	bne.w	80004c4 <__aeabi_fmul+0x14c>
 800060c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000610:	f47f af3c 	bne.w	800048c <__aeabi_fmul+0x114>
 8000614:	e75f      	b.n	80004d6 <__aeabi_fmul+0x15e>
 8000616:	bf00      	nop

08000618 <__aeabi_f2iz>:
 8000618:	ea4f 0240 	mov.w	r2, r0, lsl #1
 800061c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000620:	d30f      	bcc.n	8000642 <__aeabi_f2iz+0x2a>
 8000622:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000626:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800062a:	d90d      	bls.n	8000648 <__aeabi_f2iz+0x30>
 800062c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000630:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000634:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000638:	fa23 f002 	lsr.w	r0, r3, r2
 800063c:	bf18      	it	ne
 800063e:	4240      	negne	r0, r0
 8000640:	4770      	bx	lr
 8000642:	f04f 0000 	mov.w	r0, #0
 8000646:	4770      	bx	lr
 8000648:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800064c:	d101      	bne.n	8000652 <__aeabi_f2iz+0x3a>
 800064e:	0242      	lsls	r2, r0, #9
 8000650:	d105      	bne.n	800065e <__aeabi_f2iz+0x46>
 8000652:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8000656:	bf08      	it	eq
 8000658:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800065c:	4770      	bx	lr
 800065e:	f04f 0000 	mov.w	r0, #0
 8000662:	4770      	bx	lr

08000664 <HAL_InitTick>:
 8000664:	b538      	push	{r3, r4, r5, lr}
 8000666:	4b0e      	ldr	r3, [pc, #56]	; (80006a0 <HAL_InitTick+0x3c>)
 8000668:	4605      	mov	r5, r0
 800066a:	7818      	ldrb	r0, [r3, #0]
 800066c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000670:	fbb3 f3f0 	udiv	r3, r3, r0
 8000674:	4a0b      	ldr	r2, [pc, #44]	; (80006a4 <HAL_InitTick+0x40>)
 8000676:	6810      	ldr	r0, [r2, #0]
 8000678:	fbb0 f0f3 	udiv	r0, r0, r3
 800067c:	f000 fac8 	bl	8000c10 <HAL_SYSTICK_Config>
 8000680:	4604      	mov	r4, r0
 8000682:	b958      	cbnz	r0, 800069c <HAL_InitTick+0x38>
 8000684:	2d0f      	cmp	r5, #15
 8000686:	d809      	bhi.n	800069c <HAL_InitTick+0x38>
 8000688:	4602      	mov	r2, r0
 800068a:	4629      	mov	r1, r5
 800068c:	f04f 30ff 	mov.w	r0, #4294967295
 8000690:	f000 fa7c 	bl	8000b8c <HAL_NVIC_SetPriority>
 8000694:	4620      	mov	r0, r4
 8000696:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <HAL_InitTick+0x44>)
 8000698:	601d      	str	r5, [r3, #0]
 800069a:	bd38      	pop	{r3, r4, r5, pc}
 800069c:	2001      	movs	r0, #1
 800069e:	e7fc      	b.n	800069a <HAL_InitTick+0x36>
 80006a0:	20000000 	.word	0x20000000
 80006a4:	20000184 	.word	0x20000184
 80006a8:	20000004 	.word	0x20000004

080006ac <HAL_Init>:
 80006ac:	4a07      	ldr	r2, [pc, #28]	; (80006cc <HAL_Init+0x20>)
 80006ae:	b508      	push	{r3, lr}
 80006b0:	6813      	ldr	r3, [r2, #0]
 80006b2:	2003      	movs	r0, #3
 80006b4:	f043 0310 	orr.w	r3, r3, #16
 80006b8:	6013      	str	r3, [r2, #0]
 80006ba:	f000 fa55 	bl	8000b68 <HAL_NVIC_SetPriorityGrouping>
 80006be:	2000      	movs	r0, #0
 80006c0:	f7ff ffd0 	bl	8000664 <HAL_InitTick>
 80006c4:	f005 fbde 	bl	8005e84 <HAL_MspInit>
 80006c8:	2000      	movs	r0, #0
 80006ca:	bd08      	pop	{r3, pc}
 80006cc:	40022000 	.word	0x40022000

080006d0 <HAL_IncTick>:
 80006d0:	4a03      	ldr	r2, [pc, #12]	; (80006e0 <HAL_IncTick+0x10>)
 80006d2:	4b04      	ldr	r3, [pc, #16]	; (80006e4 <HAL_IncTick+0x14>)
 80006d4:	6811      	ldr	r1, [r2, #0]
 80006d6:	781b      	ldrb	r3, [r3, #0]
 80006d8:	440b      	add	r3, r1
 80006da:	6013      	str	r3, [r2, #0]
 80006dc:	4770      	bx	lr
 80006de:	bf00      	nop
 80006e0:	2000094c 	.word	0x2000094c
 80006e4:	20000000 	.word	0x20000000

080006e8 <HAL_GetTick>:
 80006e8:	4b01      	ldr	r3, [pc, #4]	; (80006f0 <HAL_GetTick+0x8>)
 80006ea:	6818      	ldr	r0, [r3, #0]
 80006ec:	4770      	bx	lr
 80006ee:	bf00      	nop
 80006f0:	2000094c 	.word	0x2000094c

080006f4 <HAL_ADC_GetValue>:
 80006f4:	6803      	ldr	r3, [r0, #0]
 80006f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80006f8:	4770      	bx	lr

080006fa <HAL_ADC_LevelOutOfWindowCallback>:
 80006fa:	4770      	bx	lr

080006fc <HAL_ADC_IRQHandler>:
 80006fc:	6803      	ldr	r3, [r0, #0]
 80006fe:	b510      	push	{r4, lr}
 8000700:	685a      	ldr	r2, [r3, #4]
 8000702:	4604      	mov	r4, r0
 8000704:	0690      	lsls	r0, r2, #26
 8000706:	d527      	bpl.n	8000758 <HAL_ADC_IRQHandler+0x5c>
 8000708:	681a      	ldr	r2, [r3, #0]
 800070a:	0791      	lsls	r1, r2, #30
 800070c:	d524      	bpl.n	8000758 <HAL_ADC_IRQHandler+0x5c>
 800070e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000710:	06d2      	lsls	r2, r2, #27
 8000712:	bf5e      	ittt	pl
 8000714:	6aa2      	ldrpl	r2, [r4, #40]	; 0x28
 8000716:	f442 7200 	orrpl.w	r2, r2, #512	; 0x200
 800071a:	62a2      	strpl	r2, [r4, #40]	; 0x28
 800071c:	689a      	ldr	r2, [r3, #8]
 800071e:	f402 2260 	and.w	r2, r2, #917504	; 0xe0000
 8000722:	f5b2 2f60 	cmp.w	r2, #917504	; 0xe0000
 8000726:	d110      	bne.n	800074a <HAL_ADC_IRQHandler+0x4e>
 8000728:	7b22      	ldrb	r2, [r4, #12]
 800072a:	b972      	cbnz	r2, 800074a <HAL_ADC_IRQHandler+0x4e>
 800072c:	685a      	ldr	r2, [r3, #4]
 800072e:	f022 0220 	bic.w	r2, r2, #32
 8000732:	605a      	str	r2, [r3, #4]
 8000734:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000736:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800073a:	62a3      	str	r3, [r4, #40]	; 0x28
 800073c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800073e:	04db      	lsls	r3, r3, #19
 8000740:	bf5e      	ittt	pl
 8000742:	6aa3      	ldrpl	r3, [r4, #40]	; 0x28
 8000744:	f043 0301 	orrpl.w	r3, r3, #1
 8000748:	62a3      	strpl	r3, [r4, #40]	; 0x28
 800074a:	4620      	mov	r0, r4
 800074c:	f005 fd38 	bl	80061c0 <HAL_ADC_ConvCpltCallback>
 8000750:	f06f 0212 	mvn.w	r2, #18
 8000754:	6823      	ldr	r3, [r4, #0]
 8000756:	601a      	str	r2, [r3, #0]
 8000758:	6823      	ldr	r3, [r4, #0]
 800075a:	685a      	ldr	r2, [r3, #4]
 800075c:	0610      	lsls	r0, r2, #24
 800075e:	d530      	bpl.n	80007c2 <HAL_ADC_IRQHandler+0xc6>
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	0751      	lsls	r1, r2, #29
 8000764:	d52d      	bpl.n	80007c2 <HAL_ADC_IRQHandler+0xc6>
 8000766:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000768:	06d2      	lsls	r2, r2, #27
 800076a:	bf5e      	ittt	pl
 800076c:	6aa2      	ldrpl	r2, [r4, #40]	; 0x28
 800076e:	f442 5200 	orrpl.w	r2, r2, #8192	; 0x2000
 8000772:	62a2      	strpl	r2, [r4, #40]	; 0x28
 8000774:	689a      	ldr	r2, [r3, #8]
 8000776:	f402 42e0 	and.w	r2, r2, #28672	; 0x7000
 800077a:	f5b2 4fe0 	cmp.w	r2, #28672	; 0x7000
 800077e:	d00a      	beq.n	8000796 <HAL_ADC_IRQHandler+0x9a>
 8000780:	685a      	ldr	r2, [r3, #4]
 8000782:	0550      	lsls	r0, r2, #21
 8000784:	d416      	bmi.n	80007b4 <HAL_ADC_IRQHandler+0xb8>
 8000786:	689a      	ldr	r2, [r3, #8]
 8000788:	f402 2260 	and.w	r2, r2, #917504	; 0xe0000
 800078c:	f5b2 2f60 	cmp.w	r2, #917504	; 0xe0000
 8000790:	d110      	bne.n	80007b4 <HAL_ADC_IRQHandler+0xb8>
 8000792:	7b22      	ldrb	r2, [r4, #12]
 8000794:	b972      	cbnz	r2, 80007b4 <HAL_ADC_IRQHandler+0xb8>
 8000796:	685a      	ldr	r2, [r3, #4]
 8000798:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800079c:	605a      	str	r2, [r3, #4]
 800079e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80007a0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80007a4:	62a3      	str	r3, [r4, #40]	; 0x28
 80007a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80007a8:	05d9      	lsls	r1, r3, #23
 80007aa:	bf5e      	ittt	pl
 80007ac:	6aa3      	ldrpl	r3, [r4, #40]	; 0x28
 80007ae:	f043 0301 	orrpl.w	r3, r3, #1
 80007b2:	62a3      	strpl	r3, [r4, #40]	; 0x28
 80007b4:	4620      	mov	r0, r4
 80007b6:	f000 f9d5 	bl	8000b64 <HAL_ADCEx_InjectedConvCpltCallback>
 80007ba:	f06f 020c 	mvn.w	r2, #12
 80007be:	6823      	ldr	r3, [r4, #0]
 80007c0:	601a      	str	r2, [r3, #0]
 80007c2:	6823      	ldr	r3, [r4, #0]
 80007c4:	685a      	ldr	r2, [r3, #4]
 80007c6:	0652      	lsls	r2, r2, #25
 80007c8:	d50d      	bpl.n	80007e6 <HAL_ADC_IRQHandler+0xea>
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	07db      	lsls	r3, r3, #31
 80007ce:	d50a      	bpl.n	80007e6 <HAL_ADC_IRQHandler+0xea>
 80007d0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80007d2:	4620      	mov	r0, r4
 80007d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80007d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80007da:	f7ff ff8e 	bl	80006fa <HAL_ADC_LevelOutOfWindowCallback>
 80007de:	f06f 0201 	mvn.w	r2, #1
 80007e2:	6823      	ldr	r3, [r4, #0]
 80007e4:	601a      	str	r2, [r3, #0]
 80007e6:	bd10      	pop	{r4, pc}

080007e8 <HAL_ADC_ConfigChannel>:
 80007e8:	2300      	movs	r3, #0
 80007ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80007ec:	9301      	str	r3, [sp, #4]
 80007ee:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80007f2:	2b01      	cmp	r3, #1
 80007f4:	d06d      	beq.n	80008d2 <HAL_ADC_ConfigChannel+0xea>
 80007f6:	2301      	movs	r3, #1
 80007f8:	684d      	ldr	r5, [r1, #4]
 80007fa:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80007fe:	2d06      	cmp	r5, #6
 8000800:	6802      	ldr	r2, [r0, #0]
 8000802:	eb05 0385 	add.w	r3, r5, r5, lsl #2
 8000806:	680c      	ldr	r4, [r1, #0]
 8000808:	d823      	bhi.n	8000852 <HAL_ADC_ConfigChannel+0x6a>
 800080a:	261f      	movs	r6, #31
 800080c:	6b55      	ldr	r5, [r2, #52]	; 0x34
 800080e:	3b05      	subs	r3, #5
 8000810:	409e      	lsls	r6, r3
 8000812:	ea25 0506 	bic.w	r5, r5, r6
 8000816:	fa04 f303 	lsl.w	r3, r4, r3
 800081a:	432b      	orrs	r3, r5
 800081c:	6353      	str	r3, [r2, #52]	; 0x34
 800081e:	2c09      	cmp	r4, #9
 8000820:	688b      	ldr	r3, [r1, #8]
 8000822:	eb04 0544 	add.w	r5, r4, r4, lsl #1
 8000826:	f04f 0107 	mov.w	r1, #7
 800082a:	d92a      	bls.n	8000882 <HAL_ADC_ConfigChannel+0x9a>
 800082c:	68d6      	ldr	r6, [r2, #12]
 800082e:	3d1e      	subs	r5, #30
 8000830:	40a9      	lsls	r1, r5
 8000832:	ea26 0101 	bic.w	r1, r6, r1
 8000836:	40ab      	lsls	r3, r5
 8000838:	430b      	orrs	r3, r1
 800083a:	60d3      	str	r3, [r2, #12]
 800083c:	f1a4 0310 	sub.w	r3, r4, #16
 8000840:	2b01      	cmp	r3, #1
 8000842:	d926      	bls.n	8000892 <HAL_ADC_ConfigChannel+0xaa>
 8000844:	2300      	movs	r3, #0
 8000846:	2200      	movs	r2, #0
 8000848:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800084c:	4618      	mov	r0, r3
 800084e:	b002      	add	sp, #8
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	2d0c      	cmp	r5, #12
 8000854:	f04f 051f 	mov.w	r5, #31
 8000858:	d809      	bhi.n	800086e <HAL_ADC_ConfigChannel+0x86>
 800085a:	6b16      	ldr	r6, [r2, #48]	; 0x30
 800085c:	3b23      	subs	r3, #35	; 0x23
 800085e:	409d      	lsls	r5, r3
 8000860:	ea26 0505 	bic.w	r5, r6, r5
 8000864:	fa04 f303 	lsl.w	r3, r4, r3
 8000868:	432b      	orrs	r3, r5
 800086a:	6313      	str	r3, [r2, #48]	; 0x30
 800086c:	e7d7      	b.n	800081e <HAL_ADC_ConfigChannel+0x36>
 800086e:	6ad6      	ldr	r6, [r2, #44]	; 0x2c
 8000870:	3b41      	subs	r3, #65	; 0x41
 8000872:	409d      	lsls	r5, r3
 8000874:	ea26 0505 	bic.w	r5, r6, r5
 8000878:	fa04 f303 	lsl.w	r3, r4, r3
 800087c:	432b      	orrs	r3, r5
 800087e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8000880:	e7cd      	b.n	800081e <HAL_ADC_ConfigChannel+0x36>
 8000882:	6916      	ldr	r6, [r2, #16]
 8000884:	40a9      	lsls	r1, r5
 8000886:	ea26 0101 	bic.w	r1, r6, r1
 800088a:	40ab      	lsls	r3, r5
 800088c:	430b      	orrs	r3, r1
 800088e:	6113      	str	r3, [r2, #16]
 8000890:	e7d4      	b.n	800083c <HAL_ADC_ConfigChannel+0x54>
 8000892:	4b11      	ldr	r3, [pc, #68]	; (80008d8 <HAL_ADC_ConfigChannel+0xf0>)
 8000894:	429a      	cmp	r2, r3
 8000896:	d116      	bne.n	80008c6 <HAL_ADC_ConfigChannel+0xde>
 8000898:	6893      	ldr	r3, [r2, #8]
 800089a:	021b      	lsls	r3, r3, #8
 800089c:	d4d2      	bmi.n	8000844 <HAL_ADC_ConfigChannel+0x5c>
 800089e:	6893      	ldr	r3, [r2, #8]
 80008a0:	2c10      	cmp	r4, #16
 80008a2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80008a6:	6093      	str	r3, [r2, #8]
 80008a8:	d1cc      	bne.n	8000844 <HAL_ADC_ConfigChannel+0x5c>
 80008aa:	4b0c      	ldr	r3, [pc, #48]	; (80008dc <HAL_ADC_ConfigChannel+0xf4>)
 80008ac:	4a0c      	ldr	r2, [pc, #48]	; (80008e0 <HAL_ADC_ConfigChannel+0xf8>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	fbb3 f2f2 	udiv	r2, r3, r2
 80008b4:	230a      	movs	r3, #10
 80008b6:	4353      	muls	r3, r2
 80008b8:	9301      	str	r3, [sp, #4]
 80008ba:	9b01      	ldr	r3, [sp, #4]
 80008bc:	2b00      	cmp	r3, #0
 80008be:	d0c1      	beq.n	8000844 <HAL_ADC_ConfigChannel+0x5c>
 80008c0:	9b01      	ldr	r3, [sp, #4]
 80008c2:	3b01      	subs	r3, #1
 80008c4:	e7f8      	b.n	80008b8 <HAL_ADC_ConfigChannel+0xd0>
 80008c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80008c8:	f043 0320 	orr.w	r3, r3, #32
 80008cc:	6283      	str	r3, [r0, #40]	; 0x28
 80008ce:	2301      	movs	r3, #1
 80008d0:	e7b9      	b.n	8000846 <HAL_ADC_ConfigChannel+0x5e>
 80008d2:	2302      	movs	r3, #2
 80008d4:	e7ba      	b.n	800084c <HAL_ADC_ConfigChannel+0x64>
 80008d6:	bf00      	nop
 80008d8:	40012400 	.word	0x40012400
 80008dc:	20000184 	.word	0x20000184
 80008e0:	000f4240 	.word	0x000f4240

080008e4 <ADC_Enable>:
 80008e4:	2300      	movs	r3, #0
 80008e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80008e8:	9301      	str	r3, [sp, #4]
 80008ea:	6803      	ldr	r3, [r0, #0]
 80008ec:	4604      	mov	r4, r0
 80008ee:	689a      	ldr	r2, [r3, #8]
 80008f0:	07d2      	lsls	r2, r2, #31
 80008f2:	d502      	bpl.n	80008fa <ADC_Enable+0x16>
 80008f4:	2000      	movs	r0, #0
 80008f6:	b002      	add	sp, #8
 80008f8:	bd70      	pop	{r4, r5, r6, pc}
 80008fa:	689a      	ldr	r2, [r3, #8]
 80008fc:	f042 0201 	orr.w	r2, r2, #1
 8000900:	609a      	str	r2, [r3, #8]
 8000902:	4b12      	ldr	r3, [pc, #72]	; (800094c <ADC_Enable+0x68>)
 8000904:	4a12      	ldr	r2, [pc, #72]	; (8000950 <ADC_Enable+0x6c>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	fbb3 f3f2 	udiv	r3, r3, r2
 800090c:	9301      	str	r3, [sp, #4]
 800090e:	9b01      	ldr	r3, [sp, #4]
 8000910:	b9c3      	cbnz	r3, 8000944 <ADC_Enable+0x60>
 8000912:	f7ff fee9 	bl	80006e8 <HAL_GetTick>
 8000916:	4606      	mov	r6, r0
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	689d      	ldr	r5, [r3, #8]
 800091c:	f015 0501 	ands.w	r5, r5, #1
 8000920:	d1e8      	bne.n	80008f4 <ADC_Enable+0x10>
 8000922:	f7ff fee1 	bl	80006e8 <HAL_GetTick>
 8000926:	1b80      	subs	r0, r0, r6
 8000928:	2802      	cmp	r0, #2
 800092a:	d9f5      	bls.n	8000918 <ADC_Enable+0x34>
 800092c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800092e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8000932:	f043 0310 	orr.w	r3, r3, #16
 8000936:	62a3      	str	r3, [r4, #40]	; 0x28
 8000938:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800093a:	2001      	movs	r0, #1
 800093c:	f043 0301 	orr.w	r3, r3, #1
 8000940:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000942:	e7d8      	b.n	80008f6 <ADC_Enable+0x12>
 8000944:	9b01      	ldr	r3, [sp, #4]
 8000946:	3b01      	subs	r3, #1
 8000948:	e7e0      	b.n	800090c <ADC_Enable+0x28>
 800094a:	bf00      	nop
 800094c:	20000184 	.word	0x20000184
 8000950:	000f4240 	.word	0x000f4240

08000954 <HAL_ADC_Start_IT>:
 8000954:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8000958:	b510      	push	{r4, lr}
 800095a:	2b01      	cmp	r3, #1
 800095c:	4604      	mov	r4, r0
 800095e:	d058      	beq.n	8000a12 <HAL_ADC_Start_IT+0xbe>
 8000960:	2301      	movs	r3, #1
 8000962:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8000966:	f7ff ffbd 	bl	80008e4 <ADC_Enable>
 800096a:	2800      	cmp	r0, #0
 800096c:	d14d      	bne.n	8000a0a <HAL_ADC_Start_IT+0xb6>
 800096e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000970:	4a29      	ldr	r2, [pc, #164]	; (8000a18 <HAL_ADC_Start_IT+0xc4>)
 8000972:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000976:	f023 0301 	bic.w	r3, r3, #1
 800097a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800097e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000980:	6823      	ldr	r3, [r4, #0]
 8000982:	4293      	cmp	r3, r2
 8000984:	d104      	bne.n	8000990 <HAL_ADC_Start_IT+0x3c>
 8000986:	4925      	ldr	r1, [pc, #148]	; (8000a1c <HAL_ADC_Start_IT+0xc8>)
 8000988:	684a      	ldr	r2, [r1, #4]
 800098a:	f412 2f70 	tst.w	r2, #983040	; 0xf0000
 800098e:	d132      	bne.n	80009f6 <HAL_ADC_Start_IT+0xa2>
 8000990:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000992:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8000996:	62a2      	str	r2, [r4, #40]	; 0x28
 8000998:	685a      	ldr	r2, [r3, #4]
 800099a:	0552      	lsls	r2, r2, #21
 800099c:	bf41      	itttt	mi
 800099e:	6aa2      	ldrmi	r2, [r4, #40]	; 0x28
 80009a0:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 80009a4:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 80009a8:	62a2      	strmi	r2, [r4, #40]	; 0x28
 80009aa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80009ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80009b0:	bf1c      	itt	ne
 80009b2:	6ae2      	ldrne	r2, [r4, #44]	; 0x2c
 80009b4:	f022 0206 	bicne.w	r2, r2, #6
 80009b8:	62e2      	str	r2, [r4, #44]	; 0x2c
 80009ba:	2200      	movs	r2, #0
 80009bc:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80009c0:	f06f 0202 	mvn.w	r2, #2
 80009c4:	601a      	str	r2, [r3, #0]
 80009c6:	685a      	ldr	r2, [r3, #4]
 80009c8:	f042 0220 	orr.w	r2, r2, #32
 80009cc:	605a      	str	r2, [r3, #4]
 80009ce:	689a      	ldr	r2, [r3, #8]
 80009d0:	f402 2260 	and.w	r2, r2, #917504	; 0xe0000
 80009d4:	f5b2 2f60 	cmp.w	r2, #917504	; 0xe0000
 80009d8:	d113      	bne.n	8000a02 <HAL_ADC_Start_IT+0xae>
 80009da:	4a0f      	ldr	r2, [pc, #60]	; (8000a18 <HAL_ADC_Start_IT+0xc4>)
 80009dc:	4293      	cmp	r3, r2
 80009de:	d105      	bne.n	80009ec <HAL_ADC_Start_IT+0x98>
 80009e0:	f5a2 6280 	sub.w	r2, r2, #1024	; 0x400
 80009e4:	6852      	ldr	r2, [r2, #4]
 80009e6:	f412 2f70 	tst.w	r2, #983040	; 0xf0000
 80009ea:	d10a      	bne.n	8000a02 <HAL_ADC_Start_IT+0xae>
 80009ec:	689a      	ldr	r2, [r3, #8]
 80009ee:	f442 02a0 	orr.w	r2, r2, #5242880	; 0x500000
 80009f2:	609a      	str	r2, [r3, #8]
 80009f4:	bd10      	pop	{r4, pc}
 80009f6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80009f8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80009fc:	62a2      	str	r2, [r4, #40]	; 0x28
 80009fe:	684a      	ldr	r2, [r1, #4]
 8000a00:	e7cb      	b.n	800099a <HAL_ADC_Start_IT+0x46>
 8000a02:	689a      	ldr	r2, [r3, #8]
 8000a04:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8000a08:	e7f3      	b.n	80009f2 <HAL_ADC_Start_IT+0x9e>
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8000a10:	e7f0      	b.n	80009f4 <HAL_ADC_Start_IT+0xa0>
 8000a12:	2002      	movs	r0, #2
 8000a14:	e7ee      	b.n	80009f4 <HAL_ADC_Start_IT+0xa0>
 8000a16:	bf00      	nop
 8000a18:	40012800 	.word	0x40012800
 8000a1c:	40012400 	.word	0x40012400

08000a20 <ADC_ConversionStop_Disable>:
 8000a20:	b538      	push	{r3, r4, r5, lr}
 8000a22:	6803      	ldr	r3, [r0, #0]
 8000a24:	4604      	mov	r4, r0
 8000a26:	689a      	ldr	r2, [r3, #8]
 8000a28:	07d2      	lsls	r2, r2, #31
 8000a2a:	d401      	bmi.n	8000a30 <ADC_ConversionStop_Disable+0x10>
 8000a2c:	2000      	movs	r0, #0
 8000a2e:	bd38      	pop	{r3, r4, r5, pc}
 8000a30:	689a      	ldr	r2, [r3, #8]
 8000a32:	f022 0201 	bic.w	r2, r2, #1
 8000a36:	609a      	str	r2, [r3, #8]
 8000a38:	f7ff fe56 	bl	80006e8 <HAL_GetTick>
 8000a3c:	4605      	mov	r5, r0
 8000a3e:	6823      	ldr	r3, [r4, #0]
 8000a40:	689b      	ldr	r3, [r3, #8]
 8000a42:	07db      	lsls	r3, r3, #31
 8000a44:	d5f2      	bpl.n	8000a2c <ADC_ConversionStop_Disable+0xc>
 8000a46:	f7ff fe4f 	bl	80006e8 <HAL_GetTick>
 8000a4a:	1b40      	subs	r0, r0, r5
 8000a4c:	2802      	cmp	r0, #2
 8000a4e:	d9f6      	bls.n	8000a3e <ADC_ConversionStop_Disable+0x1e>
 8000a50:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000a52:	2001      	movs	r0, #1
 8000a54:	f043 0310 	orr.w	r3, r3, #16
 8000a58:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a5a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000a5c:	f043 0301 	orr.w	r3, r3, #1
 8000a60:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a62:	e7e4      	b.n	8000a2e <ADC_ConversionStop_Disable+0xe>

08000a64 <HAL_ADC_Init>:
 8000a64:	b570      	push	{r4, r5, r6, lr}
 8000a66:	4604      	mov	r4, r0
 8000a68:	2800      	cmp	r0, #0
 8000a6a:	d070      	beq.n	8000b4e <HAL_ADC_Init+0xea>
 8000a6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000a6e:	b923      	cbnz	r3, 8000a7a <HAL_ADC_Init+0x16>
 8000a70:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000a72:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8000a76:	f005 fa27 	bl	8005ec8 <HAL_ADC_MspInit>
 8000a7a:	4620      	mov	r0, r4
 8000a7c:	f7ff ffd0 	bl	8000a20 <ADC_ConversionStop_Disable>
 8000a80:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000a82:	f013 0f10 	tst.w	r3, #16
 8000a86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000a88:	d163      	bne.n	8000b52 <HAL_ADC_Init+0xee>
 8000a8a:	2800      	cmp	r0, #0
 8000a8c:	d161      	bne.n	8000b52 <HAL_ADC_Init+0xee>
 8000a8e:	69e1      	ldr	r1, [r4, #28]
 8000a90:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8000a94:	6862      	ldr	r2, [r4, #4]
 8000a96:	f023 0302 	bic.w	r3, r3, #2
 8000a9a:	f043 0302 	orr.w	r3, r3, #2
 8000a9e:	430a      	orrs	r2, r1
 8000aa0:	68a1      	ldr	r1, [r4, #8]
 8000aa2:	62a3      	str	r3, [r4, #40]	; 0x28
 8000aa4:	7b23      	ldrb	r3, [r4, #12]
 8000aa6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000aaa:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 8000aae:	d037      	beq.n	8000b20 <HAL_ADC_Init+0xbc>
 8000ab0:	2901      	cmp	r1, #1
 8000ab2:	bf14      	ite	ne
 8000ab4:	4606      	movne	r6, r0
 8000ab6:	f44f 7680 	moveq.w	r6, #256	; 0x100
 8000aba:	7d25      	ldrb	r5, [r4, #20]
 8000abc:	2d01      	cmp	r5, #1
 8000abe:	d106      	bne.n	8000ace <HAL_ADC_Init+0x6a>
 8000ac0:	bb83      	cbnz	r3, 8000b24 <HAL_ADC_Init+0xc0>
 8000ac2:	69a3      	ldr	r3, [r4, #24]
 8000ac4:	3b01      	subs	r3, #1
 8000ac6:	ea46 3543 	orr.w	r5, r6, r3, lsl #13
 8000aca:	f445 6600 	orr.w	r6, r5, #2048	; 0x800
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000ad4:	685d      	ldr	r5, [r3, #4]
 8000ad6:	f425 4569 	bic.w	r5, r5, #59648	; 0xe900
 8000ada:	ea45 0506 	orr.w	r5, r5, r6
 8000ade:	605d      	str	r5, [r3, #4]
 8000ae0:	689e      	ldr	r6, [r3, #8]
 8000ae2:	4d1e      	ldr	r5, [pc, #120]	; (8000b5c <HAL_ADC_Init+0xf8>)
 8000ae4:	ea05 0506 	and.w	r5, r5, r6
 8000ae8:	ea45 0502 	orr.w	r5, r5, r2
 8000aec:	609d      	str	r5, [r3, #8]
 8000aee:	d001      	beq.n	8000af4 <HAL_ADC_Init+0x90>
 8000af0:	2901      	cmp	r1, #1
 8000af2:	d120      	bne.n	8000b36 <HAL_ADC_Init+0xd2>
 8000af4:	6921      	ldr	r1, [r4, #16]
 8000af6:	3901      	subs	r1, #1
 8000af8:	0509      	lsls	r1, r1, #20
 8000afa:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8000afc:	f425 0570 	bic.w	r5, r5, #15728640	; 0xf00000
 8000b00:	4329      	orrs	r1, r5
 8000b02:	62d9      	str	r1, [r3, #44]	; 0x2c
 8000b04:	6899      	ldr	r1, [r3, #8]
 8000b06:	4b16      	ldr	r3, [pc, #88]	; (8000b60 <HAL_ADC_Init+0xfc>)
 8000b08:	400b      	ands	r3, r1
 8000b0a:	429a      	cmp	r2, r3
 8000b0c:	d115      	bne.n	8000b3a <HAL_ADC_Init+0xd6>
 8000b0e:	2300      	movs	r3, #0
 8000b10:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b12:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000b14:	f023 0303 	bic.w	r3, r3, #3
 8000b18:	f043 0301 	orr.w	r3, r3, #1
 8000b1c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b1e:	bd70      	pop	{r4, r5, r6, pc}
 8000b20:	460e      	mov	r6, r1
 8000b22:	e7ca      	b.n	8000aba <HAL_ADC_Init+0x56>
 8000b24:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000b26:	f043 0320 	orr.w	r3, r3, #32
 8000b2a:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000b2e:	f043 0301 	orr.w	r3, r3, #1
 8000b32:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b34:	e7cb      	b.n	8000ace <HAL_ADC_Init+0x6a>
 8000b36:	2100      	movs	r1, #0
 8000b38:	e7df      	b.n	8000afa <HAL_ADC_Init+0x96>
 8000b3a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000b3c:	f023 0312 	bic.w	r3, r3, #18
 8000b40:	f043 0310 	orr.w	r3, r3, #16
 8000b44:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000b48:	f043 0301 	orr.w	r3, r3, #1
 8000b4c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b4e:	2001      	movs	r0, #1
 8000b50:	e7e5      	b.n	8000b1e <HAL_ADC_Init+0xba>
 8000b52:	f043 0310 	orr.w	r3, r3, #16
 8000b56:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b58:	e7f9      	b.n	8000b4e <HAL_ADC_Init+0xea>
 8000b5a:	bf00      	nop
 8000b5c:	ffe1f7fd 	.word	0xffe1f7fd
 8000b60:	ff1f0efe 	.word	0xff1f0efe

08000b64 <HAL_ADCEx_InjectedConvCpltCallback>:
 8000b64:	4770      	bx	lr
	...

08000b68 <HAL_NVIC_SetPriorityGrouping>:
 8000b68:	4a07      	ldr	r2, [pc, #28]	; (8000b88 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8000b6a:	0200      	lsls	r0, r0, #8
 8000b6c:	68d3      	ldr	r3, [r2, #12]
 8000b6e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8000b72:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000b76:	041b      	lsls	r3, r3, #16
 8000b78:	0c1b      	lsrs	r3, r3, #16
 8000b7a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000b7e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000b82:	4303      	orrs	r3, r0
 8000b84:	60d3      	str	r3, [r2, #12]
 8000b86:	4770      	bx	lr
 8000b88:	e000ed00 	.word	0xe000ed00

08000b8c <HAL_NVIC_SetPriority>:
 8000b8c:	4b17      	ldr	r3, [pc, #92]	; (8000bec <HAL_NVIC_SetPriority+0x60>)
 8000b8e:	b570      	push	{r4, r5, r6, lr}
 8000b90:	68dc      	ldr	r4, [r3, #12]
 8000b92:	f04f 36ff 	mov.w	r6, #4294967295
 8000b96:	f3c4 2402 	ubfx	r4, r4, #8, #3
 8000b9a:	f1c4 0507 	rsb	r5, r4, #7
 8000b9e:	2d04      	cmp	r5, #4
 8000ba0:	f104 0304 	add.w	r3, r4, #4
 8000ba4:	bf28      	it	cs
 8000ba6:	2504      	movcs	r5, #4
 8000ba8:	2b06      	cmp	r3, #6
 8000baa:	bf98      	it	ls
 8000bac:	2400      	movls	r4, #0
 8000bae:	fa06 f305 	lsl.w	r3, r6, r5
 8000bb2:	bf88      	it	hi
 8000bb4:	3c03      	subhi	r4, #3
 8000bb6:	ea21 0303 	bic.w	r3, r1, r3
 8000bba:	40a3      	lsls	r3, r4
 8000bbc:	fa06 f404 	lsl.w	r4, r6, r4
 8000bc0:	ea22 0404 	bic.w	r4, r2, r4
 8000bc4:	2800      	cmp	r0, #0
 8000bc6:	ea43 0304 	orr.w	r3, r3, r4
 8000bca:	bfa8      	it	ge
 8000bcc:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8000bd0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8000bd4:	bfb8      	it	lt
 8000bd6:	4a06      	ldrlt	r2, [pc, #24]	; (8000bf0 <HAL_NVIC_SetPriority+0x64>)
 8000bd8:	b2db      	uxtb	r3, r3
 8000bda:	bfab      	itete	ge
 8000bdc:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 8000be0:	f000 000f 	andlt.w	r0, r0, #15
 8000be4:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
 8000be8:	5413      	strblt	r3, [r2, r0]
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	e000ed00 	.word	0xe000ed00
 8000bf0:	e000ed14 	.word	0xe000ed14

08000bf4 <HAL_NVIC_EnableIRQ>:
 8000bf4:	2800      	cmp	r0, #0
 8000bf6:	db08      	blt.n	8000c0a <HAL_NVIC_EnableIRQ+0x16>
 8000bf8:	2301      	movs	r3, #1
 8000bfa:	0942      	lsrs	r2, r0, #5
 8000bfc:	f000 001f 	and.w	r0, r0, #31
 8000c00:	fa03 f000 	lsl.w	r0, r3, r0
 8000c04:	4b01      	ldr	r3, [pc, #4]	; (8000c0c <HAL_NVIC_EnableIRQ+0x18>)
 8000c06:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8000c0a:	4770      	bx	lr
 8000c0c:	e000e100 	.word	0xe000e100

08000c10 <HAL_SYSTICK_Config>:
 8000c10:	3801      	subs	r0, #1
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d20a      	bcs.n	8000c2e <HAL_SYSTICK_Config+0x1e>
 8000c18:	21f0      	movs	r1, #240	; 0xf0
 8000c1a:	4b06      	ldr	r3, [pc, #24]	; (8000c34 <HAL_SYSTICK_Config+0x24>)
 8000c1c:	4a06      	ldr	r2, [pc, #24]	; (8000c38 <HAL_SYSTICK_Config+0x28>)
 8000c1e:	6058      	str	r0, [r3, #4]
 8000c20:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
 8000c24:	2000      	movs	r0, #0
 8000c26:	2207      	movs	r2, #7
 8000c28:	6098      	str	r0, [r3, #8]
 8000c2a:	601a      	str	r2, [r3, #0]
 8000c2c:	4770      	bx	lr
 8000c2e:	2001      	movs	r0, #1
 8000c30:	4770      	bx	lr
 8000c32:	bf00      	nop
 8000c34:	e000e010 	.word	0xe000e010
 8000c38:	e000ed00 	.word	0xe000ed00

08000c3c <HAL_DMA_Init>:
 8000c3c:	b510      	push	{r4, lr}
 8000c3e:	b330      	cbz	r0, 8000c8e <HAL_DMA_Init+0x52>
 8000c40:	2214      	movs	r2, #20
 8000c42:	6801      	ldr	r1, [r0, #0]
 8000c44:	4b13      	ldr	r3, [pc, #76]	; (8000c94 <HAL_DMA_Init+0x58>)
 8000c46:	440b      	add	r3, r1
 8000c48:	fbb3 f3f2 	udiv	r3, r3, r2
 8000c4c:	009b      	lsls	r3, r3, #2
 8000c4e:	6403      	str	r3, [r0, #64]	; 0x40
 8000c50:	4b11      	ldr	r3, [pc, #68]	; (8000c98 <HAL_DMA_Init+0x5c>)
 8000c52:	680a      	ldr	r2, [r1, #0]
 8000c54:	63c3      	str	r3, [r0, #60]	; 0x3c
 8000c56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8000c5a:	4323      	orrs	r3, r4
 8000c5c:	68c4      	ldr	r4, [r0, #12]
 8000c5e:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000c62:	4323      	orrs	r3, r4
 8000c64:	6904      	ldr	r4, [r0, #16]
 8000c66:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8000c6a:	4323      	orrs	r3, r4
 8000c6c:	6944      	ldr	r4, [r0, #20]
 8000c6e:	4323      	orrs	r3, r4
 8000c70:	6984      	ldr	r4, [r0, #24]
 8000c72:	4323      	orrs	r3, r4
 8000c74:	69c4      	ldr	r4, [r0, #28]
 8000c76:	4323      	orrs	r3, r4
 8000c78:	4313      	orrs	r3, r2
 8000c7a:	600b      	str	r3, [r1, #0]
 8000c7c:	2201      	movs	r2, #1
 8000c7e:	2300      	movs	r3, #0
 8000c80:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
 8000c84:	6383      	str	r3, [r0, #56]	; 0x38
 8000c86:	f880 3020 	strb.w	r3, [r0, #32]
 8000c8a:	4618      	mov	r0, r3
 8000c8c:	bd10      	pop	{r4, pc}
 8000c8e:	2001      	movs	r0, #1
 8000c90:	e7fc      	b.n	8000c8c <HAL_DMA_Init+0x50>
 8000c92:	bf00      	nop
 8000c94:	bffdfff8 	.word	0xbffdfff8
 8000c98:	40020000 	.word	0x40020000

08000c9c <HAL_DMA_Start_IT>:
 8000c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c9e:	f890 4020 	ldrb.w	r4, [r0, #32]
 8000ca2:	2c01      	cmp	r4, #1
 8000ca4:	d035      	beq.n	8000d12 <HAL_DMA_Start_IT+0x76>
 8000ca6:	2401      	movs	r4, #1
 8000ca8:	f890 5021 	ldrb.w	r5, [r0, #33]	; 0x21
 8000cac:	f880 4020 	strb.w	r4, [r0, #32]
 8000cb0:	42a5      	cmp	r5, r4
 8000cb2:	f04f 0600 	mov.w	r6, #0
 8000cb6:	f04f 0402 	mov.w	r4, #2
 8000cba:	d128      	bne.n	8000d0e <HAL_DMA_Start_IT+0x72>
 8000cbc:	f880 4021 	strb.w	r4, [r0, #33]	; 0x21
 8000cc0:	6804      	ldr	r4, [r0, #0]
 8000cc2:	6386      	str	r6, [r0, #56]	; 0x38
 8000cc4:	6826      	ldr	r6, [r4, #0]
 8000cc6:	f026 0601 	bic.w	r6, r6, #1
 8000cca:	6026      	str	r6, [r4, #0]
 8000ccc:	e9d0 670f 	ldrd	r6, r7, [r0, #60]	; 0x3c
 8000cd0:	40bd      	lsls	r5, r7
 8000cd2:	6075      	str	r5, [r6, #4]
 8000cd4:	6063      	str	r3, [r4, #4]
 8000cd6:	6843      	ldr	r3, [r0, #4]
 8000cd8:	6805      	ldr	r5, [r0, #0]
 8000cda:	2b10      	cmp	r3, #16
 8000cdc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8000cde:	bf0b      	itete	eq
 8000ce0:	60a2      	streq	r2, [r4, #8]
 8000ce2:	60a1      	strne	r1, [r4, #8]
 8000ce4:	60e1      	streq	r1, [r4, #12]
 8000ce6:	60e2      	strne	r2, [r4, #12]
 8000ce8:	b14b      	cbz	r3, 8000cfe <HAL_DMA_Start_IT+0x62>
 8000cea:	6823      	ldr	r3, [r4, #0]
 8000cec:	f043 030e 	orr.w	r3, r3, #14
 8000cf0:	2000      	movs	r0, #0
 8000cf2:	6023      	str	r3, [r4, #0]
 8000cf4:	682b      	ldr	r3, [r5, #0]
 8000cf6:	f043 0301 	orr.w	r3, r3, #1
 8000cfa:	602b      	str	r3, [r5, #0]
 8000cfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cfe:	6823      	ldr	r3, [r4, #0]
 8000d00:	f023 0304 	bic.w	r3, r3, #4
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	6823      	ldr	r3, [r4, #0]
 8000d08:	f043 030a 	orr.w	r3, r3, #10
 8000d0c:	e7f0      	b.n	8000cf0 <HAL_DMA_Start_IT+0x54>
 8000d0e:	f880 6020 	strb.w	r6, [r0, #32]
 8000d12:	2002      	movs	r0, #2
 8000d14:	e7f2      	b.n	8000cfc <HAL_DMA_Start_IT+0x60>
	...

08000d18 <HAL_DMA_Abort_IT>:
 8000d18:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 8000d1c:	b510      	push	{r4, lr}
 8000d1e:	2b02      	cmp	r3, #2
 8000d20:	d003      	beq.n	8000d2a <HAL_DMA_Abort_IT+0x12>
 8000d22:	2304      	movs	r3, #4
 8000d24:	6383      	str	r3, [r0, #56]	; 0x38
 8000d26:	2001      	movs	r0, #1
 8000d28:	bd10      	pop	{r4, pc}
 8000d2a:	6803      	ldr	r3, [r0, #0]
 8000d2c:	681a      	ldr	r2, [r3, #0]
 8000d2e:	f022 020e 	bic.w	r2, r2, #14
 8000d32:	601a      	str	r2, [r3, #0]
 8000d34:	681a      	ldr	r2, [r3, #0]
 8000d36:	f022 0201 	bic.w	r2, r2, #1
 8000d3a:	601a      	str	r2, [r3, #0]
 8000d3c:	4a18      	ldr	r2, [pc, #96]	; (8000da0 <HAL_DMA_Abort_IT+0x88>)
 8000d3e:	4293      	cmp	r3, r2
 8000d40:	d01f      	beq.n	8000d82 <HAL_DMA_Abort_IT+0x6a>
 8000d42:	3214      	adds	r2, #20
 8000d44:	4293      	cmp	r3, r2
 8000d46:	d01e      	beq.n	8000d86 <HAL_DMA_Abort_IT+0x6e>
 8000d48:	3214      	adds	r2, #20
 8000d4a:	4293      	cmp	r3, r2
 8000d4c:	d01d      	beq.n	8000d8a <HAL_DMA_Abort_IT+0x72>
 8000d4e:	3214      	adds	r2, #20
 8000d50:	4293      	cmp	r3, r2
 8000d52:	d01d      	beq.n	8000d90 <HAL_DMA_Abort_IT+0x78>
 8000d54:	3214      	adds	r2, #20
 8000d56:	4293      	cmp	r3, r2
 8000d58:	d01d      	beq.n	8000d96 <HAL_DMA_Abort_IT+0x7e>
 8000d5a:	3214      	adds	r2, #20
 8000d5c:	4293      	cmp	r3, r2
 8000d5e:	bf0c      	ite	eq
 8000d60:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 8000d64:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 8000d68:	4a0e      	ldr	r2, [pc, #56]	; (8000da4 <HAL_DMA_Abort_IT+0x8c>)
 8000d6a:	2400      	movs	r4, #0
 8000d6c:	6053      	str	r3, [r2, #4]
 8000d6e:	2301      	movs	r3, #1
 8000d70:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
 8000d74:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8000d76:	f880 4020 	strb.w	r4, [r0, #32]
 8000d7a:	b17b      	cbz	r3, 8000d9c <HAL_DMA_Abort_IT+0x84>
 8000d7c:	4798      	blx	r3
 8000d7e:	4620      	mov	r0, r4
 8000d80:	e7d2      	b.n	8000d28 <HAL_DMA_Abort_IT+0x10>
 8000d82:	2301      	movs	r3, #1
 8000d84:	e7f0      	b.n	8000d68 <HAL_DMA_Abort_IT+0x50>
 8000d86:	2310      	movs	r3, #16
 8000d88:	e7ee      	b.n	8000d68 <HAL_DMA_Abort_IT+0x50>
 8000d8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d8e:	e7eb      	b.n	8000d68 <HAL_DMA_Abort_IT+0x50>
 8000d90:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000d94:	e7e8      	b.n	8000d68 <HAL_DMA_Abort_IT+0x50>
 8000d96:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000d9a:	e7e5      	b.n	8000d68 <HAL_DMA_Abort_IT+0x50>
 8000d9c:	4618      	mov	r0, r3
 8000d9e:	e7c3      	b.n	8000d28 <HAL_DMA_Abort_IT+0x10>
 8000da0:	40020008 	.word	0x40020008
 8000da4:	40020000 	.word	0x40020000

08000da8 <HAL_DMA_IRQHandler>:
 8000da8:	b470      	push	{r4, r5, r6}
 8000daa:	2504      	movs	r5, #4
 8000dac:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8000dae:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8000db0:	6834      	ldr	r4, [r6, #0]
 8000db2:	6803      	ldr	r3, [r0, #0]
 8000db4:	4095      	lsls	r5, r2
 8000db6:	4225      	tst	r5, r4
 8000db8:	6819      	ldr	r1, [r3, #0]
 8000dba:	d032      	beq.n	8000e22 <HAL_DMA_IRQHandler+0x7a>
 8000dbc:	074d      	lsls	r5, r1, #29
 8000dbe:	d530      	bpl.n	8000e22 <HAL_DMA_IRQHandler+0x7a>
 8000dc0:	681a      	ldr	r2, [r3, #0]
 8000dc2:	0696      	lsls	r6, r2, #26
 8000dc4:	bf5e      	ittt	pl
 8000dc6:	681a      	ldrpl	r2, [r3, #0]
 8000dc8:	f022 0204 	bicpl.w	r2, r2, #4
 8000dcc:	601a      	strpl	r2, [r3, #0]
 8000dce:	4a3e      	ldr	r2, [pc, #248]	; (8000ec8 <HAL_DMA_IRQHandler+0x120>)
 8000dd0:	4293      	cmp	r3, r2
 8000dd2:	d019      	beq.n	8000e08 <HAL_DMA_IRQHandler+0x60>
 8000dd4:	3214      	adds	r2, #20
 8000dd6:	4293      	cmp	r3, r2
 8000dd8:	d018      	beq.n	8000e0c <HAL_DMA_IRQHandler+0x64>
 8000dda:	3214      	adds	r2, #20
 8000ddc:	4293      	cmp	r3, r2
 8000dde:	d017      	beq.n	8000e10 <HAL_DMA_IRQHandler+0x68>
 8000de0:	3214      	adds	r2, #20
 8000de2:	4293      	cmp	r3, r2
 8000de4:	d017      	beq.n	8000e16 <HAL_DMA_IRQHandler+0x6e>
 8000de6:	3214      	adds	r2, #20
 8000de8:	4293      	cmp	r3, r2
 8000dea:	d017      	beq.n	8000e1c <HAL_DMA_IRQHandler+0x74>
 8000dec:	3214      	adds	r2, #20
 8000dee:	4293      	cmp	r3, r2
 8000df0:	bf0c      	ite	eq
 8000df2:	f44f 0380 	moveq.w	r3, #4194304	; 0x400000
 8000df6:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8000dfa:	4a34      	ldr	r2, [pc, #208]	; (8000ecc <HAL_DMA_IRQHandler+0x124>)
 8000dfc:	6053      	str	r3, [r2, #4]
 8000dfe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d05e      	beq.n	8000ec2 <HAL_DMA_IRQHandler+0x11a>
 8000e04:	bc70      	pop	{r4, r5, r6}
 8000e06:	4718      	bx	r3
 8000e08:	2304      	movs	r3, #4
 8000e0a:	e7f6      	b.n	8000dfa <HAL_DMA_IRQHandler+0x52>
 8000e0c:	2340      	movs	r3, #64	; 0x40
 8000e0e:	e7f4      	b.n	8000dfa <HAL_DMA_IRQHandler+0x52>
 8000e10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e14:	e7f1      	b.n	8000dfa <HAL_DMA_IRQHandler+0x52>
 8000e16:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e1a:	e7ee      	b.n	8000dfa <HAL_DMA_IRQHandler+0x52>
 8000e1c:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8000e20:	e7eb      	b.n	8000dfa <HAL_DMA_IRQHandler+0x52>
 8000e22:	2502      	movs	r5, #2
 8000e24:	4095      	lsls	r5, r2
 8000e26:	4225      	tst	r5, r4
 8000e28:	d035      	beq.n	8000e96 <HAL_DMA_IRQHandler+0xee>
 8000e2a:	078d      	lsls	r5, r1, #30
 8000e2c:	d533      	bpl.n	8000e96 <HAL_DMA_IRQHandler+0xee>
 8000e2e:	681a      	ldr	r2, [r3, #0]
 8000e30:	0694      	lsls	r4, r2, #26
 8000e32:	d406      	bmi.n	8000e42 <HAL_DMA_IRQHandler+0x9a>
 8000e34:	681a      	ldr	r2, [r3, #0]
 8000e36:	f022 020a 	bic.w	r2, r2, #10
 8000e3a:	601a      	str	r2, [r3, #0]
 8000e3c:	2201      	movs	r2, #1
 8000e3e:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
 8000e42:	4a21      	ldr	r2, [pc, #132]	; (8000ec8 <HAL_DMA_IRQHandler+0x120>)
 8000e44:	4293      	cmp	r3, r2
 8000e46:	d019      	beq.n	8000e7c <HAL_DMA_IRQHandler+0xd4>
 8000e48:	3214      	adds	r2, #20
 8000e4a:	4293      	cmp	r3, r2
 8000e4c:	d018      	beq.n	8000e80 <HAL_DMA_IRQHandler+0xd8>
 8000e4e:	3214      	adds	r2, #20
 8000e50:	4293      	cmp	r3, r2
 8000e52:	d017      	beq.n	8000e84 <HAL_DMA_IRQHandler+0xdc>
 8000e54:	3214      	adds	r2, #20
 8000e56:	4293      	cmp	r3, r2
 8000e58:	d017      	beq.n	8000e8a <HAL_DMA_IRQHandler+0xe2>
 8000e5a:	3214      	adds	r2, #20
 8000e5c:	4293      	cmp	r3, r2
 8000e5e:	d017      	beq.n	8000e90 <HAL_DMA_IRQHandler+0xe8>
 8000e60:	3214      	adds	r2, #20
 8000e62:	4293      	cmp	r3, r2
 8000e64:	bf0c      	ite	eq
 8000e66:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8000e6a:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 8000e6e:	4a17      	ldr	r2, [pc, #92]	; (8000ecc <HAL_DMA_IRQHandler+0x124>)
 8000e70:	6053      	str	r3, [r2, #4]
 8000e72:	2300      	movs	r3, #0
 8000e74:	f880 3020 	strb.w	r3, [r0, #32]
 8000e78:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e7a:	e7c1      	b.n	8000e00 <HAL_DMA_IRQHandler+0x58>
 8000e7c:	2302      	movs	r3, #2
 8000e7e:	e7f6      	b.n	8000e6e <HAL_DMA_IRQHandler+0xc6>
 8000e80:	2320      	movs	r3, #32
 8000e82:	e7f4      	b.n	8000e6e <HAL_DMA_IRQHandler+0xc6>
 8000e84:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e88:	e7f1      	b.n	8000e6e <HAL_DMA_IRQHandler+0xc6>
 8000e8a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000e8e:	e7ee      	b.n	8000e6e <HAL_DMA_IRQHandler+0xc6>
 8000e90:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8000e94:	e7eb      	b.n	8000e6e <HAL_DMA_IRQHandler+0xc6>
 8000e96:	2508      	movs	r5, #8
 8000e98:	4095      	lsls	r5, r2
 8000e9a:	4225      	tst	r5, r4
 8000e9c:	d011      	beq.n	8000ec2 <HAL_DMA_IRQHandler+0x11a>
 8000e9e:	0709      	lsls	r1, r1, #28
 8000ea0:	d50f      	bpl.n	8000ec2 <HAL_DMA_IRQHandler+0x11a>
 8000ea2:	6819      	ldr	r1, [r3, #0]
 8000ea4:	f021 010e 	bic.w	r1, r1, #14
 8000ea8:	6019      	str	r1, [r3, #0]
 8000eaa:	2301      	movs	r3, #1
 8000eac:	fa03 f202 	lsl.w	r2, r3, r2
 8000eb0:	6072      	str	r2, [r6, #4]
 8000eb2:	6383      	str	r3, [r0, #56]	; 0x38
 8000eb4:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
 8000eb8:	2300      	movs	r3, #0
 8000eba:	f880 3020 	strb.w	r3, [r0, #32]
 8000ebe:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000ec0:	e79e      	b.n	8000e00 <HAL_DMA_IRQHandler+0x58>
 8000ec2:	bc70      	pop	{r4, r5, r6}
 8000ec4:	4770      	bx	lr
 8000ec6:	bf00      	nop
 8000ec8:	40020008 	.word	0x40020008
 8000ecc:	40020000 	.word	0x40020000

08000ed0 <FLASH_SetErrorCode>:
 8000ed0:	4a11      	ldr	r2, [pc, #68]	; (8000f18 <FLASH_SetErrorCode+0x48>)
 8000ed2:	68d3      	ldr	r3, [r2, #12]
 8000ed4:	f013 0310 	ands.w	r3, r3, #16
 8000ed8:	d005      	beq.n	8000ee6 <FLASH_SetErrorCode+0x16>
 8000eda:	4910      	ldr	r1, [pc, #64]	; (8000f1c <FLASH_SetErrorCode+0x4c>)
 8000edc:	69cb      	ldr	r3, [r1, #28]
 8000ede:	f043 0302 	orr.w	r3, r3, #2
 8000ee2:	61cb      	str	r3, [r1, #28]
 8000ee4:	2310      	movs	r3, #16
 8000ee6:	68d2      	ldr	r2, [r2, #12]
 8000ee8:	0750      	lsls	r0, r2, #29
 8000eea:	d506      	bpl.n	8000efa <FLASH_SetErrorCode+0x2a>
 8000eec:	490b      	ldr	r1, [pc, #44]	; (8000f1c <FLASH_SetErrorCode+0x4c>)
 8000eee:	f043 0304 	orr.w	r3, r3, #4
 8000ef2:	69ca      	ldr	r2, [r1, #28]
 8000ef4:	f042 0201 	orr.w	r2, r2, #1
 8000ef8:	61ca      	str	r2, [r1, #28]
 8000efa:	4a07      	ldr	r2, [pc, #28]	; (8000f18 <FLASH_SetErrorCode+0x48>)
 8000efc:	69d1      	ldr	r1, [r2, #28]
 8000efe:	07c9      	lsls	r1, r1, #31
 8000f00:	d508      	bpl.n	8000f14 <FLASH_SetErrorCode+0x44>
 8000f02:	4806      	ldr	r0, [pc, #24]	; (8000f1c <FLASH_SetErrorCode+0x4c>)
 8000f04:	69c1      	ldr	r1, [r0, #28]
 8000f06:	f041 0104 	orr.w	r1, r1, #4
 8000f0a:	61c1      	str	r1, [r0, #28]
 8000f0c:	69d1      	ldr	r1, [r2, #28]
 8000f0e:	f021 0101 	bic.w	r1, r1, #1
 8000f12:	61d1      	str	r1, [r2, #28]
 8000f14:	60d3      	str	r3, [r2, #12]
 8000f16:	4770      	bx	lr
 8000f18:	40022000 	.word	0x40022000
 8000f1c:	20000950 	.word	0x20000950

08000f20 <HAL_FLASH_Unlock>:
 8000f20:	4b06      	ldr	r3, [pc, #24]	; (8000f3c <HAL_FLASH_Unlock+0x1c>)
 8000f22:	6918      	ldr	r0, [r3, #16]
 8000f24:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000f28:	d007      	beq.n	8000f3a <HAL_FLASH_Unlock+0x1a>
 8000f2a:	4a05      	ldr	r2, [pc, #20]	; (8000f40 <HAL_FLASH_Unlock+0x20>)
 8000f2c:	605a      	str	r2, [r3, #4]
 8000f2e:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
 8000f32:	605a      	str	r2, [r3, #4]
 8000f34:	6918      	ldr	r0, [r3, #16]
 8000f36:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8000f3a:	4770      	bx	lr
 8000f3c:	40022000 	.word	0x40022000
 8000f40:	45670123 	.word	0x45670123

08000f44 <HAL_FLASH_Lock>:
 8000f44:	4a03      	ldr	r2, [pc, #12]	; (8000f54 <HAL_FLASH_Lock+0x10>)
 8000f46:	2000      	movs	r0, #0
 8000f48:	6913      	ldr	r3, [r2, #16]
 8000f4a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f4e:	6113      	str	r3, [r2, #16]
 8000f50:	4770      	bx	lr
 8000f52:	bf00      	nop
 8000f54:	40022000 	.word	0x40022000

08000f58 <FLASH_WaitForLastOperation>:
 8000f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f5a:	4606      	mov	r6, r0
 8000f5c:	f7ff fbc4 	bl	80006e8 <HAL_GetTick>
 8000f60:	4c11      	ldr	r4, [pc, #68]	; (8000fa8 <FLASH_WaitForLastOperation+0x50>)
 8000f62:	4607      	mov	r7, r0
 8000f64:	4625      	mov	r5, r4
 8000f66:	68e3      	ldr	r3, [r4, #12]
 8000f68:	07d8      	lsls	r0, r3, #31
 8000f6a:	d412      	bmi.n	8000f92 <FLASH_WaitForLastOperation+0x3a>
 8000f6c:	68e3      	ldr	r3, [r4, #12]
 8000f6e:	0699      	lsls	r1, r3, #26
 8000f70:	bf44      	itt	mi
 8000f72:	2320      	movmi	r3, #32
 8000f74:	60e3      	strmi	r3, [r4, #12]
 8000f76:	68eb      	ldr	r3, [r5, #12]
 8000f78:	06da      	lsls	r2, r3, #27
 8000f7a:	d406      	bmi.n	8000f8a <FLASH_WaitForLastOperation+0x32>
 8000f7c:	69eb      	ldr	r3, [r5, #28]
 8000f7e:	07db      	lsls	r3, r3, #31
 8000f80:	d403      	bmi.n	8000f8a <FLASH_WaitForLastOperation+0x32>
 8000f82:	68e8      	ldr	r0, [r5, #12]
 8000f84:	f010 0004 	ands.w	r0, r0, #4
 8000f88:	d007      	beq.n	8000f9a <FLASH_WaitForLastOperation+0x42>
 8000f8a:	f7ff ffa1 	bl	8000ed0 <FLASH_SetErrorCode>
 8000f8e:	2001      	movs	r0, #1
 8000f90:	e003      	b.n	8000f9a <FLASH_WaitForLastOperation+0x42>
 8000f92:	1c73      	adds	r3, r6, #1
 8000f94:	d0e7      	beq.n	8000f66 <FLASH_WaitForLastOperation+0xe>
 8000f96:	b90e      	cbnz	r6, 8000f9c <FLASH_WaitForLastOperation+0x44>
 8000f98:	2003      	movs	r0, #3
 8000f9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f9c:	f7ff fba4 	bl	80006e8 <HAL_GetTick>
 8000fa0:	1bc0      	subs	r0, r0, r7
 8000fa2:	42b0      	cmp	r0, r6
 8000fa4:	d9df      	bls.n	8000f66 <FLASH_WaitForLastOperation+0xe>
 8000fa6:	e7f7      	b.n	8000f98 <FLASH_WaitForLastOperation+0x40>
 8000fa8:	40022000 	.word	0x40022000

08000fac <HAL_FLASH_Program>:
 8000fac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fb0:	4c24      	ldr	r4, [pc, #144]	; (8001044 <HAL_FLASH_Program+0x98>)
 8000fb2:	461e      	mov	r6, r3
 8000fb4:	7e23      	ldrb	r3, [r4, #24]
 8000fb6:	4605      	mov	r5, r0
 8000fb8:	2b01      	cmp	r3, #1
 8000fba:	460f      	mov	r7, r1
 8000fbc:	4690      	mov	r8, r2
 8000fbe:	d03f      	beq.n	8001040 <HAL_FLASH_Program+0x94>
 8000fc0:	2301      	movs	r3, #1
 8000fc2:	f24c 3050 	movw	r0, #50000	; 0xc350
 8000fc6:	7623      	strb	r3, [r4, #24]
 8000fc8:	f7ff ffc6 	bl	8000f58 <FLASH_WaitForLastOperation>
 8000fcc:	bba0      	cbnz	r0, 8001038 <HAL_FLASH_Program+0x8c>
 8000fce:	2d01      	cmp	r5, #1
 8000fd0:	d003      	beq.n	8000fda <HAL_FLASH_Program+0x2e>
 8000fd2:	2d02      	cmp	r5, #2
 8000fd4:	bf0c      	ite	eq
 8000fd6:	2502      	moveq	r5, #2
 8000fd8:	2504      	movne	r5, #4
 8000fda:	f04f 0900 	mov.w	r9, #0
 8000fde:	46cb      	mov	fp, r9
 8000fe0:	f8df a064 	ldr.w	sl, [pc, #100]	; 8001048 <HAL_FLASH_Program+0x9c>
 8000fe4:	ea4f 1309 	mov.w	r3, r9, lsl #4
 8000fe8:	f1c3 0120 	rsb	r1, r3, #32
 8000fec:	f1a3 0220 	sub.w	r2, r3, #32
 8000ff0:	fa06 f101 	lsl.w	r1, r6, r1
 8000ff4:	fa28 f303 	lsr.w	r3, r8, r3
 8000ff8:	f8c4 b01c 	str.w	fp, [r4, #28]
 8000ffc:	430b      	orrs	r3, r1
 8000ffe:	fa26 f202 	lsr.w	r2, r6, r2
 8001002:	4313      	orrs	r3, r2
 8001004:	f8da 2010 	ldr.w	r2, [sl, #16]
 8001008:	b29b      	uxth	r3, r3
 800100a:	f042 0201 	orr.w	r2, r2, #1
 800100e:	f8ca 2010 	str.w	r2, [sl, #16]
 8001012:	f24c 3050 	movw	r0, #50000	; 0xc350
 8001016:	f827 3019 	strh.w	r3, [r7, r9, lsl #1]
 800101a:	f7ff ff9d 	bl	8000f58 <FLASH_WaitForLastOperation>
 800101e:	f8da 3010 	ldr.w	r3, [sl, #16]
 8001022:	f023 0301 	bic.w	r3, r3, #1
 8001026:	f8ca 3010 	str.w	r3, [sl, #16]
 800102a:	b928      	cbnz	r0, 8001038 <HAL_FLASH_Program+0x8c>
 800102c:	f109 0901 	add.w	r9, r9, #1
 8001030:	fa5f f389 	uxtb.w	r3, r9
 8001034:	429d      	cmp	r5, r3
 8001036:	d8d5      	bhi.n	8000fe4 <HAL_FLASH_Program+0x38>
 8001038:	2300      	movs	r3, #0
 800103a:	7623      	strb	r3, [r4, #24]
 800103c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001040:	2002      	movs	r0, #2
 8001042:	e7fb      	b.n	800103c <HAL_FLASH_Program+0x90>
 8001044:	20000950 	.word	0x20000950
 8001048:	40022000 	.word	0x40022000

0800104c <FLASH_MassErase.isra.0>:
 800104c:	2200      	movs	r2, #0
 800104e:	4b06      	ldr	r3, [pc, #24]	; (8001068 <FLASH_MassErase.isra.0+0x1c>)
 8001050:	61da      	str	r2, [r3, #28]
 8001052:	4b06      	ldr	r3, [pc, #24]	; (800106c <FLASH_MassErase.isra.0+0x20>)
 8001054:	691a      	ldr	r2, [r3, #16]
 8001056:	f042 0204 	orr.w	r2, r2, #4
 800105a:	611a      	str	r2, [r3, #16]
 800105c:	691a      	ldr	r2, [r3, #16]
 800105e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001062:	611a      	str	r2, [r3, #16]
 8001064:	4770      	bx	lr
 8001066:	bf00      	nop
 8001068:	20000950 	.word	0x20000950
 800106c:	40022000 	.word	0x40022000

08001070 <FLASH_PageErase>:
 8001070:	2200      	movs	r2, #0
 8001072:	4b06      	ldr	r3, [pc, #24]	; (800108c <FLASH_PageErase+0x1c>)
 8001074:	61da      	str	r2, [r3, #28]
 8001076:	4b06      	ldr	r3, [pc, #24]	; (8001090 <FLASH_PageErase+0x20>)
 8001078:	691a      	ldr	r2, [r3, #16]
 800107a:	f042 0202 	orr.w	r2, r2, #2
 800107e:	611a      	str	r2, [r3, #16]
 8001080:	6158      	str	r0, [r3, #20]
 8001082:	691a      	ldr	r2, [r3, #16]
 8001084:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001088:	611a      	str	r2, [r3, #16]
 800108a:	4770      	bx	lr
 800108c:	20000950 	.word	0x20000950
 8001090:	40022000 	.word	0x40022000

08001094 <HAL_FLASHEx_Erase>:
 8001094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001098:	4d22      	ldr	r5, [pc, #136]	; (8001124 <HAL_FLASHEx_Erase+0x90>)
 800109a:	4607      	mov	r7, r0
 800109c:	7e2b      	ldrb	r3, [r5, #24]
 800109e:	4688      	mov	r8, r1
 80010a0:	2b01      	cmp	r3, #1
 80010a2:	d03d      	beq.n	8001120 <HAL_FLASHEx_Erase+0x8c>
 80010a4:	2401      	movs	r4, #1
 80010a6:	6803      	ldr	r3, [r0, #0]
 80010a8:	762c      	strb	r4, [r5, #24]
 80010aa:	2b02      	cmp	r3, #2
 80010ac:	f24c 3050 	movw	r0, #50000	; 0xc350
 80010b0:	d113      	bne.n	80010da <HAL_FLASHEx_Erase+0x46>
 80010b2:	f7ff ff51 	bl	8000f58 <FLASH_WaitForLastOperation>
 80010b6:	b120      	cbz	r0, 80010c2 <HAL_FLASHEx_Erase+0x2e>
 80010b8:	2001      	movs	r0, #1
 80010ba:	2300      	movs	r3, #0
 80010bc:	762b      	strb	r3, [r5, #24]
 80010be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010c2:	f7ff ffc3 	bl	800104c <FLASH_MassErase.isra.0>
 80010c6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80010ca:	f7ff ff45 	bl	8000f58 <FLASH_WaitForLastOperation>
 80010ce:	4a16      	ldr	r2, [pc, #88]	; (8001128 <HAL_FLASHEx_Erase+0x94>)
 80010d0:	6913      	ldr	r3, [r2, #16]
 80010d2:	f023 0304 	bic.w	r3, r3, #4
 80010d6:	6113      	str	r3, [r2, #16]
 80010d8:	e7ef      	b.n	80010ba <HAL_FLASHEx_Erase+0x26>
 80010da:	f7ff ff3d 	bl	8000f58 <FLASH_WaitForLastOperation>
 80010de:	2800      	cmp	r0, #0
 80010e0:	d1ea      	bne.n	80010b8 <HAL_FLASHEx_Erase+0x24>
 80010e2:	f04f 33ff 	mov.w	r3, #4294967295
 80010e6:	f8c8 3000 	str.w	r3, [r8]
 80010ea:	4620      	mov	r0, r4
 80010ec:	68be      	ldr	r6, [r7, #8]
 80010ee:	4c0e      	ldr	r4, [pc, #56]	; (8001128 <HAL_FLASHEx_Erase+0x94>)
 80010f0:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
 80010f4:	eb03 2382 	add.w	r3, r3, r2, lsl #10
 80010f8:	42b3      	cmp	r3, r6
 80010fa:	d9de      	bls.n	80010ba <HAL_FLASHEx_Erase+0x26>
 80010fc:	4630      	mov	r0, r6
 80010fe:	f7ff ffb7 	bl	8001070 <FLASH_PageErase>
 8001102:	f24c 3050 	movw	r0, #50000	; 0xc350
 8001106:	f7ff ff27 	bl	8000f58 <FLASH_WaitForLastOperation>
 800110a:	6923      	ldr	r3, [r4, #16]
 800110c:	f023 0302 	bic.w	r3, r3, #2
 8001110:	6123      	str	r3, [r4, #16]
 8001112:	b110      	cbz	r0, 800111a <HAL_FLASHEx_Erase+0x86>
 8001114:	f8c8 6000 	str.w	r6, [r8]
 8001118:	e7cf      	b.n	80010ba <HAL_FLASHEx_Erase+0x26>
 800111a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800111e:	e7e7      	b.n	80010f0 <HAL_FLASHEx_Erase+0x5c>
 8001120:	2002      	movs	r0, #2
 8001122:	e7cc      	b.n	80010be <HAL_FLASHEx_Erase+0x2a>
 8001124:	20000950 	.word	0x20000950
 8001128:	40022000 	.word	0x40022000

0800112c <HAL_GPIO_Init>:
 800112c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001130:	2400      	movs	r4, #0
 8001132:	4626      	mov	r6, r4
 8001134:	4b65      	ldr	r3, [pc, #404]	; (80012cc <HAL_GPIO_Init+0x1a0>)
 8001136:	f8df c1a4 	ldr.w	ip, [pc, #420]	; 80012dc <HAL_GPIO_Init+0x1b0>
 800113a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 80012e0 <HAL_GPIO_Init+0x1b4>
 800113e:	680a      	ldr	r2, [r1, #0]
 8001140:	fa32 f506 	lsrs.w	r5, r2, r6
 8001144:	d102      	bne.n	800114c <HAL_GPIO_Init+0x20>
 8001146:	b003      	add	sp, #12
 8001148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800114c:	f04f 0801 	mov.w	r8, #1
 8001150:	fa08 f806 	lsl.w	r8, r8, r6
 8001154:	ea02 0208 	and.w	r2, r2, r8
 8001158:	4590      	cmp	r8, r2
 800115a:	d17e      	bne.n	800125a <HAL_GPIO_Init+0x12e>
 800115c:	684d      	ldr	r5, [r1, #4]
 800115e:	2d12      	cmp	r5, #18
 8001160:	f000 80a9 	beq.w	80012b6 <HAL_GPIO_Init+0x18a>
 8001164:	f200 8082 	bhi.w	800126c <HAL_GPIO_Init+0x140>
 8001168:	2d02      	cmp	r5, #2
 800116a:	f000 80a1 	beq.w	80012b0 <HAL_GPIO_Init+0x184>
 800116e:	d876      	bhi.n	800125e <HAL_GPIO_Init+0x132>
 8001170:	2d00      	cmp	r5, #0
 8001172:	f000 8088 	beq.w	8001286 <HAL_GPIO_Init+0x15a>
 8001176:	2d01      	cmp	r5, #1
 8001178:	f000 8098 	beq.w	80012ac <HAL_GPIO_Init+0x180>
 800117c:	f04f 090f 	mov.w	r9, #15
 8001180:	2aff      	cmp	r2, #255	; 0xff
 8001182:	bf93      	iteet	ls
 8001184:	4682      	movls	sl, r0
 8001186:	f106 4580 	addhi.w	r5, r6, #1073741824	; 0x40000000
 800118a:	3d08      	subhi	r5, #8
 800118c:	f8d0 b000 	ldrls.w	fp, [r0]
 8001190:	bf92      	itee	ls
 8001192:	00b5      	lslls	r5, r6, #2
 8001194:	f8d0 b004 	ldrhi.w	fp, [r0, #4]
 8001198:	00ad      	lslhi	r5, r5, #2
 800119a:	fa09 f805 	lsl.w	r8, r9, r5
 800119e:	ea2b 0808 	bic.w	r8, fp, r8
 80011a2:	fa04 f505 	lsl.w	r5, r4, r5
 80011a6:	bf88      	it	hi
 80011a8:	f100 0a04 	addhi.w	sl, r0, #4
 80011ac:	ea48 0505 	orr.w	r5, r8, r5
 80011b0:	f8ca 5000 	str.w	r5, [sl]
 80011b4:	f8d1 a004 	ldr.w	sl, [r1, #4]
 80011b8:	f01a 5f80 	tst.w	sl, #268435456	; 0x10000000
 80011bc:	d04d      	beq.n	800125a <HAL_GPIO_Init+0x12e>
 80011be:	4f44      	ldr	r7, [pc, #272]	; (80012d0 <HAL_GPIO_Init+0x1a4>)
 80011c0:	f026 0803 	bic.w	r8, r6, #3
 80011c4:	69bd      	ldr	r5, [r7, #24]
 80011c6:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
 80011ca:	f045 0501 	orr.w	r5, r5, #1
 80011ce:	61bd      	str	r5, [r7, #24]
 80011d0:	69bd      	ldr	r5, [r7, #24]
 80011d2:	f508 3880 	add.w	r8, r8, #65536	; 0x10000
 80011d6:	f005 0501 	and.w	r5, r5, #1
 80011da:	9501      	str	r5, [sp, #4]
 80011dc:	f006 0b03 	and.w	fp, r6, #3
 80011e0:	9d01      	ldr	r5, [sp, #4]
 80011e2:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80011e6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80011ea:	fa09 f90b 	lsl.w	r9, r9, fp
 80011ee:	ea25 0909 	bic.w	r9, r5, r9
 80011f2:	4d38      	ldr	r5, [pc, #224]	; (80012d4 <HAL_GPIO_Init+0x1a8>)
 80011f4:	42a8      	cmp	r0, r5
 80011f6:	d063      	beq.n	80012c0 <HAL_GPIO_Init+0x194>
 80011f8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80011fc:	42a8      	cmp	r0, r5
 80011fe:	d061      	beq.n	80012c4 <HAL_GPIO_Init+0x198>
 8001200:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8001204:	42a8      	cmp	r0, r5
 8001206:	d05f      	beq.n	80012c8 <HAL_GPIO_Init+0x19c>
 8001208:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800120c:	42a8      	cmp	r0, r5
 800120e:	bf0c      	ite	eq
 8001210:	2503      	moveq	r5, #3
 8001212:	2504      	movne	r5, #4
 8001214:	fa05 f50b 	lsl.w	r5, r5, fp
 8001218:	ea45 0509 	orr.w	r5, r5, r9
 800121c:	f8c8 5008 	str.w	r5, [r8, #8]
 8001220:	681d      	ldr	r5, [r3, #0]
 8001222:	f41a 3f80 	tst.w	sl, #65536	; 0x10000
 8001226:	bf14      	ite	ne
 8001228:	4315      	orrne	r5, r2
 800122a:	4395      	biceq	r5, r2
 800122c:	601d      	str	r5, [r3, #0]
 800122e:	685d      	ldr	r5, [r3, #4]
 8001230:	f41a 3f00 	tst.w	sl, #131072	; 0x20000
 8001234:	bf14      	ite	ne
 8001236:	4315      	orrne	r5, r2
 8001238:	4395      	biceq	r5, r2
 800123a:	605d      	str	r5, [r3, #4]
 800123c:	689d      	ldr	r5, [r3, #8]
 800123e:	f41a 1f80 	tst.w	sl, #1048576	; 0x100000
 8001242:	bf14      	ite	ne
 8001244:	4315      	orrne	r5, r2
 8001246:	4395      	biceq	r5, r2
 8001248:	609d      	str	r5, [r3, #8]
 800124a:	68dd      	ldr	r5, [r3, #12]
 800124c:	f41a 1f00 	tst.w	sl, #2097152	; 0x200000
 8001250:	bf14      	ite	ne
 8001252:	432a      	orrne	r2, r5
 8001254:	ea25 0202 	biceq.w	r2, r5, r2
 8001258:	60da      	str	r2, [r3, #12]
 800125a:	3601      	adds	r6, #1
 800125c:	e76f      	b.n	800113e <HAL_GPIO_Init+0x12>
 800125e:	2d03      	cmp	r5, #3
 8001260:	d022      	beq.n	80012a8 <HAL_GPIO_Init+0x17c>
 8001262:	2d11      	cmp	r5, #17
 8001264:	d18a      	bne.n	800117c <HAL_GPIO_Init+0x50>
 8001266:	68cc      	ldr	r4, [r1, #12]
 8001268:	3404      	adds	r4, #4
 800126a:	e787      	b.n	800117c <HAL_GPIO_Init+0x50>
 800126c:	4f1a      	ldr	r7, [pc, #104]	; (80012d8 <HAL_GPIO_Init+0x1ac>)
 800126e:	42bd      	cmp	r5, r7
 8001270:	d009      	beq.n	8001286 <HAL_GPIO_Init+0x15a>
 8001272:	d812      	bhi.n	800129a <HAL_GPIO_Init+0x16e>
 8001274:	f8df 906c 	ldr.w	r9, [pc, #108]	; 80012e4 <HAL_GPIO_Init+0x1b8>
 8001278:	454d      	cmp	r5, r9
 800127a:	d004      	beq.n	8001286 <HAL_GPIO_Init+0x15a>
 800127c:	f509 3980 	add.w	r9, r9, #65536	; 0x10000
 8001280:	454d      	cmp	r5, r9
 8001282:	f47f af7b 	bne.w	800117c <HAL_GPIO_Init+0x50>
 8001286:	688c      	ldr	r4, [r1, #8]
 8001288:	b1c4      	cbz	r4, 80012bc <HAL_GPIO_Init+0x190>
 800128a:	2c01      	cmp	r4, #1
 800128c:	bf0c      	ite	eq
 800128e:	f8c0 8010 	streq.w	r8, [r0, #16]
 8001292:	f8c0 8014 	strne.w	r8, [r0, #20]
 8001296:	2408      	movs	r4, #8
 8001298:	e770      	b.n	800117c <HAL_GPIO_Init+0x50>
 800129a:	4565      	cmp	r5, ip
 800129c:	d0f3      	beq.n	8001286 <HAL_GPIO_Init+0x15a>
 800129e:	4575      	cmp	r5, lr
 80012a0:	d0f1      	beq.n	8001286 <HAL_GPIO_Init+0x15a>
 80012a2:	f8df 9044 	ldr.w	r9, [pc, #68]	; 80012e8 <HAL_GPIO_Init+0x1bc>
 80012a6:	e7eb      	b.n	8001280 <HAL_GPIO_Init+0x154>
 80012a8:	2400      	movs	r4, #0
 80012aa:	e767      	b.n	800117c <HAL_GPIO_Init+0x50>
 80012ac:	68cc      	ldr	r4, [r1, #12]
 80012ae:	e765      	b.n	800117c <HAL_GPIO_Init+0x50>
 80012b0:	68cc      	ldr	r4, [r1, #12]
 80012b2:	3408      	adds	r4, #8
 80012b4:	e762      	b.n	800117c <HAL_GPIO_Init+0x50>
 80012b6:	68cc      	ldr	r4, [r1, #12]
 80012b8:	340c      	adds	r4, #12
 80012ba:	e75f      	b.n	800117c <HAL_GPIO_Init+0x50>
 80012bc:	2404      	movs	r4, #4
 80012be:	e75d      	b.n	800117c <HAL_GPIO_Init+0x50>
 80012c0:	2500      	movs	r5, #0
 80012c2:	e7a7      	b.n	8001214 <HAL_GPIO_Init+0xe8>
 80012c4:	2501      	movs	r5, #1
 80012c6:	e7a5      	b.n	8001214 <HAL_GPIO_Init+0xe8>
 80012c8:	2502      	movs	r5, #2
 80012ca:	e7a3      	b.n	8001214 <HAL_GPIO_Init+0xe8>
 80012cc:	40010400 	.word	0x40010400
 80012d0:	40021000 	.word	0x40021000
 80012d4:	40010800 	.word	0x40010800
 80012d8:	10210000 	.word	0x10210000
 80012dc:	10310000 	.word	0x10310000
 80012e0:	10320000 	.word	0x10320000
 80012e4:	10110000 	.word	0x10110000
 80012e8:	10220000 	.word	0x10220000

080012ec <HAL_GPIO_ReadPin>:
 80012ec:	6883      	ldr	r3, [r0, #8]
 80012ee:	4219      	tst	r1, r3
 80012f0:	bf14      	ite	ne
 80012f2:	2001      	movne	r0, #1
 80012f4:	2000      	moveq	r0, #0
 80012f6:	4770      	bx	lr

080012f8 <HAL_GPIO_WritePin>:
 80012f8:	b10a      	cbz	r2, 80012fe <HAL_GPIO_WritePin+0x6>
 80012fa:	6101      	str	r1, [r0, #16]
 80012fc:	4770      	bx	lr
 80012fe:	0409      	lsls	r1, r1, #16
 8001300:	e7fb      	b.n	80012fa <HAL_GPIO_WritePin+0x2>

08001302 <HAL_PCD_Init>:
 8001302:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001304:	4604      	mov	r4, r0
 8001306:	b087      	sub	sp, #28
 8001308:	b310      	cbz	r0, 8001350 <HAL_PCD_Init+0x4e>
 800130a:	f890 3229 	ldrb.w	r3, [r0, #553]	; 0x229
 800130e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001312:	b91b      	cbnz	r3, 800131c <HAL_PCD_Init+0x1a>
 8001314:	f880 2228 	strb.w	r2, [r0, #552]	; 0x228
 8001318:	f005 f8b0 	bl	800647c <HAL_PCD_MspInit>
 800131c:	4625      	mov	r5, r4
 800131e:	2303      	movs	r3, #3
 8001320:	466e      	mov	r6, sp
 8001322:	f855 0b10 	ldr.w	r0, [r5], #16
 8001326:	f884 3229 	strb.w	r3, [r4, #553]	; 0x229
 800132a:	f001 fd40 	bl	8002dae <USB_DisableGlobalInt>
 800132e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001330:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8001332:	682b      	ldr	r3, [r5, #0]
 8001334:	4625      	mov	r5, r4
 8001336:	6033      	str	r3, [r6, #0]
 8001338:	1d27      	adds	r7, r4, #4
 800133a:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 800133e:	f855 0b10 	ldr.w	r0, [r5], #16
 8001342:	f001 fd25 	bl	8002d90 <USB_CoreInit>
 8001346:	4606      	mov	r6, r0
 8001348:	b120      	cbz	r0, 8001354 <HAL_PCD_Init+0x52>
 800134a:	2302      	movs	r3, #2
 800134c:	f884 3229 	strb.w	r3, [r4, #553]	; 0x229
 8001350:	2501      	movs	r5, #1
 8001352:	e048      	b.n	80013e6 <HAL_PCD_Init+0xe4>
 8001354:	4601      	mov	r1, r0
 8001356:	6820      	ldr	r0, [r4, #0]
 8001358:	f001 fd33 	bl	8002dc2 <USB_SetCurrentMode>
 800135c:	4630      	mov	r0, r6
 800135e:	f04f 0c01 	mov.w	ip, #1
 8001362:	6861      	ldr	r1, [r4, #4]
 8001364:	b2c3      	uxtb	r3, r0
 8001366:	4299      	cmp	r1, r3
 8001368:	f100 0001 	add.w	r0, r0, #1
 800136c:	d817      	bhi.n	800139e <HAL_PCD_Init+0x9c>
 800136e:	2200      	movs	r2, #0
 8001370:	4610      	mov	r0, r2
 8001372:	b2d3      	uxtb	r3, r2
 8001374:	4299      	cmp	r1, r3
 8001376:	f102 0201 	add.w	r2, r2, #1
 800137a:	d81d      	bhi.n	80013b8 <HAL_PCD_Init+0xb6>
 800137c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800137e:	466e      	mov	r6, sp
 8001380:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8001382:	682b      	ldr	r3, [r5, #0]
 8001384:	6033      	str	r3, [r6, #0]
 8001386:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 800138a:	6820      	ldr	r0, [r4, #0]
 800138c:	f001 fd1b 	bl	8002dc6 <USB_DevInit>
 8001390:	2301      	movs	r3, #1
 8001392:	4605      	mov	r5, r0
 8001394:	b300      	cbz	r0, 80013d8 <HAL_PCD_Init+0xd6>
 8001396:	2202      	movs	r2, #2
 8001398:	f884 2229 	strb.w	r2, [r4, #553]	; 0x229
 800139c:	e7d8      	b.n	8001350 <HAL_PCD_Init+0x4e>
 800139e:	eb04 1243 	add.w	r2, r4, r3, lsl #5
 80013a2:	f882 c029 	strb.w	ip, [r2, #41]	; 0x29
 80013a6:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
 80013aa:	86d3      	strh	r3, [r2, #54]	; 0x36
 80013ac:	f882 602b 	strb.w	r6, [r2, #43]	; 0x2b
 80013b0:	e9c2 660e 	strd	r6, r6, [r2, #56]	; 0x38
 80013b4:	6416      	str	r6, [r2, #64]	; 0x40
 80013b6:	e7d5      	b.n	8001364 <HAL_PCD_Init+0x62>
 80013b8:	eb04 1643 	add.w	r6, r4, r3, lsl #5
 80013bc:	f886 3128 	strb.w	r3, [r6, #296]	; 0x128
 80013c0:	330a      	adds	r3, #10
 80013c2:	015b      	lsls	r3, r3, #5
 80013c4:	f886 0129 	strb.w	r0, [r6, #297]	; 0x129
 80013c8:	f886 012b 	strb.w	r0, [r6, #299]	; 0x12b
 80013cc:	f8c6 0138 	str.w	r0, [r6, #312]	; 0x138
 80013d0:	f8c6 013c 	str.w	r0, [r6, #316]	; 0x13c
 80013d4:	50e0      	str	r0, [r4, r3]
 80013d6:	e7cc      	b.n	8001372 <HAL_PCD_Init+0x70>
 80013d8:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80013dc:	f884 3229 	strb.w	r3, [r4, #553]	; 0x229
 80013e0:	6820      	ldr	r0, [r4, #0]
 80013e2:	f001 ff92 	bl	800330a <USB_DevDisconnect>
 80013e6:	4628      	mov	r0, r5
 80013e8:	b007      	add	sp, #28
 80013ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080013ec <HAL_PCD_Start>:
 80013ec:	f890 3228 	ldrb.w	r3, [r0, #552]	; 0x228
 80013f0:	b510      	push	{r4, lr}
 80013f2:	2b01      	cmp	r3, #1
 80013f4:	4604      	mov	r4, r0
 80013f6:	d00e      	beq.n	8001416 <HAL_PCD_Start+0x2a>
 80013f8:	2101      	movs	r1, #1
 80013fa:	f880 1228 	strb.w	r1, [r0, #552]	; 0x228
 80013fe:	f005 f96a 	bl	80066d6 <HAL_PCDEx_SetConnectionState>
 8001402:	6820      	ldr	r0, [r4, #0]
 8001404:	f001 ff7f 	bl	8003306 <USB_DevConnect>
 8001408:	6820      	ldr	r0, [r4, #0]
 800140a:	f001 fcc8 	bl	8002d9e <USB_EnableGlobalInt>
 800140e:	2000      	movs	r0, #0
 8001410:	f884 0228 	strb.w	r0, [r4, #552]	; 0x228
 8001414:	bd10      	pop	{r4, pc}
 8001416:	2002      	movs	r0, #2
 8001418:	e7fc      	b.n	8001414 <HAL_PCD_Start+0x28>

0800141a <HAL_PCD_SetAddress>:
 800141a:	f890 2228 	ldrb.w	r2, [r0, #552]	; 0x228
 800141e:	b510      	push	{r4, lr}
 8001420:	2a01      	cmp	r2, #1
 8001422:	4604      	mov	r4, r0
 8001424:	d00b      	beq.n	800143e <HAL_PCD_SetAddress+0x24>
 8001426:	2201      	movs	r2, #1
 8001428:	f880 2228 	strb.w	r2, [r0, #552]	; 0x228
 800142c:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8001430:	6800      	ldr	r0, [r0, #0]
 8001432:	f001 ff62 	bl	80032fa <USB_SetDevAddress>
 8001436:	2000      	movs	r0, #0
 8001438:	f884 0228 	strb.w	r0, [r4, #552]	; 0x228
 800143c:	bd10      	pop	{r4, pc}
 800143e:	2002      	movs	r0, #2
 8001440:	e7fc      	b.n	800143c <HAL_PCD_SetAddress+0x22>

08001442 <HAL_PCD_EP_Open>:
 8001442:	b570      	push	{r4, r5, r6, lr}
 8001444:	4604      	mov	r4, r0
 8001446:	f001 0507 	and.w	r5, r1, #7
 800144a:	f011 0f80 	tst.w	r1, #128	; 0x80
 800144e:	ea4f 1045 	mov.w	r0, r5, lsl #5
 8001452:	bf14      	ite	ne
 8001454:	f100 0128 	addne.w	r1, r0, #40	; 0x28
 8001458:	f500 7194 	addeq.w	r1, r0, #296	; 0x128
 800145c:	eb04 0600 	add.w	r6, r4, r0
 8001460:	bf17      	itett	ne
 8001462:	2001      	movne	r0, #1
 8001464:	2000      	moveq	r0, #0
 8001466:	1909      	addne	r1, r1, r4
 8001468:	f886 0029 	strbne.w	r0, [r6, #41]	; 0x29
 800146c:	bf04      	itt	eq
 800146e:	1909      	addeq	r1, r1, r4
 8001470:	f886 0129 	strbeq.w	r0, [r6, #297]	; 0x129
 8001474:	610a      	str	r2, [r1, #16]
 8001476:	784a      	ldrb	r2, [r1, #1]
 8001478:	700d      	strb	r5, [r1, #0]
 800147a:	70cb      	strb	r3, [r1, #3]
 800147c:	b102      	cbz	r2, 8001480 <HAL_PCD_EP_Open+0x3e>
 800147e:	81cd      	strh	r5, [r1, #14]
 8001480:	2b02      	cmp	r3, #2
 8001482:	bf04      	itt	eq
 8001484:	2300      	moveq	r3, #0
 8001486:	710b      	strbeq	r3, [r1, #4]
 8001488:	f894 3228 	ldrb.w	r3, [r4, #552]	; 0x228
 800148c:	2b01      	cmp	r3, #1
 800148e:	d009      	beq.n	80014a4 <HAL_PCD_EP_Open+0x62>
 8001490:	2301      	movs	r3, #1
 8001492:	6820      	ldr	r0, [r4, #0]
 8001494:	f884 3228 	strb.w	r3, [r4, #552]	; 0x228
 8001498:	f001 fcb0 	bl	8002dfc <USB_ActivateEndpoint>
 800149c:	2000      	movs	r0, #0
 800149e:	f884 0228 	strb.w	r0, [r4, #552]	; 0x228
 80014a2:	bd70      	pop	{r4, r5, r6, pc}
 80014a4:	2002      	movs	r0, #2
 80014a6:	e7fc      	b.n	80014a2 <HAL_PCD_EP_Open+0x60>

080014a8 <HAL_PCD_EP_Close>:
 80014a8:	f001 0207 	and.w	r2, r1, #7
 80014ac:	f011 0f80 	tst.w	r1, #128	; 0x80
 80014b0:	ea4f 1342 	mov.w	r3, r2, lsl #5
 80014b4:	b510      	push	{r4, lr}
 80014b6:	4604      	mov	r4, r0
 80014b8:	bf18      	it	ne
 80014ba:	f103 0128 	addne.w	r1, r3, #40	; 0x28
 80014be:	4418      	add	r0, r3
 80014c0:	bf0b      	itete	eq
 80014c2:	f503 7194 	addeq.w	r1, r3, #296	; 0x128
 80014c6:	2301      	movne	r3, #1
 80014c8:	2300      	moveq	r3, #0
 80014ca:	1909      	addne	r1, r1, r4
 80014cc:	bf0a      	itet	eq
 80014ce:	1909      	addeq	r1, r1, r4
 80014d0:	f880 3029 	strbne.w	r3, [r0, #41]	; 0x29
 80014d4:	f880 3129 	strbeq.w	r3, [r0, #297]	; 0x129
 80014d8:	700a      	strb	r2, [r1, #0]
 80014da:	f894 3228 	ldrb.w	r3, [r4, #552]	; 0x228
 80014de:	2b01      	cmp	r3, #1
 80014e0:	d009      	beq.n	80014f6 <HAL_PCD_EP_Close+0x4e>
 80014e2:	2301      	movs	r3, #1
 80014e4:	6820      	ldr	r0, [r4, #0]
 80014e6:	f884 3228 	strb.w	r3, [r4, #552]	; 0x228
 80014ea:	f001 fde1 	bl	80030b0 <USB_DeactivateEndpoint>
 80014ee:	2000      	movs	r0, #0
 80014f0:	f884 0228 	strb.w	r0, [r4, #552]	; 0x228
 80014f4:	bd10      	pop	{r4, pc}
 80014f6:	2002      	movs	r0, #2
 80014f8:	e7fc      	b.n	80014f4 <HAL_PCD_EP_Close+0x4c>

080014fa <HAL_PCD_EP_Receive>:
 80014fa:	b570      	push	{r4, r5, r6, lr}
 80014fc:	2600      	movs	r6, #0
 80014fe:	f001 0107 	and.w	r1, r1, #7
 8001502:	014d      	lsls	r5, r1, #5
 8001504:	1944      	adds	r4, r0, r5
 8001506:	f884 1128 	strb.w	r1, [r4, #296]	; 0x128
 800150a:	f505 7194 	add.w	r1, r5, #296	; 0x128
 800150e:	4401      	add	r1, r0
 8001510:	f8c4 213c 	str.w	r2, [r4, #316]	; 0x13c
 8001514:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 8001518:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 800151c:	f884 6129 	strb.w	r6, [r4, #297]	; 0x129
 8001520:	6800      	ldr	r0, [r0, #0]
 8001522:	f001 ff09 	bl	8003338 <USB_EPStartXfer>
 8001526:	4630      	mov	r0, r6
 8001528:	bd70      	pop	{r4, r5, r6, pc}

0800152a <HAL_PCD_EP_GetRxCount>:
 800152a:	f001 0107 	and.w	r1, r1, #7
 800152e:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 8001532:	f8d1 0144 	ldr.w	r0, [r1, #324]	; 0x144
 8001536:	4770      	bx	lr

08001538 <HAL_PCD_EP_Transmit>:
 8001538:	f001 0107 	and.w	r1, r1, #7
 800153c:	b570      	push	{r4, r5, r6, lr}
 800153e:	014d      	lsls	r5, r1, #5
 8001540:	1944      	adds	r4, r0, r5
 8001542:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8001546:	2600      	movs	r6, #0
 8001548:	2301      	movs	r3, #1
 800154a:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 800154e:	f105 0128 	add.w	r1, r5, #40	; 0x28
 8001552:	4401      	add	r1, r0
 8001554:	6466      	str	r6, [r4, #68]	; 0x44
 8001556:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800155a:	6800      	ldr	r0, [r0, #0]
 800155c:	f001 feec 	bl	8003338 <USB_EPStartXfer>
 8001560:	4630      	mov	r0, r6
 8001562:	bd70      	pop	{r4, r5, r6, pc}

08001564 <HAL_PCD_IRQHandler>:
 8001564:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001568:	4604      	mov	r4, r0
 800156a:	6800      	ldr	r0, [r0, #0]
 800156c:	f001 fecf 	bl	800330e <USB_ReadInterrupts>
 8001570:	0402      	lsls	r2, r0, #16
 8001572:	d50b      	bpl.n	800158c <HAL_PCD_IRQHandler+0x28>
 8001574:	f8df 940c 	ldr.w	r9, [pc, #1036]	; 8001984 <HAL_PCD_IRQHandler+0x420>
 8001578:	f8df a40c 	ldr.w	sl, [pc, #1036]	; 8001988 <HAL_PCD_IRQHandler+0x424>
 800157c:	f8df b40c 	ldr.w	fp, [pc, #1036]	; 800198c <HAL_PCD_IRQHandler+0x428>
 8001580:	6820      	ldr	r0, [r4, #0]
 8001582:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8001586:	041b      	lsls	r3, r3, #16
 8001588:	f100 809e 	bmi.w	80016c8 <HAL_PCD_IRQHandler+0x164>
 800158c:	6820      	ldr	r0, [r4, #0]
 800158e:	f001 febe 	bl	800330e <USB_ReadInterrupts>
 8001592:	0543      	lsls	r3, r0, #21
 8001594:	d50f      	bpl.n	80015b6 <HAL_PCD_IRQHandler+0x52>
 8001596:	6822      	ldr	r2, [r4, #0]
 8001598:	4620      	mov	r0, r4
 800159a:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800159e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80015a2:	041b      	lsls	r3, r3, #16
 80015a4:	0c1b      	lsrs	r3, r3, #16
 80015a6:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80015aa:	f004 ffa0 	bl	80064ee <HAL_PCD_ResetCallback>
 80015ae:	2100      	movs	r1, #0
 80015b0:	4620      	mov	r0, r4
 80015b2:	f7ff ff32 	bl	800141a <HAL_PCD_SetAddress>
 80015b6:	6820      	ldr	r0, [r4, #0]
 80015b8:	f001 fea9 	bl	800330e <USB_ReadInterrupts>
 80015bc:	0447      	lsls	r7, r0, #17
 80015be:	d508      	bpl.n	80015d2 <HAL_PCD_IRQHandler+0x6e>
 80015c0:	6822      	ldr	r2, [r4, #0]
 80015c2:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80015c6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80015ca:	041b      	lsls	r3, r3, #16
 80015cc:	0c1b      	lsrs	r3, r3, #16
 80015ce:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80015d2:	6820      	ldr	r0, [r4, #0]
 80015d4:	f001 fe9b 	bl	800330e <USB_ReadInterrupts>
 80015d8:	0486      	lsls	r6, r0, #18
 80015da:	d508      	bpl.n	80015ee <HAL_PCD_IRQHandler+0x8a>
 80015dc:	6822      	ldr	r2, [r4, #0]
 80015de:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80015e2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80015e6:	041b      	lsls	r3, r3, #16
 80015e8:	0c1b      	lsrs	r3, r3, #16
 80015ea:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80015ee:	6820      	ldr	r0, [r4, #0]
 80015f0:	f001 fe8d 	bl	800330e <USB_ReadInterrupts>
 80015f4:	04c5      	lsls	r5, r0, #19
 80015f6:	d51c      	bpl.n	8001632 <HAL_PCD_IRQHandler+0xce>
 80015f8:	6822      	ldr	r2, [r4, #0]
 80015fa:	4620      	mov	r0, r4
 80015fc:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8001600:	f023 0304 	bic.w	r3, r3, #4
 8001604:	041b      	lsls	r3, r3, #16
 8001606:	0c1b      	lsrs	r3, r3, #16
 8001608:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 800160c:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8001610:	f023 0308 	bic.w	r3, r3, #8
 8001614:	041b      	lsls	r3, r3, #16
 8001616:	0c1b      	lsrs	r3, r3, #16
 8001618:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 800161c:	f004 ff8a 	bl	8006534 <HAL_PCD_ResumeCallback>
 8001620:	6822      	ldr	r2, [r4, #0]
 8001622:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8001626:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800162a:	041b      	lsls	r3, r3, #16
 800162c:	0c1b      	lsrs	r3, r3, #16
 800162e:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8001632:	6820      	ldr	r0, [r4, #0]
 8001634:	f001 fe6b 	bl	800330e <USB_ReadInterrupts>
 8001638:	0500      	lsls	r0, r0, #20
 800163a:	d524      	bpl.n	8001686 <HAL_PCD_IRQHandler+0x122>
 800163c:	6820      	ldr	r0, [r4, #0]
 800163e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8001642:	f043 0308 	orr.w	r3, r3, #8
 8001646:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800164a:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 800164e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001652:	041b      	lsls	r3, r3, #16
 8001654:	0c1b      	lsrs	r3, r3, #16
 8001656:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 800165a:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800165e:	f043 0304 	orr.w	r3, r3, #4
 8001662:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8001666:	f001 fe52 	bl	800330e <USB_ReadInterrupts>
 800166a:	04c1      	lsls	r1, r0, #19
 800166c:	d508      	bpl.n	8001680 <HAL_PCD_IRQHandler+0x11c>
 800166e:	6822      	ldr	r2, [r4, #0]
 8001670:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8001674:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001678:	041b      	lsls	r3, r3, #16
 800167a:	0c1b      	lsrs	r3, r3, #16
 800167c:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8001680:	4620      	mov	r0, r4
 8001682:	f004 ff47 	bl	8006514 <HAL_PCD_SuspendCallback>
 8001686:	6820      	ldr	r0, [r4, #0]
 8001688:	f001 fe41 	bl	800330e <USB_ReadInterrupts>
 800168c:	0582      	lsls	r2, r0, #22
 800168e:	d50b      	bpl.n	80016a8 <HAL_PCD_IRQHandler+0x144>
 8001690:	6822      	ldr	r2, [r4, #0]
 8001692:	4620      	mov	r0, r4
 8001694:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8001698:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800169c:	041b      	lsls	r3, r3, #16
 800169e:	0c1b      	lsrs	r3, r3, #16
 80016a0:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80016a4:	f004 ff1f 	bl	80064e6 <HAL_PCD_SOFCallback>
 80016a8:	6820      	ldr	r0, [r4, #0]
 80016aa:	f001 fe30 	bl	800330e <USB_ReadInterrupts>
 80016ae:	05c3      	lsls	r3, r0, #23
 80016b0:	d508      	bpl.n	80016c4 <HAL_PCD_IRQHandler+0x160>
 80016b2:	6822      	ldr	r2, [r4, #0]
 80016b4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80016b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80016bc:	041b      	lsls	r3, r3, #16
 80016be:	0c1b      	lsrs	r3, r3, #16
 80016c0:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80016c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016c8:	f8b0 1044 	ldrh.w	r1, [r0, #68]	; 0x44
 80016cc:	b289      	uxth	r1, r1
 80016ce:	f011 060f 	ands.w	r6, r1, #15
 80016d2:	f040 80b1 	bne.w	8001838 <HAL_PCD_IRQHandler+0x2d4>
 80016d6:	f011 0110 	ands.w	r1, r1, #16
 80016da:	8803      	ldrh	r3, [r0, #0]
 80016dc:	d12a      	bne.n	8001734 <HAL_PCD_IRQHandler+0x1d0>
 80016de:	ea09 0303 	and.w	r3, r9, r3
 80016e2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80016e6:	8003      	strh	r3, [r0, #0]
 80016e8:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80016ec:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 80016f0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80016f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80016f8:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 80016fc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80016fe:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001702:	6463      	str	r3, [r4, #68]	; 0x44
 8001704:	4413      	add	r3, r2
 8001706:	63e3      	str	r3, [r4, #60]	; 0x3c
 8001708:	4620      	mov	r0, r4
 800170a:	f004 fee5 	bl	80064d8 <HAL_PCD_DataInStageCallback>
 800170e:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8001712:	2b00      	cmp	r3, #0
 8001714:	f43f af34 	beq.w	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001718:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800171a:	2a00      	cmp	r2, #0
 800171c:	f47f af30 	bne.w	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001720:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8001724:	6821      	ldr	r1, [r4, #0]
 8001726:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800172a:	f8a1 304c 	strh.w	r3, [r1, #76]	; 0x4c
 800172e:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8001732:	e725      	b.n	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001734:	b29b      	uxth	r3, r3
 8001736:	f413 6500 	ands.w	r5, r3, #2048	; 0x800
 800173a:	d020      	beq.n	800177e <HAL_PCD_IRQHandler+0x21a>
 800173c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8001740:	f894 2128 	ldrb.w	r2, [r4, #296]	; 0x128
 8001744:	f504 710c 	add.w	r1, r4, #560	; 0x230
 8001748:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800174c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8001750:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8001754:	f8b4 212e 	ldrh.w	r2, [r4, #302]	; 0x12e
 8001758:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800175c:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8001760:	f001 febe 	bl	80034e0 <USB_ReadPMA>
 8001764:	6822      	ldr	r2, [r4, #0]
 8001766:	4620      	mov	r0, r4
 8001768:	8813      	ldrh	r3, [r2, #0]
 800176a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800176e:	051b      	lsls	r3, r3, #20
 8001770:	0d1b      	lsrs	r3, r3, #20
 8001772:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001776:	8013      	strh	r3, [r2, #0]
 8001778:	f004 fea0 	bl	80064bc <HAL_PCD_SetupStageCallback>
 800177c:	e700      	b.n	8001580 <HAL_PCD_IRQHandler+0x1c>
 800177e:	041f      	lsls	r7, r3, #16
 8001780:	f57f aefe 	bpl.w	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001784:	8803      	ldrh	r3, [r0, #0]
 8001786:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800178a:	051b      	lsls	r3, r3, #20
 800178c:	0d1b      	lsrs	r3, r3, #20
 800178e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001792:	8003      	strh	r3, [r0, #0]
 8001794:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8001798:	f894 2128 	ldrb.w	r2, [r4, #296]	; 0x128
 800179c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80017a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80017a4:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 80017a8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80017ac:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 80017b0:	b18b      	cbz	r3, 80017d6 <HAL_PCD_IRQHandler+0x272>
 80017b2:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 80017b6:	b171      	cbz	r1, 80017d6 <HAL_PCD_IRQHandler+0x272>
 80017b8:	f8b4 212e 	ldrh.w	r2, [r4, #302]	; 0x12e
 80017bc:	f001 fe90 	bl	80034e0 <USB_ReadPMA>
 80017c0:	f8d4 313c 	ldr.w	r3, [r4, #316]	; 0x13c
 80017c4:	f8d4 2144 	ldr.w	r2, [r4, #324]	; 0x144
 80017c8:	4629      	mov	r1, r5
 80017ca:	4413      	add	r3, r2
 80017cc:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
 80017d0:	4620      	mov	r0, r4
 80017d2:	f004 fe79 	bl	80064c8 <HAL_PCD_DataOutStageCallback>
 80017d6:	6821      	ldr	r1, [r4, #0]
 80017d8:	f8d4 5138 	ldr.w	r5, [r4, #312]	; 0x138
 80017dc:	f8b1 3050 	ldrh.w	r3, [r1, #80]	; 0x50
 80017e0:	f201 400c 	addw	r0, r1, #1036	; 0x40c
 80017e4:	b29b      	uxth	r3, r3
 80017e6:	b9bd      	cbnz	r5, 8001818 <HAL_PCD_IRQHandler+0x2b4>
 80017e8:	5ac2      	ldrh	r2, [r0, r3]
 80017ea:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 80017ee:	0412      	lsls	r2, r2, #16
 80017f0:	0c12      	lsrs	r2, r2, #16
 80017f2:	52c2      	strh	r2, [r0, r3]
 80017f4:	5ac2      	ldrh	r2, [r0, r3]
 80017f6:	ea4a 0202 	orr.w	r2, sl, r2
 80017fa:	b292      	uxth	r2, r2
 80017fc:	52c2      	strh	r2, [r0, r3]
 80017fe:	880b      	ldrh	r3, [r1, #0]
 8001800:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001804:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001808:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800180c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001810:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001814:	800b      	strh	r3, [r1, #0]
 8001816:	e6b3      	b.n	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001818:	2d3e      	cmp	r5, #62	; 0x3e
 800181a:	d805      	bhi.n	8001828 <HAL_PCD_IRQHandler+0x2c4>
 800181c:	086a      	lsrs	r2, r5, #1
 800181e:	07ee      	lsls	r6, r5, #31
 8001820:	bf48      	it	mi
 8001822:	3201      	addmi	r2, #1
 8001824:	0292      	lsls	r2, r2, #10
 8001826:	e7e8      	b.n	80017fa <HAL_PCD_IRQHandler+0x296>
 8001828:	096a      	lsrs	r2, r5, #5
 800182a:	06ed      	lsls	r5, r5, #27
 800182c:	bf08      	it	eq
 800182e:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8001832:	ea4a 2282 	orr.w	r2, sl, r2, lsl #10
 8001836:	e7e0      	b.n	80017fa <HAL_PCD_IRQHandler+0x296>
 8001838:	f830 8026 	ldrh.w	r8, [r0, r6, lsl #2]
 800183c:	fa1f f888 	uxth.w	r8, r8
 8001840:	f418 4f00 	tst.w	r8, #32768	; 0x8000
 8001844:	d03c      	beq.n	80018c0 <HAL_PCD_IRQHandler+0x35c>
 8001846:	f830 3026 	ldrh.w	r3, [r0, r6, lsl #2]
 800184a:	0177      	lsls	r7, r6, #5
 800184c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001850:	051b      	lsls	r3, r3, #20
 8001852:	0d1b      	lsrs	r3, r3, #20
 8001854:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001858:	f820 3026 	strh.w	r3, [r0, r6, lsl #2]
 800185c:	19e1      	adds	r1, r4, r7
 800185e:	f891 3134 	ldrb.w	r3, [r1, #308]	; 0x134
 8001862:	f500 6280 	add.w	r2, r0, #1024	; 0x400
 8001866:	2b00      	cmp	r3, #0
 8001868:	d150      	bne.n	800190c <HAL_PCD_IRQHandler+0x3a8>
 800186a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800186e:	f891 5128 	ldrb.w	r5, [r1, #296]	; 0x128
 8001872:	3306      	adds	r3, #6
 8001874:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8001878:	f832 5013 	ldrh.w	r5, [r2, r3, lsl #1]
 800187c:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8001880:	b135      	cbz	r5, 8001890 <HAL_PCD_IRQHandler+0x32c>
 8001882:	f8b1 212e 	ldrh.w	r2, [r1, #302]	; 0x12e
 8001886:	462b      	mov	r3, r5
 8001888:	f8d1 113c 	ldr.w	r1, [r1, #316]	; 0x13c
 800188c:	f001 fe28 	bl	80034e0 <USB_ReadPMA>
 8001890:	19e1      	adds	r1, r4, r7
 8001892:	f8d1 3144 	ldr.w	r3, [r1, #324]	; 0x144
 8001896:	f8d1 213c 	ldr.w	r2, [r1, #316]	; 0x13c
 800189a:	442b      	add	r3, r5
 800189c:	f8c1 3144 	str.w	r3, [r1, #324]	; 0x144
 80018a0:	f8d1 3140 	ldr.w	r3, [r1, #320]	; 0x140
 80018a4:	442a      	add	r2, r5
 80018a6:	f8c1 213c 	str.w	r2, [r1, #316]	; 0x13c
 80018aa:	b11b      	cbz	r3, 80018b4 <HAL_PCD_IRQHandler+0x350>
 80018ac:	f8d1 0138 	ldr.w	r0, [r1, #312]	; 0x138
 80018b0:	4285      	cmp	r5, r0
 80018b2:	d25d      	bcs.n	8001970 <HAL_PCD_IRQHandler+0x40c>
 80018b4:	4427      	add	r7, r4
 80018b6:	f897 1128 	ldrb.w	r1, [r7, #296]	; 0x128
 80018ba:	4620      	mov	r0, r4
 80018bc:	f004 fe04 	bl	80064c8 <HAL_PCD_DataOutStageCallback>
 80018c0:	f018 0f80 	tst.w	r8, #128	; 0x80
 80018c4:	f43f ae5c 	beq.w	8001580 <HAL_PCD_IRQHandler+0x1c>
 80018c8:	6823      	ldr	r3, [r4, #0]
 80018ca:	4620      	mov	r0, r4
 80018cc:	f833 2026 	ldrh.w	r2, [r3, r6, lsl #2]
 80018d0:	ea09 0202 	and.w	r2, r9, r2
 80018d4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80018d8:	f823 2026 	strh.w	r2, [r3, r6, lsl #2]
 80018dc:	f8b3 2050 	ldrh.w	r2, [r3, #80]	; 0x50
 80018e0:	eb04 1646 	add.w	r6, r4, r6, lsl #5
 80018e4:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 80018e8:	3202      	adds	r2, #2
 80018ea:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 80018ee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80018f2:	f8b3 2400 	ldrh.w	r2, [r3, #1024]	; 0x400
 80018f6:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 80018f8:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80018fc:	6472      	str	r2, [r6, #68]	; 0x44
 80018fe:	441a      	add	r2, r3
 8001900:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001902:	63f2      	str	r2, [r6, #60]	; 0x3c
 8001904:	bbd3      	cbnz	r3, 800197c <HAL_PCD_IRQHandler+0x418>
 8001906:	f004 fde7 	bl	80064d8 <HAL_PCD_DataInStageCallback>
 800190a:	e639      	b.n	8001580 <HAL_PCD_IRQHandler+0x1c>
 800190c:	f891 3128 	ldrb.w	r3, [r1, #296]	; 0x128
 8001910:	f830 5023 	ldrh.w	r5, [r0, r3, lsl #2]
 8001914:	00db      	lsls	r3, r3, #3
 8001916:	f415 4f80 	tst.w	r5, #16384	; 0x4000
 800191a:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 800191e:	442b      	add	r3, r5
 8001920:	d01b      	beq.n	800195a <HAL_PCD_IRQHandler+0x3f6>
 8001922:	3302      	adds	r3, #2
 8001924:	f832 5013 	ldrh.w	r5, [r2, r3, lsl #1]
 8001928:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800192c:	b135      	cbz	r5, 800193c <HAL_PCD_IRQHandler+0x3d8>
 800192e:	462b      	mov	r3, r5
 8001930:	f8b1 2130 	ldrh.w	r2, [r1, #304]	; 0x130
 8001934:	f8d1 113c 	ldr.w	r1, [r1, #316]	; 0x13c
 8001938:	f001 fdd2 	bl	80034e0 <USB_ReadPMA>
 800193c:	19e3      	adds	r3, r4, r7
 800193e:	f893 1128 	ldrb.w	r1, [r3, #296]	; 0x128
 8001942:	6822      	ldr	r2, [r4, #0]
 8001944:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8001948:	ea0b 0303 	and.w	r3, fp, r3
 800194c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001950:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001954:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 8001958:	e79a      	b.n	8001890 <HAL_PCD_IRQHandler+0x32c>
 800195a:	3306      	adds	r3, #6
 800195c:	f832 5013 	ldrh.w	r5, [r2, r3, lsl #1]
 8001960:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8001964:	2d00      	cmp	r5, #0
 8001966:	d0e9      	beq.n	800193c <HAL_PCD_IRQHandler+0x3d8>
 8001968:	462b      	mov	r3, r5
 800196a:	f8b1 2132 	ldrh.w	r2, [r1, #306]	; 0x132
 800196e:	e7e1      	b.n	8001934 <HAL_PCD_IRQHandler+0x3d0>
 8001970:	f891 1128 	ldrb.w	r1, [r1, #296]	; 0x128
 8001974:	4620      	mov	r0, r4
 8001976:	f7ff fdc0 	bl	80014fa <HAL_PCD_EP_Receive>
 800197a:	e7a1      	b.n	80018c0 <HAL_PCD_IRQHandler+0x35c>
 800197c:	f7ff fddc 	bl	8001538 <HAL_PCD_EP_Transmit>
 8001980:	e5fe      	b.n	8001580 <HAL_PCD_IRQHandler+0x1c>
 8001982:	bf00      	nop
 8001984:	ffff8f0f 	.word	0xffff8f0f
 8001988:	ffff8000 	.word	0xffff8000
 800198c:	ffff8f8f 	.word	0xffff8f8f

08001990 <HAL_PCD_EP_SetStall>:
 8001990:	b538      	push	{r3, r4, r5, lr}
 8001992:	6843      	ldr	r3, [r0, #4]
 8001994:	f001 0507 	and.w	r5, r1, #7
 8001998:	429d      	cmp	r5, r3
 800199a:	4604      	mov	r4, r0
 800199c:	d828      	bhi.n	80019f0 <HAL_PCD_EP_SetStall+0x60>
 800199e:	060b      	lsls	r3, r1, #24
 80019a0:	d51d      	bpl.n	80019de <HAL_PCD_EP_SetStall+0x4e>
 80019a2:	2201      	movs	r2, #1
 80019a4:	016b      	lsls	r3, r5, #5
 80019a6:	f103 0128 	add.w	r1, r3, #40	; 0x28
 80019aa:	4403      	add	r3, r0
 80019ac:	4401      	add	r1, r0
 80019ae:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 80019b2:	2301      	movs	r3, #1
 80019b4:	700d      	strb	r5, [r1, #0]
 80019b6:	708b      	strb	r3, [r1, #2]
 80019b8:	f894 2228 	ldrb.w	r2, [r4, #552]	; 0x228
 80019bc:	429a      	cmp	r2, r3
 80019be:	d019      	beq.n	80019f4 <HAL_PCD_EP_SetStall+0x64>
 80019c0:	f884 3228 	strb.w	r3, [r4, #552]	; 0x228
 80019c4:	6820      	ldr	r0, [r4, #0]
 80019c6:	f001 fc39 	bl	800323c <USB_EPSetStall>
 80019ca:	b925      	cbnz	r5, 80019d6 <HAL_PCD_EP_SetStall+0x46>
 80019cc:	f504 710c 	add.w	r1, r4, #560	; 0x230
 80019d0:	6820      	ldr	r0, [r4, #0]
 80019d2:	f001 fc9f 	bl	8003314 <USB_EP0_OutStart>
 80019d6:	2000      	movs	r0, #0
 80019d8:	f884 0228 	strb.w	r0, [r4, #552]	; 0x228
 80019dc:	bd38      	pop	{r3, r4, r5, pc}
 80019de:	2200      	movs	r2, #0
 80019e0:	014b      	lsls	r3, r1, #5
 80019e2:	f503 7194 	add.w	r1, r3, #296	; 0x128
 80019e6:	4403      	add	r3, r0
 80019e8:	4401      	add	r1, r0
 80019ea:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
 80019ee:	e7e0      	b.n	80019b2 <HAL_PCD_EP_SetStall+0x22>
 80019f0:	2001      	movs	r0, #1
 80019f2:	e7f3      	b.n	80019dc <HAL_PCD_EP_SetStall+0x4c>
 80019f4:	2002      	movs	r0, #2
 80019f6:	e7f1      	b.n	80019dc <HAL_PCD_EP_SetStall+0x4c>

080019f8 <HAL_PCD_EP_ClrStall>:
 80019f8:	b538      	push	{r3, r4, r5, lr}
 80019fa:	6843      	ldr	r3, [r0, #4]
 80019fc:	f001 020f 	and.w	r2, r1, #15
 8001a00:	429a      	cmp	r2, r3
 8001a02:	4604      	mov	r4, r0
 8001a04:	d827      	bhi.n	8001a56 <HAL_PCD_EP_ClrStall+0x5e>
 8001a06:	f001 0207 	and.w	r2, r1, #7
 8001a0a:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001a0e:	ea4f 1342 	mov.w	r3, r2, lsl #5
 8001a12:	bf14      	ite	ne
 8001a14:	f103 0128 	addne.w	r1, r3, #40	; 0x28
 8001a18:	f503 7194 	addeq.w	r1, r3, #296	; 0x128
 8001a1c:	4418      	add	r0, r3
 8001a1e:	f04f 0500 	mov.w	r5, #0
 8001a22:	bf15      	itete	ne
 8001a24:	2301      	movne	r3, #1
 8001a26:	2300      	moveq	r3, #0
 8001a28:	1909      	addne	r1, r1, r4
 8001a2a:	1909      	addeq	r1, r1, r4
 8001a2c:	bf14      	ite	ne
 8001a2e:	f880 3029 	strbne.w	r3, [r0, #41]	; 0x29
 8001a32:	f880 3129 	strbeq.w	r3, [r0, #297]	; 0x129
 8001a36:	708d      	strb	r5, [r1, #2]
 8001a38:	700a      	strb	r2, [r1, #0]
 8001a3a:	f894 3228 	ldrb.w	r3, [r4, #552]	; 0x228
 8001a3e:	2b01      	cmp	r3, #1
 8001a40:	d00b      	beq.n	8001a5a <HAL_PCD_EP_ClrStall+0x62>
 8001a42:	2301      	movs	r3, #1
 8001a44:	6820      	ldr	r0, [r4, #0]
 8001a46:	f884 3228 	strb.w	r3, [r4, #552]	; 0x228
 8001a4a:	f001 fc13 	bl	8003274 <USB_EPClearStall>
 8001a4e:	4628      	mov	r0, r5
 8001a50:	f884 5228 	strb.w	r5, [r4, #552]	; 0x228
 8001a54:	bd38      	pop	{r3, r4, r5, pc}
 8001a56:	2001      	movs	r0, #1
 8001a58:	e7fc      	b.n	8001a54 <HAL_PCD_EP_ClrStall+0x5c>
 8001a5a:	2002      	movs	r0, #2
 8001a5c:	e7fa      	b.n	8001a54 <HAL_PCD_EP_ClrStall+0x5c>

08001a5e <HAL_PCDEx_PMAConfig>:
 8001a5e:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001a62:	bf1b      	ittet	ne
 8001a64:	f001 0107 	andne.w	r1, r1, #7
 8001a68:	eb00 1041 	addne.w	r0, r0, r1, lsl #5
 8001a6c:	eb00 1041 	addeq.w	r0, r0, r1, lsl #5
 8001a70:	3028      	addne	r0, #40	; 0x28
 8001a72:	bf08      	it	eq
 8001a74:	f500 7094 	addeq.w	r0, r0, #296	; 0x128
 8001a78:	b299      	uxth	r1, r3
 8001a7a:	b91a      	cbnz	r2, 8001a84 <HAL_PCDEx_PMAConfig+0x26>
 8001a7c:	7302      	strb	r2, [r0, #12]
 8001a7e:	80c1      	strh	r1, [r0, #6]
 8001a80:	2000      	movs	r0, #0
 8001a82:	4770      	bx	lr
 8001a84:	2201      	movs	r2, #1
 8001a86:	0c1b      	lsrs	r3, r3, #16
 8001a88:	7302      	strb	r2, [r0, #12]
 8001a8a:	8101      	strh	r1, [r0, #8]
 8001a8c:	8143      	strh	r3, [r0, #10]
 8001a8e:	e7f7      	b.n	8001a80 <HAL_PCDEx_PMAConfig+0x22>

08001a90 <HAL_RCC_OscConfig>:
 8001a90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8001a94:	4605      	mov	r5, r0
 8001a96:	b908      	cbnz	r0, 8001a9c <HAL_RCC_OscConfig+0xc>
 8001a98:	2001      	movs	r0, #1
 8001a9a:	e03c      	b.n	8001b16 <HAL_RCC_OscConfig+0x86>
 8001a9c:	6803      	ldr	r3, [r0, #0]
 8001a9e:	07db      	lsls	r3, r3, #31
 8001aa0:	d410      	bmi.n	8001ac4 <HAL_RCC_OscConfig+0x34>
 8001aa2:	682b      	ldr	r3, [r5, #0]
 8001aa4:	079f      	lsls	r7, r3, #30
 8001aa6:	d45d      	bmi.n	8001b64 <HAL_RCC_OscConfig+0xd4>
 8001aa8:	682b      	ldr	r3, [r5, #0]
 8001aaa:	0719      	lsls	r1, r3, #28
 8001aac:	f100 8094 	bmi.w	8001bd8 <HAL_RCC_OscConfig+0x148>
 8001ab0:	682b      	ldr	r3, [r5, #0]
 8001ab2:	075a      	lsls	r2, r3, #29
 8001ab4:	f100 80be 	bmi.w	8001c34 <HAL_RCC_OscConfig+0x1a4>
 8001ab8:	69e8      	ldr	r0, [r5, #28]
 8001aba:	2800      	cmp	r0, #0
 8001abc:	f040 812c 	bne.w	8001d18 <HAL_RCC_OscConfig+0x288>
 8001ac0:	2000      	movs	r0, #0
 8001ac2:	e028      	b.n	8001b16 <HAL_RCC_OscConfig+0x86>
 8001ac4:	4c8f      	ldr	r4, [pc, #572]	; (8001d04 <HAL_RCC_OscConfig+0x274>)
 8001ac6:	6863      	ldr	r3, [r4, #4]
 8001ac8:	f003 030c 	and.w	r3, r3, #12
 8001acc:	2b04      	cmp	r3, #4
 8001ace:	d007      	beq.n	8001ae0 <HAL_RCC_OscConfig+0x50>
 8001ad0:	6863      	ldr	r3, [r4, #4]
 8001ad2:	f003 030c 	and.w	r3, r3, #12
 8001ad6:	2b08      	cmp	r3, #8
 8001ad8:	d109      	bne.n	8001aee <HAL_RCC_OscConfig+0x5e>
 8001ada:	6863      	ldr	r3, [r4, #4]
 8001adc:	03de      	lsls	r6, r3, #15
 8001ade:	d506      	bpl.n	8001aee <HAL_RCC_OscConfig+0x5e>
 8001ae0:	6823      	ldr	r3, [r4, #0]
 8001ae2:	039c      	lsls	r4, r3, #14
 8001ae4:	d5dd      	bpl.n	8001aa2 <HAL_RCC_OscConfig+0x12>
 8001ae6:	686b      	ldr	r3, [r5, #4]
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d1da      	bne.n	8001aa2 <HAL_RCC_OscConfig+0x12>
 8001aec:	e7d4      	b.n	8001a98 <HAL_RCC_OscConfig+0x8>
 8001aee:	686b      	ldr	r3, [r5, #4]
 8001af0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001af4:	d112      	bne.n	8001b1c <HAL_RCC_OscConfig+0x8c>
 8001af6:	6823      	ldr	r3, [r4, #0]
 8001af8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001afc:	6023      	str	r3, [r4, #0]
 8001afe:	f7fe fdf3 	bl	80006e8 <HAL_GetTick>
 8001b02:	4606      	mov	r6, r0
 8001b04:	6823      	ldr	r3, [r4, #0]
 8001b06:	0398      	lsls	r0, r3, #14
 8001b08:	d4cb      	bmi.n	8001aa2 <HAL_RCC_OscConfig+0x12>
 8001b0a:	f7fe fded 	bl	80006e8 <HAL_GetTick>
 8001b0e:	1b80      	subs	r0, r0, r6
 8001b10:	2864      	cmp	r0, #100	; 0x64
 8001b12:	d9f7      	bls.n	8001b04 <HAL_RCC_OscConfig+0x74>
 8001b14:	2003      	movs	r0, #3
 8001b16:	b002      	add	sp, #8
 8001b18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b1c:	b99b      	cbnz	r3, 8001b46 <HAL_RCC_OscConfig+0xb6>
 8001b1e:	6823      	ldr	r3, [r4, #0]
 8001b20:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b24:	6023      	str	r3, [r4, #0]
 8001b26:	6823      	ldr	r3, [r4, #0]
 8001b28:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b2c:	6023      	str	r3, [r4, #0]
 8001b2e:	f7fe fddb 	bl	80006e8 <HAL_GetTick>
 8001b32:	4606      	mov	r6, r0
 8001b34:	6823      	ldr	r3, [r4, #0]
 8001b36:	0399      	lsls	r1, r3, #14
 8001b38:	d5b3      	bpl.n	8001aa2 <HAL_RCC_OscConfig+0x12>
 8001b3a:	f7fe fdd5 	bl	80006e8 <HAL_GetTick>
 8001b3e:	1b80      	subs	r0, r0, r6
 8001b40:	2864      	cmp	r0, #100	; 0x64
 8001b42:	d9f7      	bls.n	8001b34 <HAL_RCC_OscConfig+0xa4>
 8001b44:	e7e6      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001b46:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001b4a:	6823      	ldr	r3, [r4, #0]
 8001b4c:	d103      	bne.n	8001b56 <HAL_RCC_OscConfig+0xc6>
 8001b4e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001b52:	6023      	str	r3, [r4, #0]
 8001b54:	e7cf      	b.n	8001af6 <HAL_RCC_OscConfig+0x66>
 8001b56:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b5a:	6023      	str	r3, [r4, #0]
 8001b5c:	6823      	ldr	r3, [r4, #0]
 8001b5e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b62:	e7cb      	b.n	8001afc <HAL_RCC_OscConfig+0x6c>
 8001b64:	4c67      	ldr	r4, [pc, #412]	; (8001d04 <HAL_RCC_OscConfig+0x274>)
 8001b66:	6863      	ldr	r3, [r4, #4]
 8001b68:	f013 0f0c 	tst.w	r3, #12
 8001b6c:	d007      	beq.n	8001b7e <HAL_RCC_OscConfig+0xee>
 8001b6e:	6863      	ldr	r3, [r4, #4]
 8001b70:	f003 030c 	and.w	r3, r3, #12
 8001b74:	2b08      	cmp	r3, #8
 8001b76:	d110      	bne.n	8001b9a <HAL_RCC_OscConfig+0x10a>
 8001b78:	6863      	ldr	r3, [r4, #4]
 8001b7a:	03da      	lsls	r2, r3, #15
 8001b7c:	d40d      	bmi.n	8001b9a <HAL_RCC_OscConfig+0x10a>
 8001b7e:	6823      	ldr	r3, [r4, #0]
 8001b80:	079b      	lsls	r3, r3, #30
 8001b82:	d502      	bpl.n	8001b8a <HAL_RCC_OscConfig+0xfa>
 8001b84:	692b      	ldr	r3, [r5, #16]
 8001b86:	2b01      	cmp	r3, #1
 8001b88:	d186      	bne.n	8001a98 <HAL_RCC_OscConfig+0x8>
 8001b8a:	6823      	ldr	r3, [r4, #0]
 8001b8c:	696a      	ldr	r2, [r5, #20]
 8001b8e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8001b92:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001b96:	6023      	str	r3, [r4, #0]
 8001b98:	e786      	b.n	8001aa8 <HAL_RCC_OscConfig+0x18>
 8001b9a:	692a      	ldr	r2, [r5, #16]
 8001b9c:	4b5a      	ldr	r3, [pc, #360]	; (8001d08 <HAL_RCC_OscConfig+0x278>)
 8001b9e:	b16a      	cbz	r2, 8001bbc <HAL_RCC_OscConfig+0x12c>
 8001ba0:	2201      	movs	r2, #1
 8001ba2:	601a      	str	r2, [r3, #0]
 8001ba4:	f7fe fda0 	bl	80006e8 <HAL_GetTick>
 8001ba8:	4606      	mov	r6, r0
 8001baa:	6823      	ldr	r3, [r4, #0]
 8001bac:	079f      	lsls	r7, r3, #30
 8001bae:	d4ec      	bmi.n	8001b8a <HAL_RCC_OscConfig+0xfa>
 8001bb0:	f7fe fd9a 	bl	80006e8 <HAL_GetTick>
 8001bb4:	1b80      	subs	r0, r0, r6
 8001bb6:	2802      	cmp	r0, #2
 8001bb8:	d9f7      	bls.n	8001baa <HAL_RCC_OscConfig+0x11a>
 8001bba:	e7ab      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001bbc:	601a      	str	r2, [r3, #0]
 8001bbe:	f7fe fd93 	bl	80006e8 <HAL_GetTick>
 8001bc2:	4606      	mov	r6, r0
 8001bc4:	6823      	ldr	r3, [r4, #0]
 8001bc6:	0798      	lsls	r0, r3, #30
 8001bc8:	f57f af6e 	bpl.w	8001aa8 <HAL_RCC_OscConfig+0x18>
 8001bcc:	f7fe fd8c 	bl	80006e8 <HAL_GetTick>
 8001bd0:	1b80      	subs	r0, r0, r6
 8001bd2:	2802      	cmp	r0, #2
 8001bd4:	d9f6      	bls.n	8001bc4 <HAL_RCC_OscConfig+0x134>
 8001bd6:	e79d      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001bd8:	69aa      	ldr	r2, [r5, #24]
 8001bda:	4c4a      	ldr	r4, [pc, #296]	; (8001d04 <HAL_RCC_OscConfig+0x274>)
 8001bdc:	4b4b      	ldr	r3, [pc, #300]	; (8001d0c <HAL_RCC_OscConfig+0x27c>)
 8001bde:	b1da      	cbz	r2, 8001c18 <HAL_RCC_OscConfig+0x188>
 8001be0:	2201      	movs	r2, #1
 8001be2:	601a      	str	r2, [r3, #0]
 8001be4:	f7fe fd80 	bl	80006e8 <HAL_GetTick>
 8001be8:	4606      	mov	r6, r0
 8001bea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bec:	079b      	lsls	r3, r3, #30
 8001bee:	d50d      	bpl.n	8001c0c <HAL_RCC_OscConfig+0x17c>
 8001bf0:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 8001bf4:	4b46      	ldr	r3, [pc, #280]	; (8001d10 <HAL_RCC_OscConfig+0x280>)
 8001bf6:	681b      	ldr	r3, [r3, #0]
 8001bf8:	fbb3 f3f2 	udiv	r3, r3, r2
 8001bfc:	9301      	str	r3, [sp, #4]
 8001bfe:	bf00      	nop
 8001c00:	9b01      	ldr	r3, [sp, #4]
 8001c02:	1e5a      	subs	r2, r3, #1
 8001c04:	9201      	str	r2, [sp, #4]
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d1f9      	bne.n	8001bfe <HAL_RCC_OscConfig+0x16e>
 8001c0a:	e751      	b.n	8001ab0 <HAL_RCC_OscConfig+0x20>
 8001c0c:	f7fe fd6c 	bl	80006e8 <HAL_GetTick>
 8001c10:	1b80      	subs	r0, r0, r6
 8001c12:	2802      	cmp	r0, #2
 8001c14:	d9e9      	bls.n	8001bea <HAL_RCC_OscConfig+0x15a>
 8001c16:	e77d      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001c18:	601a      	str	r2, [r3, #0]
 8001c1a:	f7fe fd65 	bl	80006e8 <HAL_GetTick>
 8001c1e:	4606      	mov	r6, r0
 8001c20:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c22:	079f      	lsls	r7, r3, #30
 8001c24:	f57f af44 	bpl.w	8001ab0 <HAL_RCC_OscConfig+0x20>
 8001c28:	f7fe fd5e 	bl	80006e8 <HAL_GetTick>
 8001c2c:	1b80      	subs	r0, r0, r6
 8001c2e:	2802      	cmp	r0, #2
 8001c30:	d9f6      	bls.n	8001c20 <HAL_RCC_OscConfig+0x190>
 8001c32:	e76f      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001c34:	4c33      	ldr	r4, [pc, #204]	; (8001d04 <HAL_RCC_OscConfig+0x274>)
 8001c36:	69e3      	ldr	r3, [r4, #28]
 8001c38:	00d8      	lsls	r0, r3, #3
 8001c3a:	d424      	bmi.n	8001c86 <HAL_RCC_OscConfig+0x1f6>
 8001c3c:	2701      	movs	r7, #1
 8001c3e:	69e3      	ldr	r3, [r4, #28]
 8001c40:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c44:	61e3      	str	r3, [r4, #28]
 8001c46:	69e3      	ldr	r3, [r4, #28]
 8001c48:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c4c:	9300      	str	r3, [sp, #0]
 8001c4e:	9b00      	ldr	r3, [sp, #0]
 8001c50:	4e30      	ldr	r6, [pc, #192]	; (8001d14 <HAL_RCC_OscConfig+0x284>)
 8001c52:	6833      	ldr	r3, [r6, #0]
 8001c54:	05d9      	lsls	r1, r3, #23
 8001c56:	d518      	bpl.n	8001c8a <HAL_RCC_OscConfig+0x1fa>
 8001c58:	68eb      	ldr	r3, [r5, #12]
 8001c5a:	2b01      	cmp	r3, #1
 8001c5c:	d126      	bne.n	8001cac <HAL_RCC_OscConfig+0x21c>
 8001c5e:	6a23      	ldr	r3, [r4, #32]
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	6223      	str	r3, [r4, #32]
 8001c66:	f7fe fd3f 	bl	80006e8 <HAL_GetTick>
 8001c6a:	f241 3688 	movw	r6, #5000	; 0x1388
 8001c6e:	4680      	mov	r8, r0
 8001c70:	6a23      	ldr	r3, [r4, #32]
 8001c72:	079b      	lsls	r3, r3, #30
 8001c74:	d53f      	bpl.n	8001cf6 <HAL_RCC_OscConfig+0x266>
 8001c76:	2f00      	cmp	r7, #0
 8001c78:	f43f af1e 	beq.w	8001ab8 <HAL_RCC_OscConfig+0x28>
 8001c7c:	69e3      	ldr	r3, [r4, #28]
 8001c7e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c82:	61e3      	str	r3, [r4, #28]
 8001c84:	e718      	b.n	8001ab8 <HAL_RCC_OscConfig+0x28>
 8001c86:	2700      	movs	r7, #0
 8001c88:	e7e2      	b.n	8001c50 <HAL_RCC_OscConfig+0x1c0>
 8001c8a:	6833      	ldr	r3, [r6, #0]
 8001c8c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c90:	6033      	str	r3, [r6, #0]
 8001c92:	f7fe fd29 	bl	80006e8 <HAL_GetTick>
 8001c96:	4680      	mov	r8, r0
 8001c98:	6833      	ldr	r3, [r6, #0]
 8001c9a:	05da      	lsls	r2, r3, #23
 8001c9c:	d4dc      	bmi.n	8001c58 <HAL_RCC_OscConfig+0x1c8>
 8001c9e:	f7fe fd23 	bl	80006e8 <HAL_GetTick>
 8001ca2:	eba0 0008 	sub.w	r0, r0, r8
 8001ca6:	2864      	cmp	r0, #100	; 0x64
 8001ca8:	d9f6      	bls.n	8001c98 <HAL_RCC_OscConfig+0x208>
 8001caa:	e733      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001cac:	b9ab      	cbnz	r3, 8001cda <HAL_RCC_OscConfig+0x24a>
 8001cae:	6a23      	ldr	r3, [r4, #32]
 8001cb0:	f241 3888 	movw	r8, #5000	; 0x1388
 8001cb4:	f023 0301 	bic.w	r3, r3, #1
 8001cb8:	6223      	str	r3, [r4, #32]
 8001cba:	6a23      	ldr	r3, [r4, #32]
 8001cbc:	f023 0304 	bic.w	r3, r3, #4
 8001cc0:	6223      	str	r3, [r4, #32]
 8001cc2:	f7fe fd11 	bl	80006e8 <HAL_GetTick>
 8001cc6:	4606      	mov	r6, r0
 8001cc8:	6a23      	ldr	r3, [r4, #32]
 8001cca:	0798      	lsls	r0, r3, #30
 8001ccc:	d5d3      	bpl.n	8001c76 <HAL_RCC_OscConfig+0x1e6>
 8001cce:	f7fe fd0b 	bl	80006e8 <HAL_GetTick>
 8001cd2:	1b80      	subs	r0, r0, r6
 8001cd4:	4540      	cmp	r0, r8
 8001cd6:	d9f7      	bls.n	8001cc8 <HAL_RCC_OscConfig+0x238>
 8001cd8:	e71c      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001cda:	2b05      	cmp	r3, #5
 8001cdc:	6a23      	ldr	r3, [r4, #32]
 8001cde:	d103      	bne.n	8001ce8 <HAL_RCC_OscConfig+0x258>
 8001ce0:	f043 0304 	orr.w	r3, r3, #4
 8001ce4:	6223      	str	r3, [r4, #32]
 8001ce6:	e7ba      	b.n	8001c5e <HAL_RCC_OscConfig+0x1ce>
 8001ce8:	f023 0301 	bic.w	r3, r3, #1
 8001cec:	6223      	str	r3, [r4, #32]
 8001cee:	6a23      	ldr	r3, [r4, #32]
 8001cf0:	f023 0304 	bic.w	r3, r3, #4
 8001cf4:	e7b6      	b.n	8001c64 <HAL_RCC_OscConfig+0x1d4>
 8001cf6:	f7fe fcf7 	bl	80006e8 <HAL_GetTick>
 8001cfa:	eba0 0008 	sub.w	r0, r0, r8
 8001cfe:	42b0      	cmp	r0, r6
 8001d00:	d9b6      	bls.n	8001c70 <HAL_RCC_OscConfig+0x1e0>
 8001d02:	e707      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001d04:	40021000 	.word	0x40021000
 8001d08:	42420000 	.word	0x42420000
 8001d0c:	42420480 	.word	0x42420480
 8001d10:	20000184 	.word	0x20000184
 8001d14:	40007000 	.word	0x40007000
 8001d18:	4b2a      	ldr	r3, [pc, #168]	; (8001dc4 <HAL_RCC_OscConfig+0x334>)
 8001d1a:	685a      	ldr	r2, [r3, #4]
 8001d1c:	461c      	mov	r4, r3
 8001d1e:	f002 020c 	and.w	r2, r2, #12
 8001d22:	2a08      	cmp	r2, #8
 8001d24:	d03d      	beq.n	8001da2 <HAL_RCC_OscConfig+0x312>
 8001d26:	2300      	movs	r3, #0
 8001d28:	4e27      	ldr	r6, [pc, #156]	; (8001dc8 <HAL_RCC_OscConfig+0x338>)
 8001d2a:	2802      	cmp	r0, #2
 8001d2c:	6033      	str	r3, [r6, #0]
 8001d2e:	d12b      	bne.n	8001d88 <HAL_RCC_OscConfig+0x2f8>
 8001d30:	f7fe fcda 	bl	80006e8 <HAL_GetTick>
 8001d34:	4607      	mov	r7, r0
 8001d36:	6823      	ldr	r3, [r4, #0]
 8001d38:	0199      	lsls	r1, r3, #6
 8001d3a:	d41f      	bmi.n	8001d7c <HAL_RCC_OscConfig+0x2ec>
 8001d3c:	6a2b      	ldr	r3, [r5, #32]
 8001d3e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001d42:	d105      	bne.n	8001d50 <HAL_RCC_OscConfig+0x2c0>
 8001d44:	6862      	ldr	r2, [r4, #4]
 8001d46:	68a9      	ldr	r1, [r5, #8]
 8001d48:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8001d4c:	430a      	orrs	r2, r1
 8001d4e:	6062      	str	r2, [r4, #4]
 8001d50:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001d52:	6862      	ldr	r2, [r4, #4]
 8001d54:	430b      	orrs	r3, r1
 8001d56:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 8001d5a:	4313      	orrs	r3, r2
 8001d5c:	6063      	str	r3, [r4, #4]
 8001d5e:	2301      	movs	r3, #1
 8001d60:	6033      	str	r3, [r6, #0]
 8001d62:	f7fe fcc1 	bl	80006e8 <HAL_GetTick>
 8001d66:	4605      	mov	r5, r0
 8001d68:	6823      	ldr	r3, [r4, #0]
 8001d6a:	019a      	lsls	r2, r3, #6
 8001d6c:	f53f aea8 	bmi.w	8001ac0 <HAL_RCC_OscConfig+0x30>
 8001d70:	f7fe fcba 	bl	80006e8 <HAL_GetTick>
 8001d74:	1b40      	subs	r0, r0, r5
 8001d76:	2802      	cmp	r0, #2
 8001d78:	d9f6      	bls.n	8001d68 <HAL_RCC_OscConfig+0x2d8>
 8001d7a:	e6cb      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001d7c:	f7fe fcb4 	bl	80006e8 <HAL_GetTick>
 8001d80:	1bc0      	subs	r0, r0, r7
 8001d82:	2802      	cmp	r0, #2
 8001d84:	d9d7      	bls.n	8001d36 <HAL_RCC_OscConfig+0x2a6>
 8001d86:	e6c5      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001d88:	f7fe fcae 	bl	80006e8 <HAL_GetTick>
 8001d8c:	4605      	mov	r5, r0
 8001d8e:	6823      	ldr	r3, [r4, #0]
 8001d90:	019b      	lsls	r3, r3, #6
 8001d92:	f57f ae95 	bpl.w	8001ac0 <HAL_RCC_OscConfig+0x30>
 8001d96:	f7fe fca7 	bl	80006e8 <HAL_GetTick>
 8001d9a:	1b40      	subs	r0, r0, r5
 8001d9c:	2802      	cmp	r0, #2
 8001d9e:	d9f6      	bls.n	8001d8e <HAL_RCC_OscConfig+0x2fe>
 8001da0:	e6b8      	b.n	8001b14 <HAL_RCC_OscConfig+0x84>
 8001da2:	2801      	cmp	r0, #1
 8001da4:	f43f aeb7 	beq.w	8001b16 <HAL_RCC_OscConfig+0x86>
 8001da8:	6858      	ldr	r0, [r3, #4]
 8001daa:	6a2b      	ldr	r3, [r5, #32]
 8001dac:	f400 3280 	and.w	r2, r0, #65536	; 0x10000
 8001db0:	429a      	cmp	r2, r3
 8001db2:	f47f ae71 	bne.w	8001a98 <HAL_RCC_OscConfig+0x8>
 8001db6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001db8:	f400 1070 	and.w	r0, r0, #3932160	; 0x3c0000
 8001dbc:	1ac0      	subs	r0, r0, r3
 8001dbe:	bf18      	it	ne
 8001dc0:	2001      	movne	r0, #1
 8001dc2:	e6a8      	b.n	8001b16 <HAL_RCC_OscConfig+0x86>
 8001dc4:	40021000 	.word	0x40021000
 8001dc8:	42420060 	.word	0x42420060

08001dcc <HAL_RCC_GetSysClockFreq>:
 8001dcc:	b530      	push	{r4, r5, lr}
 8001dce:	4b18      	ldr	r3, [pc, #96]	; (8001e30 <HAL_RCC_GetSysClockFreq+0x64>)
 8001dd0:	b087      	sub	sp, #28
 8001dd2:	ac02      	add	r4, sp, #8
 8001dd4:	f103 0510 	add.w	r5, r3, #16
 8001dd8:	4622      	mov	r2, r4
 8001dda:	6818      	ldr	r0, [r3, #0]
 8001ddc:	6859      	ldr	r1, [r3, #4]
 8001dde:	3308      	adds	r3, #8
 8001de0:	c203      	stmia	r2!, {r0, r1}
 8001de2:	42ab      	cmp	r3, r5
 8001de4:	4614      	mov	r4, r2
 8001de6:	d1f7      	bne.n	8001dd8 <HAL_RCC_GetSysClockFreq+0xc>
 8001de8:	f240 2301 	movw	r3, #513	; 0x201
 8001dec:	4911      	ldr	r1, [pc, #68]	; (8001e34 <HAL_RCC_GetSysClockFreq+0x68>)
 8001dee:	f8ad 3004 	strh.w	r3, [sp, #4]
 8001df2:	684b      	ldr	r3, [r1, #4]
 8001df4:	f003 020c 	and.w	r2, r3, #12
 8001df8:	2a08      	cmp	r2, #8
 8001dfa:	d117      	bne.n	8001e2c <HAL_RCC_GetSysClockFreq+0x60>
 8001dfc:	f3c3 4283 	ubfx	r2, r3, #18, #4
 8001e00:	a806      	add	r0, sp, #24
 8001e02:	4402      	add	r2, r0
 8001e04:	03db      	lsls	r3, r3, #15
 8001e06:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 8001e0a:	d50c      	bpl.n	8001e26 <HAL_RCC_GetSysClockFreq+0x5a>
 8001e0c:	684b      	ldr	r3, [r1, #4]
 8001e0e:	480a      	ldr	r0, [pc, #40]	; (8001e38 <HAL_RCC_GetSysClockFreq+0x6c>)
 8001e10:	f3c3 4340 	ubfx	r3, r3, #17, #1
 8001e14:	4350      	muls	r0, r2
 8001e16:	aa06      	add	r2, sp, #24
 8001e18:	4413      	add	r3, r2
 8001e1a:	f813 3c14 	ldrb.w	r3, [r3, #-20]
 8001e1e:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e22:	b007      	add	sp, #28
 8001e24:	bd30      	pop	{r4, r5, pc}
 8001e26:	4805      	ldr	r0, [pc, #20]	; (8001e3c <HAL_RCC_GetSysClockFreq+0x70>)
 8001e28:	4350      	muls	r0, r2
 8001e2a:	e7fa      	b.n	8001e22 <HAL_RCC_GetSysClockFreq+0x56>
 8001e2c:	4802      	ldr	r0, [pc, #8]	; (8001e38 <HAL_RCC_GetSysClockFreq+0x6c>)
 8001e2e:	e7f8      	b.n	8001e22 <HAL_RCC_GetSysClockFreq+0x56>
 8001e30:	08007940 	.word	0x08007940
 8001e34:	40021000 	.word	0x40021000
 8001e38:	007a1200 	.word	0x007a1200
 8001e3c:	003d0900 	.word	0x003d0900

08001e40 <HAL_RCC_ClockConfig>:
 8001e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e44:	460d      	mov	r5, r1
 8001e46:	4604      	mov	r4, r0
 8001e48:	b910      	cbnz	r0, 8001e50 <HAL_RCC_ClockConfig+0x10>
 8001e4a:	2001      	movs	r0, #1
 8001e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e50:	4a44      	ldr	r2, [pc, #272]	; (8001f64 <HAL_RCC_ClockConfig+0x124>)
 8001e52:	6813      	ldr	r3, [r2, #0]
 8001e54:	f003 0307 	and.w	r3, r3, #7
 8001e58:	428b      	cmp	r3, r1
 8001e5a:	d328      	bcc.n	8001eae <HAL_RCC_ClockConfig+0x6e>
 8001e5c:	6821      	ldr	r1, [r4, #0]
 8001e5e:	078e      	lsls	r6, r1, #30
 8001e60:	d430      	bmi.n	8001ec4 <HAL_RCC_ClockConfig+0x84>
 8001e62:	07ca      	lsls	r2, r1, #31
 8001e64:	d443      	bmi.n	8001eee <HAL_RCC_ClockConfig+0xae>
 8001e66:	4a3f      	ldr	r2, [pc, #252]	; (8001f64 <HAL_RCC_ClockConfig+0x124>)
 8001e68:	6813      	ldr	r3, [r2, #0]
 8001e6a:	f003 0307 	and.w	r3, r3, #7
 8001e6e:	42ab      	cmp	r3, r5
 8001e70:	d865      	bhi.n	8001f3e <HAL_RCC_ClockConfig+0xfe>
 8001e72:	6822      	ldr	r2, [r4, #0]
 8001e74:	4d3c      	ldr	r5, [pc, #240]	; (8001f68 <HAL_RCC_ClockConfig+0x128>)
 8001e76:	f012 0f04 	tst.w	r2, #4
 8001e7a:	d16c      	bne.n	8001f56 <HAL_RCC_ClockConfig+0x116>
 8001e7c:	0713      	lsls	r3, r2, #28
 8001e7e:	d506      	bpl.n	8001e8e <HAL_RCC_ClockConfig+0x4e>
 8001e80:	686b      	ldr	r3, [r5, #4]
 8001e82:	6922      	ldr	r2, [r4, #16]
 8001e84:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001e88:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001e8c:	606b      	str	r3, [r5, #4]
 8001e8e:	f7ff ff9d 	bl	8001dcc <HAL_RCC_GetSysClockFreq>
 8001e92:	686b      	ldr	r3, [r5, #4]
 8001e94:	4a35      	ldr	r2, [pc, #212]	; (8001f6c <HAL_RCC_ClockConfig+0x12c>)
 8001e96:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8001e9a:	5cd3      	ldrb	r3, [r2, r3]
 8001e9c:	40d8      	lsrs	r0, r3
 8001e9e:	4b34      	ldr	r3, [pc, #208]	; (8001f70 <HAL_RCC_ClockConfig+0x130>)
 8001ea0:	6018      	str	r0, [r3, #0]
 8001ea2:	4b34      	ldr	r3, [pc, #208]	; (8001f74 <HAL_RCC_ClockConfig+0x134>)
 8001ea4:	6818      	ldr	r0, [r3, #0]
 8001ea6:	f7fe fbdd 	bl	8000664 <HAL_InitTick>
 8001eaa:	2000      	movs	r0, #0
 8001eac:	e7ce      	b.n	8001e4c <HAL_RCC_ClockConfig+0xc>
 8001eae:	6813      	ldr	r3, [r2, #0]
 8001eb0:	f023 0307 	bic.w	r3, r3, #7
 8001eb4:	430b      	orrs	r3, r1
 8001eb6:	6013      	str	r3, [r2, #0]
 8001eb8:	6813      	ldr	r3, [r2, #0]
 8001eba:	f003 0307 	and.w	r3, r3, #7
 8001ebe:	428b      	cmp	r3, r1
 8001ec0:	d1c3      	bne.n	8001e4a <HAL_RCC_ClockConfig+0xa>
 8001ec2:	e7cb      	b.n	8001e5c <HAL_RCC_ClockConfig+0x1c>
 8001ec4:	4b28      	ldr	r3, [pc, #160]	; (8001f68 <HAL_RCC_ClockConfig+0x128>)
 8001ec6:	f011 0f04 	tst.w	r1, #4
 8001eca:	bf1e      	ittt	ne
 8001ecc:	685a      	ldrne	r2, [r3, #4]
 8001ece:	f442 62e0 	orrne.w	r2, r2, #1792	; 0x700
 8001ed2:	605a      	strne	r2, [r3, #4]
 8001ed4:	0708      	lsls	r0, r1, #28
 8001ed6:	bf42      	ittt	mi
 8001ed8:	685a      	ldrmi	r2, [r3, #4]
 8001eda:	f442 5260 	orrmi.w	r2, r2, #14336	; 0x3800
 8001ede:	605a      	strmi	r2, [r3, #4]
 8001ee0:	685a      	ldr	r2, [r3, #4]
 8001ee2:	68a0      	ldr	r0, [r4, #8]
 8001ee4:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8001ee8:	4302      	orrs	r2, r0
 8001eea:	605a      	str	r2, [r3, #4]
 8001eec:	e7b9      	b.n	8001e62 <HAL_RCC_ClockConfig+0x22>
 8001eee:	6862      	ldr	r2, [r4, #4]
 8001ef0:	4e1d      	ldr	r6, [pc, #116]	; (8001f68 <HAL_RCC_ClockConfig+0x128>)
 8001ef2:	2a01      	cmp	r2, #1
 8001ef4:	6833      	ldr	r3, [r6, #0]
 8001ef6:	d11a      	bne.n	8001f2e <HAL_RCC_ClockConfig+0xee>
 8001ef8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8001efc:	d0a5      	beq.n	8001e4a <HAL_RCC_ClockConfig+0xa>
 8001efe:	6873      	ldr	r3, [r6, #4]
 8001f00:	f241 3888 	movw	r8, #5000	; 0x1388
 8001f04:	f023 0303 	bic.w	r3, r3, #3
 8001f08:	4313      	orrs	r3, r2
 8001f0a:	6073      	str	r3, [r6, #4]
 8001f0c:	f7fe fbec 	bl	80006e8 <HAL_GetTick>
 8001f10:	4607      	mov	r7, r0
 8001f12:	6873      	ldr	r3, [r6, #4]
 8001f14:	6862      	ldr	r2, [r4, #4]
 8001f16:	f003 030c 	and.w	r3, r3, #12
 8001f1a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001f1e:	d0a2      	beq.n	8001e66 <HAL_RCC_ClockConfig+0x26>
 8001f20:	f7fe fbe2 	bl	80006e8 <HAL_GetTick>
 8001f24:	1bc0      	subs	r0, r0, r7
 8001f26:	4540      	cmp	r0, r8
 8001f28:	d9f3      	bls.n	8001f12 <HAL_RCC_ClockConfig+0xd2>
 8001f2a:	2003      	movs	r0, #3
 8001f2c:	e78e      	b.n	8001e4c <HAL_RCC_ClockConfig+0xc>
 8001f2e:	2a02      	cmp	r2, #2
 8001f30:	d102      	bne.n	8001f38 <HAL_RCC_ClockConfig+0xf8>
 8001f32:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8001f36:	e7e1      	b.n	8001efc <HAL_RCC_ClockConfig+0xbc>
 8001f38:	f013 0f02 	tst.w	r3, #2
 8001f3c:	e7de      	b.n	8001efc <HAL_RCC_ClockConfig+0xbc>
 8001f3e:	6813      	ldr	r3, [r2, #0]
 8001f40:	f023 0307 	bic.w	r3, r3, #7
 8001f44:	432b      	orrs	r3, r5
 8001f46:	6013      	str	r3, [r2, #0]
 8001f48:	6813      	ldr	r3, [r2, #0]
 8001f4a:	f003 0307 	and.w	r3, r3, #7
 8001f4e:	42ab      	cmp	r3, r5
 8001f50:	f47f af7b 	bne.w	8001e4a <HAL_RCC_ClockConfig+0xa>
 8001f54:	e78d      	b.n	8001e72 <HAL_RCC_ClockConfig+0x32>
 8001f56:	686b      	ldr	r3, [r5, #4]
 8001f58:	68e1      	ldr	r1, [r4, #12]
 8001f5a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001f5e:	430b      	orrs	r3, r1
 8001f60:	606b      	str	r3, [r5, #4]
 8001f62:	e78b      	b.n	8001e7c <HAL_RCC_ClockConfig+0x3c>
 8001f64:	40022000 	.word	0x40022000
 8001f68:	40021000 	.word	0x40021000
 8001f6c:	08008676 	.word	0x08008676
 8001f70:	20000184 	.word	0x20000184
 8001f74:	20000004 	.word	0x20000004

08001f78 <HAL_RCC_GetPCLK1Freq>:
 8001f78:	4b04      	ldr	r3, [pc, #16]	; (8001f8c <HAL_RCC_GetPCLK1Freq+0x14>)
 8001f7a:	4a05      	ldr	r2, [pc, #20]	; (8001f90 <HAL_RCC_GetPCLK1Freq+0x18>)
 8001f7c:	685b      	ldr	r3, [r3, #4]
 8001f7e:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8001f82:	5cd3      	ldrb	r3, [r2, r3]
 8001f84:	4a03      	ldr	r2, [pc, #12]	; (8001f94 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8001f86:	6810      	ldr	r0, [r2, #0]
 8001f88:	40d8      	lsrs	r0, r3
 8001f8a:	4770      	bx	lr
 8001f8c:	40021000 	.word	0x40021000
 8001f90:	08008686 	.word	0x08008686
 8001f94:	20000184 	.word	0x20000184

08001f98 <HAL_RCC_GetPCLK2Freq>:
 8001f98:	4b04      	ldr	r3, [pc, #16]	; (8001fac <HAL_RCC_GetPCLK2Freq+0x14>)
 8001f9a:	4a05      	ldr	r2, [pc, #20]	; (8001fb0 <HAL_RCC_GetPCLK2Freq+0x18>)
 8001f9c:	685b      	ldr	r3, [r3, #4]
 8001f9e:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8001fa2:	5cd3      	ldrb	r3, [r2, r3]
 8001fa4:	4a03      	ldr	r2, [pc, #12]	; (8001fb4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001fa6:	6810      	ldr	r0, [r2, #0]
 8001fa8:	40d8      	lsrs	r0, r3
 8001faa:	4770      	bx	lr
 8001fac:	40021000 	.word	0x40021000
 8001fb0:	08008686 	.word	0x08008686
 8001fb4:	20000184 	.word	0x20000184

08001fb8 <HAL_RCCEx_PeriphCLKConfig>:
 8001fb8:	6803      	ldr	r3, [r0, #0]
 8001fba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8001fbe:	07d9      	lsls	r1, r3, #31
 8001fc0:	4605      	mov	r5, r0
 8001fc2:	d520      	bpl.n	8002006 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8001fc4:	4c35      	ldr	r4, [pc, #212]	; (800209c <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 8001fc6:	69e3      	ldr	r3, [r4, #28]
 8001fc8:	00da      	lsls	r2, r3, #3
 8001fca:	d432      	bmi.n	8002032 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8001fcc:	2701      	movs	r7, #1
 8001fce:	69e3      	ldr	r3, [r4, #28]
 8001fd0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001fd4:	61e3      	str	r3, [r4, #28]
 8001fd6:	69e3      	ldr	r3, [r4, #28]
 8001fd8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001fdc:	9301      	str	r3, [sp, #4]
 8001fde:	9b01      	ldr	r3, [sp, #4]
 8001fe0:	4e2f      	ldr	r6, [pc, #188]	; (80020a0 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8001fe2:	6833      	ldr	r3, [r6, #0]
 8001fe4:	05db      	lsls	r3, r3, #23
 8001fe6:	d526      	bpl.n	8002036 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8001fe8:	6a23      	ldr	r3, [r4, #32]
 8001fea:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8001fee:	d136      	bne.n	800205e <HAL_RCCEx_PeriphCLKConfig+0xa6>
 8001ff0:	6a23      	ldr	r3, [r4, #32]
 8001ff2:	686a      	ldr	r2, [r5, #4]
 8001ff4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001ff8:	4313      	orrs	r3, r2
 8001ffa:	6223      	str	r3, [r4, #32]
 8001ffc:	b11f      	cbz	r7, 8002006 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8001ffe:	69e3      	ldr	r3, [r4, #28]
 8002000:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002004:	61e3      	str	r3, [r4, #28]
 8002006:	6828      	ldr	r0, [r5, #0]
 8002008:	0783      	lsls	r3, r0, #30
 800200a:	d506      	bpl.n	800201a <HAL_RCCEx_PeriphCLKConfig+0x62>
 800200c:	4a23      	ldr	r2, [pc, #140]	; (800209c <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 800200e:	68a9      	ldr	r1, [r5, #8]
 8002010:	6853      	ldr	r3, [r2, #4]
 8002012:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8002016:	430b      	orrs	r3, r1
 8002018:	6053      	str	r3, [r2, #4]
 800201a:	f010 0010 	ands.w	r0, r0, #16
 800201e:	d01b      	beq.n	8002058 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8002020:	4a1e      	ldr	r2, [pc, #120]	; (800209c <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 8002022:	68e9      	ldr	r1, [r5, #12]
 8002024:	6853      	ldr	r3, [r2, #4]
 8002026:	2000      	movs	r0, #0
 8002028:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800202c:	430b      	orrs	r3, r1
 800202e:	6053      	str	r3, [r2, #4]
 8002030:	e012      	b.n	8002058 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8002032:	2700      	movs	r7, #0
 8002034:	e7d4      	b.n	8001fe0 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8002036:	6833      	ldr	r3, [r6, #0]
 8002038:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800203c:	6033      	str	r3, [r6, #0]
 800203e:	f7fe fb53 	bl	80006e8 <HAL_GetTick>
 8002042:	4680      	mov	r8, r0
 8002044:	6833      	ldr	r3, [r6, #0]
 8002046:	05d8      	lsls	r0, r3, #23
 8002048:	d4ce      	bmi.n	8001fe8 <HAL_RCCEx_PeriphCLKConfig+0x30>
 800204a:	f7fe fb4d 	bl	80006e8 <HAL_GetTick>
 800204e:	eba0 0008 	sub.w	r0, r0, r8
 8002052:	2864      	cmp	r0, #100	; 0x64
 8002054:	d9f6      	bls.n	8002044 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8002056:	2003      	movs	r0, #3
 8002058:	b002      	add	sp, #8
 800205a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800205e:	686a      	ldr	r2, [r5, #4]
 8002060:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8002064:	429a      	cmp	r2, r3
 8002066:	d0c3      	beq.n	8001ff0 <HAL_RCCEx_PeriphCLKConfig+0x38>
 8002068:	2001      	movs	r0, #1
 800206a:	4a0e      	ldr	r2, [pc, #56]	; (80020a4 <HAL_RCCEx_PeriphCLKConfig+0xec>)
 800206c:	6a23      	ldr	r3, [r4, #32]
 800206e:	6010      	str	r0, [r2, #0]
 8002070:	2000      	movs	r0, #0
 8002072:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8002076:	6010      	str	r0, [r2, #0]
 8002078:	6221      	str	r1, [r4, #32]
 800207a:	07d9      	lsls	r1, r3, #31
 800207c:	d5b8      	bpl.n	8001ff0 <HAL_RCCEx_PeriphCLKConfig+0x38>
 800207e:	f7fe fb33 	bl	80006e8 <HAL_GetTick>
 8002082:	f241 3888 	movw	r8, #5000	; 0x1388
 8002086:	4606      	mov	r6, r0
 8002088:	6a23      	ldr	r3, [r4, #32]
 800208a:	079a      	lsls	r2, r3, #30
 800208c:	d4b0      	bmi.n	8001ff0 <HAL_RCCEx_PeriphCLKConfig+0x38>
 800208e:	f7fe fb2b 	bl	80006e8 <HAL_GetTick>
 8002092:	1b80      	subs	r0, r0, r6
 8002094:	4540      	cmp	r0, r8
 8002096:	d9f7      	bls.n	8002088 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8002098:	e7dd      	b.n	8002056 <HAL_RCCEx_PeriphCLKConfig+0x9e>
 800209a:	bf00      	nop
 800209c:	40021000 	.word	0x40021000
 80020a0:	40007000 	.word	0x40007000
 80020a4:	42420440 	.word	0x42420440

080020a8 <SPI_WaitFlagStateUntilTimeout.constprop.6>:
 80020a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020aa:	4604      	mov	r4, r0
 80020ac:	460e      	mov	r6, r1
 80020ae:	4615      	mov	r5, r2
 80020b0:	461f      	mov	r7, r3
 80020b2:	6821      	ldr	r1, [r4, #0]
 80020b4:	688a      	ldr	r2, [r1, #8]
 80020b6:	ea36 0302 	bics.w	r3, r6, r2
 80020ba:	d001      	beq.n	80020c0 <SPI_WaitFlagStateUntilTimeout.constprop.6+0x18>
 80020bc:	2000      	movs	r0, #0
 80020be:	e02d      	b.n	800211c <SPI_WaitFlagStateUntilTimeout.constprop.6+0x74>
 80020c0:	1c6b      	adds	r3, r5, #1
 80020c2:	d0f7      	beq.n	80020b4 <SPI_WaitFlagStateUntilTimeout.constprop.6+0xc>
 80020c4:	f7fe fb10 	bl	80006e8 <HAL_GetTick>
 80020c8:	1bc0      	subs	r0, r0, r7
 80020ca:	4285      	cmp	r5, r0
 80020cc:	d8f1      	bhi.n	80020b2 <SPI_WaitFlagStateUntilTimeout.constprop.6+0xa>
 80020ce:	6823      	ldr	r3, [r4, #0]
 80020d0:	685a      	ldr	r2, [r3, #4]
 80020d2:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80020d6:	605a      	str	r2, [r3, #4]
 80020d8:	6862      	ldr	r2, [r4, #4]
 80020da:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80020de:	d10a      	bne.n	80020f6 <SPI_WaitFlagStateUntilTimeout.constprop.6+0x4e>
 80020e0:	68a2      	ldr	r2, [r4, #8]
 80020e2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80020e6:	d002      	beq.n	80020ee <SPI_WaitFlagStateUntilTimeout.constprop.6+0x46>
 80020e8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80020ec:	d103      	bne.n	80020f6 <SPI_WaitFlagStateUntilTimeout.constprop.6+0x4e>
 80020ee:	681a      	ldr	r2, [r3, #0]
 80020f0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80020f4:	601a      	str	r2, [r3, #0]
 80020f6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80020f8:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80020fc:	d107      	bne.n	800210e <SPI_WaitFlagStateUntilTimeout.constprop.6+0x66>
 80020fe:	681a      	ldr	r2, [r3, #0]
 8002100:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002104:	601a      	str	r2, [r3, #0]
 8002106:	681a      	ldr	r2, [r3, #0]
 8002108:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800210c:	601a      	str	r2, [r3, #0]
 800210e:	2301      	movs	r3, #1
 8002110:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8002114:	2300      	movs	r3, #0
 8002116:	2003      	movs	r0, #3
 8002118:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800211c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800211e <SPI_EndRxTxTransaction>:
 800211e:	b510      	push	{r4, lr}
 8002120:	4613      	mov	r3, r2
 8002122:	460a      	mov	r2, r1
 8002124:	2180      	movs	r1, #128	; 0x80
 8002126:	4604      	mov	r4, r0
 8002128:	f7ff ffbe 	bl	80020a8 <SPI_WaitFlagStateUntilTimeout.constprop.6>
 800212c:	b120      	cbz	r0, 8002138 <SPI_EndRxTxTransaction+0x1a>
 800212e:	2003      	movs	r0, #3
 8002130:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8002132:	f043 0320 	orr.w	r3, r3, #32
 8002136:	6563      	str	r3, [r4, #84]	; 0x54
 8002138:	bd10      	pop	{r4, pc}

0800213a <HAL_SPI_MspInit>:
 800213a:	4770      	bx	lr

0800213c <HAL_SPI_Init>:
 800213c:	b510      	push	{r4, lr}
 800213e:	4604      	mov	r4, r0
 8002140:	2800      	cmp	r0, #0
 8002142:	d034      	beq.n	80021ae <HAL_SPI_Init+0x72>
 8002144:	2300      	movs	r3, #0
 8002146:	6283      	str	r3, [r0, #40]	; 0x28
 8002148:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800214c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002150:	b91b      	cbnz	r3, 800215a <HAL_SPI_Init+0x1e>
 8002152:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
 8002156:	f7ff fff0 	bl	800213a <HAL_SPI_MspInit>
 800215a:	2302      	movs	r3, #2
 800215c:	6822      	ldr	r2, [r4, #0]
 800215e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8002162:	6813      	ldr	r3, [r2, #0]
 8002164:	69a1      	ldr	r1, [r4, #24]
 8002166:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800216a:	6013      	str	r3, [r2, #0]
 800216c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8002170:	4303      	orrs	r3, r0
 8002172:	68e0      	ldr	r0, [r4, #12]
 8002174:	4303      	orrs	r3, r0
 8002176:	6920      	ldr	r0, [r4, #16]
 8002178:	4303      	orrs	r3, r0
 800217a:	6960      	ldr	r0, [r4, #20]
 800217c:	4303      	orrs	r3, r0
 800217e:	69e0      	ldr	r0, [r4, #28]
 8002180:	4303      	orrs	r3, r0
 8002182:	6a20      	ldr	r0, [r4, #32]
 8002184:	4303      	orrs	r3, r0
 8002186:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002188:	4303      	orrs	r3, r0
 800218a:	f401 7000 	and.w	r0, r1, #512	; 0x200
 800218e:	0c09      	lsrs	r1, r1, #16
 8002190:	4303      	orrs	r3, r0
 8002192:	f001 0104 	and.w	r1, r1, #4
 8002196:	6013      	str	r3, [r2, #0]
 8002198:	6051      	str	r1, [r2, #4]
 800219a:	69d3      	ldr	r3, [r2, #28]
 800219c:	2000      	movs	r0, #0
 800219e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80021a2:	61d3      	str	r3, [r2, #28]
 80021a4:	2301      	movs	r3, #1
 80021a6:	6560      	str	r0, [r4, #84]	; 0x54
 80021a8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80021ac:	bd10      	pop	{r4, pc}
 80021ae:	2001      	movs	r0, #1
 80021b0:	e7fc      	b.n	80021ac <HAL_SPI_Init+0x70>

080021b2 <HAL_SPI_Transmit>:
 80021b2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80021b6:	461e      	mov	r6, r3
 80021b8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80021bc:	4604      	mov	r4, r0
 80021be:	2b01      	cmp	r3, #1
 80021c0:	460d      	mov	r5, r1
 80021c2:	4690      	mov	r8, r2
 80021c4:	f000 809c 	beq.w	8002300 <HAL_SPI_Transmit+0x14e>
 80021c8:	2301      	movs	r3, #1
 80021ca:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 80021ce:	f7fe fa8b 	bl	80006e8 <HAL_GetTick>
 80021d2:	4607      	mov	r7, r0
 80021d4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 80021d8:	b2c0      	uxtb	r0, r0
 80021da:	2801      	cmp	r0, #1
 80021dc:	f040 808e 	bne.w	80022fc <HAL_SPI_Transmit+0x14a>
 80021e0:	2d00      	cmp	r5, #0
 80021e2:	d05e      	beq.n	80022a2 <HAL_SPI_Transmit+0xf0>
 80021e4:	f1b8 0f00 	cmp.w	r8, #0
 80021e8:	d05b      	beq.n	80022a2 <HAL_SPI_Transmit+0xf0>
 80021ea:	2303      	movs	r3, #3
 80021ec:	2000      	movs	r0, #0
 80021ee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80021f2:	68a3      	ldr	r3, [r4, #8]
 80021f4:	6560      	str	r0, [r4, #84]	; 0x54
 80021f6:	63a0      	str	r0, [r4, #56]	; 0x38
 80021f8:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
 80021fc:	87a0      	strh	r0, [r4, #60]	; 0x3c
 80021fe:	87e0      	strh	r0, [r4, #62]	; 0x3e
 8002200:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8002204:	6820      	ldr	r0, [r4, #0]
 8002206:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800220a:	bf08      	it	eq
 800220c:	6803      	ldreq	r3, [r0, #0]
 800220e:	6325      	str	r5, [r4, #48]	; 0x30
 8002210:	bf08      	it	eq
 8002212:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8002216:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
 800221a:	bf08      	it	eq
 800221c:	6003      	streq	r3, [r0, #0]
 800221e:	6803      	ldr	r3, [r0, #0]
 8002220:	68e2      	ldr	r2, [r4, #12]
 8002222:	065b      	lsls	r3, r3, #25
 8002224:	bf5e      	ittt	pl
 8002226:	6803      	ldrpl	r3, [r0, #0]
 8002228:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 800222c:	6003      	strpl	r3, [r0, #0]
 800222e:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8002232:	6863      	ldr	r3, [r4, #4]
 8002234:	d13e      	bne.n	80022b4 <HAL_SPI_Transmit+0x102>
 8002236:	b113      	cbz	r3, 800223e <HAL_SPI_Transmit+0x8c>
 8002238:	f1b8 0f01 	cmp.w	r8, #1
 800223c:	d107      	bne.n	800224e <HAL_SPI_Transmit+0x9c>
 800223e:	f835 3b02 	ldrh.w	r3, [r5], #2
 8002242:	60c3      	str	r3, [r0, #12]
 8002244:	6325      	str	r5, [r4, #48]	; 0x30
 8002246:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002248:	3b01      	subs	r3, #1
 800224a:	b29b      	uxth	r3, r3
 800224c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800224e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002250:	b29b      	uxth	r3, r3
 8002252:	b9a3      	cbnz	r3, 800227e <HAL_SPI_Transmit+0xcc>
 8002254:	463a      	mov	r2, r7
 8002256:	4631      	mov	r1, r6
 8002258:	4620      	mov	r0, r4
 800225a:	f7ff ff60 	bl	800211e <SPI_EndRxTxTransaction>
 800225e:	2800      	cmp	r0, #0
 8002260:	d149      	bne.n	80022f6 <HAL_SPI_Transmit+0x144>
 8002262:	68a3      	ldr	r3, [r4, #8]
 8002264:	b933      	cbnz	r3, 8002274 <HAL_SPI_Transmit+0xc2>
 8002266:	9301      	str	r3, [sp, #4]
 8002268:	6823      	ldr	r3, [r4, #0]
 800226a:	68da      	ldr	r2, [r3, #12]
 800226c:	9201      	str	r2, [sp, #4]
 800226e:	689b      	ldr	r3, [r3, #8]
 8002270:	9301      	str	r3, [sp, #4]
 8002272:	9b01      	ldr	r3, [sp, #4]
 8002274:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002276:	3000      	adds	r0, #0
 8002278:	bf18      	it	ne
 800227a:	2001      	movne	r0, #1
 800227c:	e011      	b.n	80022a2 <HAL_SPI_Transmit+0xf0>
 800227e:	6822      	ldr	r2, [r4, #0]
 8002280:	6893      	ldr	r3, [r2, #8]
 8002282:	0798      	lsls	r0, r3, #30
 8002284:	d505      	bpl.n	8002292 <HAL_SPI_Transmit+0xe0>
 8002286:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002288:	f833 1b02 	ldrh.w	r1, [r3], #2
 800228c:	60d1      	str	r1, [r2, #12]
 800228e:	6323      	str	r3, [r4, #48]	; 0x30
 8002290:	e7d9      	b.n	8002246 <HAL_SPI_Transmit+0x94>
 8002292:	f7fe fa29 	bl	80006e8 <HAL_GetTick>
 8002296:	1bc0      	subs	r0, r0, r7
 8002298:	42b0      	cmp	r0, r6
 800229a:	d3d8      	bcc.n	800224e <HAL_SPI_Transmit+0x9c>
 800229c:	1c71      	adds	r1, r6, #1
 800229e:	d0d6      	beq.n	800224e <HAL_SPI_Transmit+0x9c>
 80022a0:	2003      	movs	r0, #3
 80022a2:	2301      	movs	r3, #1
 80022a4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80022a8:	2300      	movs	r3, #0
 80022aa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80022ae:	b002      	add	sp, #8
 80022b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80022b4:	b113      	cbz	r3, 80022bc <HAL_SPI_Transmit+0x10a>
 80022b6:	f1b8 0f01 	cmp.w	r8, #1
 80022ba:	d108      	bne.n	80022ce <HAL_SPI_Transmit+0x11c>
 80022bc:	782b      	ldrb	r3, [r5, #0]
 80022be:	7303      	strb	r3, [r0, #12]
 80022c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022c2:	3301      	adds	r3, #1
 80022c4:	6323      	str	r3, [r4, #48]	; 0x30
 80022c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80022c8:	3b01      	subs	r3, #1
 80022ca:	b29b      	uxth	r3, r3
 80022cc:	86e3      	strh	r3, [r4, #54]	; 0x36
 80022ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80022d0:	b29b      	uxth	r3, r3
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d0be      	beq.n	8002254 <HAL_SPI_Transmit+0xa2>
 80022d6:	6823      	ldr	r3, [r4, #0]
 80022d8:	689a      	ldr	r2, [r3, #8]
 80022da:	0792      	lsls	r2, r2, #30
 80022dc:	d503      	bpl.n	80022e6 <HAL_SPI_Transmit+0x134>
 80022de:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80022e0:	7812      	ldrb	r2, [r2, #0]
 80022e2:	731a      	strb	r2, [r3, #12]
 80022e4:	e7ec      	b.n	80022c0 <HAL_SPI_Transmit+0x10e>
 80022e6:	f7fe f9ff 	bl	80006e8 <HAL_GetTick>
 80022ea:	1bc0      	subs	r0, r0, r7
 80022ec:	42b0      	cmp	r0, r6
 80022ee:	d3ee      	bcc.n	80022ce <HAL_SPI_Transmit+0x11c>
 80022f0:	1c73      	adds	r3, r6, #1
 80022f2:	d0ec      	beq.n	80022ce <HAL_SPI_Transmit+0x11c>
 80022f4:	e7d4      	b.n	80022a0 <HAL_SPI_Transmit+0xee>
 80022f6:	2320      	movs	r3, #32
 80022f8:	6563      	str	r3, [r4, #84]	; 0x54
 80022fa:	e7b2      	b.n	8002262 <HAL_SPI_Transmit+0xb0>
 80022fc:	2002      	movs	r0, #2
 80022fe:	e7d0      	b.n	80022a2 <HAL_SPI_Transmit+0xf0>
 8002300:	2002      	movs	r0, #2
 8002302:	e7d4      	b.n	80022ae <HAL_SPI_Transmit+0xfc>

08002304 <HAL_SPI_Transmit_DMA>:
 8002304:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8002308:	b510      	push	{r4, lr}
 800230a:	2b01      	cmp	r3, #1
 800230c:	4604      	mov	r4, r0
 800230e:	d04e      	beq.n	80023ae <HAL_SPI_Transmit_DMA+0xaa>
 8002310:	2301      	movs	r3, #1
 8002312:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8002316:	f890 0051 	ldrb.w	r0, [r0, #81]	; 0x51
 800231a:	b2c0      	uxtb	r0, r0
 800231c:	4298      	cmp	r0, r3
 800231e:	d144      	bne.n	80023aa <HAL_SPI_Transmit_DMA+0xa6>
 8002320:	2900      	cmp	r1, #0
 8002322:	d02d      	beq.n	8002380 <HAL_SPI_Transmit_DMA+0x7c>
 8002324:	2a00      	cmp	r2, #0
 8002326:	d02b      	beq.n	8002380 <HAL_SPI_Transmit_DMA+0x7c>
 8002328:	2303      	movs	r3, #3
 800232a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800232e:	2300      	movs	r3, #0
 8002330:	6563      	str	r3, [r4, #84]	; 0x54
 8002332:	63a3      	str	r3, [r4, #56]	; 0x38
 8002334:	86e2      	strh	r2, [r4, #54]	; 0x36
 8002336:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 800233a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800233c:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800233e:	68a3      	ldr	r3, [r4, #8]
 8002340:	86a2      	strh	r2, [r4, #52]	; 0x34
 8002342:	6822      	ldr	r2, [r4, #0]
 8002344:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002348:	bf08      	it	eq
 800234a:	6813      	ldreq	r3, [r2, #0]
 800234c:	6321      	str	r1, [r4, #48]	; 0x30
 800234e:	bf04      	itt	eq
 8002350:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8002354:	6013      	streq	r3, [r2, #0]
 8002356:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8002358:	4b16      	ldr	r3, [pc, #88]	; (80023b4 <HAL_SPI_Transmit_DMA+0xb0>)
 800235a:	320c      	adds	r2, #12
 800235c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800235e:	4b16      	ldr	r3, [pc, #88]	; (80023b8 <HAL_SPI_Transmit_DMA+0xb4>)
 8002360:	6283      	str	r3, [r0, #40]	; 0x28
 8002362:	4b16      	ldr	r3, [pc, #88]	; (80023bc <HAL_SPI_Transmit_DMA+0xb8>)
 8002364:	6303      	str	r3, [r0, #48]	; 0x30
 8002366:	2300      	movs	r3, #0
 8002368:	6343      	str	r3, [r0, #52]	; 0x34
 800236a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800236c:	f7fe fc96 	bl	8000c9c <HAL_DMA_Start_IT>
 8002370:	b150      	cbz	r0, 8002388 <HAL_SPI_Transmit_DMA+0x84>
 8002372:	2001      	movs	r0, #1
 8002374:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8002376:	f043 0310 	orr.w	r3, r3, #16
 800237a:	6563      	str	r3, [r4, #84]	; 0x54
 800237c:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 8002380:	2300      	movs	r3, #0
 8002382:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8002386:	bd10      	pop	{r4, pc}
 8002388:	6823      	ldr	r3, [r4, #0]
 800238a:	681a      	ldr	r2, [r3, #0]
 800238c:	0652      	lsls	r2, r2, #25
 800238e:	bf5e      	ittt	pl
 8002390:	681a      	ldrpl	r2, [r3, #0]
 8002392:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8002396:	601a      	strpl	r2, [r3, #0]
 8002398:	685a      	ldr	r2, [r3, #4]
 800239a:	f042 0220 	orr.w	r2, r2, #32
 800239e:	605a      	str	r2, [r3, #4]
 80023a0:	685a      	ldr	r2, [r3, #4]
 80023a2:	f042 0202 	orr.w	r2, r2, #2
 80023a6:	605a      	str	r2, [r3, #4]
 80023a8:	e7ea      	b.n	8002380 <HAL_SPI_Transmit_DMA+0x7c>
 80023aa:	2002      	movs	r0, #2
 80023ac:	e7e8      	b.n	8002380 <HAL_SPI_Transmit_DMA+0x7c>
 80023ae:	2002      	movs	r0, #2
 80023b0:	e7e9      	b.n	8002386 <HAL_SPI_Transmit_DMA+0x82>
 80023b2:	bf00      	nop
 80023b4:	080023c5 	.word	0x080023c5
 80023b8:	080023f3 	.word	0x080023f3
 80023bc:	080023d1 	.word	0x080023d1

080023c0 <HAL_SPI_TxCpltCallback>:
 80023c0:	4770      	bx	lr

080023c2 <HAL_SPI_TxHalfCpltCallback>:
 80023c2:	4770      	bx	lr

080023c4 <SPI_DMAHalfTransmitCplt>:
 80023c4:	b508      	push	{r3, lr}
 80023c6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80023c8:	f7ff fffb 	bl	80023c2 <HAL_SPI_TxHalfCpltCallback>
 80023cc:	bd08      	pop	{r3, pc}

080023ce <HAL_SPI_ErrorCallback>:
 80023ce:	4770      	bx	lr

080023d0 <SPI_DMAError>:
 80023d0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80023d2:	b508      	push	{r3, lr}
 80023d4:	6802      	ldr	r2, [r0, #0]
 80023d6:	6853      	ldr	r3, [r2, #4]
 80023d8:	f023 0303 	bic.w	r3, r3, #3
 80023dc:	6053      	str	r3, [r2, #4]
 80023de:	6d43      	ldr	r3, [r0, #84]	; 0x54
 80023e0:	f043 0310 	orr.w	r3, r3, #16
 80023e4:	6543      	str	r3, [r0, #84]	; 0x54
 80023e6:	2301      	movs	r3, #1
 80023e8:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
 80023ec:	f7ff ffef 	bl	80023ce <HAL_SPI_ErrorCallback>
 80023f0:	bd08      	pop	{r3, pc}

080023f2 <SPI_DMATransmitCplt>:
 80023f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80023f4:	4605      	mov	r5, r0
 80023f6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80023f8:	f7fe f976 	bl	80006e8 <HAL_GetTick>
 80023fc:	682b      	ldr	r3, [r5, #0]
 80023fe:	4602      	mov	r2, r0
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	069b      	lsls	r3, r3, #26
 8002404:	d426      	bmi.n	8002454 <SPI_DMATransmitCplt+0x62>
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
 800240a:	6859      	ldr	r1, [r3, #4]
 800240c:	f021 0120 	bic.w	r1, r1, #32
 8002410:	6059      	str	r1, [r3, #4]
 8002412:	6859      	ldr	r1, [r3, #4]
 8002414:	f021 0102 	bic.w	r1, r1, #2
 8002418:	6059      	str	r1, [r3, #4]
 800241a:	2164      	movs	r1, #100	; 0x64
 800241c:	f7ff fe7f 	bl	800211e <SPI_EndRxTxTransaction>
 8002420:	b118      	cbz	r0, 800242a <SPI_DMATransmitCplt+0x38>
 8002422:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8002424:	f043 0320 	orr.w	r3, r3, #32
 8002428:	6563      	str	r3, [r4, #84]	; 0x54
 800242a:	68a3      	ldr	r3, [r4, #8]
 800242c:	b933      	cbnz	r3, 800243c <SPI_DMATransmitCplt+0x4a>
 800242e:	9301      	str	r3, [sp, #4]
 8002430:	6823      	ldr	r3, [r4, #0]
 8002432:	68da      	ldr	r2, [r3, #12]
 8002434:	9201      	str	r2, [sp, #4]
 8002436:	689b      	ldr	r3, [r3, #8]
 8002438:	9301      	str	r3, [sp, #4]
 800243a:	9b01      	ldr	r3, [sp, #4]
 800243c:	2300      	movs	r3, #0
 800243e:	86e3      	strh	r3, [r4, #54]	; 0x36
 8002440:	2301      	movs	r3, #1
 8002442:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8002446:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8002448:	b123      	cbz	r3, 8002454 <SPI_DMATransmitCplt+0x62>
 800244a:	4620      	mov	r0, r4
 800244c:	f7ff ffbf 	bl	80023ce <HAL_SPI_ErrorCallback>
 8002450:	b003      	add	sp, #12
 8002452:	bd30      	pop	{r4, r5, pc}
 8002454:	4620      	mov	r0, r4
 8002456:	f7ff ffb3 	bl	80023c0 <HAL_SPI_TxCpltCallback>
 800245a:	e7f9      	b.n	8002450 <SPI_DMATransmitCplt+0x5e>

0800245c <TIM_OC1_SetConfig>:
 800245c:	6a03      	ldr	r3, [r0, #32]
 800245e:	b570      	push	{r4, r5, r6, lr}
 8002460:	f023 0301 	bic.w	r3, r3, #1
 8002464:	6203      	str	r3, [r0, #32]
 8002466:	6a03      	ldr	r3, [r0, #32]
 8002468:	6844      	ldr	r4, [r0, #4]
 800246a:	6982      	ldr	r2, [r0, #24]
 800246c:	680d      	ldr	r5, [r1, #0]
 800246e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8002472:	432a      	orrs	r2, r5
 8002474:	688d      	ldr	r5, [r1, #8]
 8002476:	f023 0302 	bic.w	r3, r3, #2
 800247a:	432b      	orrs	r3, r5
 800247c:	4d0a      	ldr	r5, [pc, #40]	; (80024a8 <TIM_OC1_SetConfig+0x4c>)
 800247e:	42a8      	cmp	r0, r5
 8002480:	d10b      	bne.n	800249a <TIM_OC1_SetConfig+0x3e>
 8002482:	68cd      	ldr	r5, [r1, #12]
 8002484:	f023 0308 	bic.w	r3, r3, #8
 8002488:	432b      	orrs	r3, r5
 800248a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 800248e:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8002492:	4335      	orrs	r5, r6
 8002494:	f023 0304 	bic.w	r3, r3, #4
 8002498:	432c      	orrs	r4, r5
 800249a:	6044      	str	r4, [r0, #4]
 800249c:	6182      	str	r2, [r0, #24]
 800249e:	684a      	ldr	r2, [r1, #4]
 80024a0:	6342      	str	r2, [r0, #52]	; 0x34
 80024a2:	6203      	str	r3, [r0, #32]
 80024a4:	bd70      	pop	{r4, r5, r6, pc}
 80024a6:	bf00      	nop
 80024a8:	40012c00 	.word	0x40012c00

080024ac <TIM_OC3_SetConfig>:
 80024ac:	6a03      	ldr	r3, [r0, #32]
 80024ae:	b570      	push	{r4, r5, r6, lr}
 80024b0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80024b4:	6203      	str	r3, [r0, #32]
 80024b6:	6a03      	ldr	r3, [r0, #32]
 80024b8:	6844      	ldr	r4, [r0, #4]
 80024ba:	69c2      	ldr	r2, [r0, #28]
 80024bc:	680d      	ldr	r5, [r1, #0]
 80024be:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 80024c2:	432a      	orrs	r2, r5
 80024c4:	688d      	ldr	r5, [r1, #8]
 80024c6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80024ca:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80024ce:	4d0b      	ldr	r5, [pc, #44]	; (80024fc <TIM_OC3_SetConfig+0x50>)
 80024d0:	42a8      	cmp	r0, r5
 80024d2:	d10d      	bne.n	80024f0 <TIM_OC3_SetConfig+0x44>
 80024d4:	68cd      	ldr	r5, [r1, #12]
 80024d6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80024da:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80024de:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 80024e2:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 80024e6:	4335      	orrs	r5, r6
 80024e8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80024ec:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 80024f0:	6044      	str	r4, [r0, #4]
 80024f2:	61c2      	str	r2, [r0, #28]
 80024f4:	684a      	ldr	r2, [r1, #4]
 80024f6:	63c2      	str	r2, [r0, #60]	; 0x3c
 80024f8:	6203      	str	r3, [r0, #32]
 80024fa:	bd70      	pop	{r4, r5, r6, pc}
 80024fc:	40012c00 	.word	0x40012c00

08002500 <TIM_OC4_SetConfig>:
 8002500:	6a03      	ldr	r3, [r0, #32]
 8002502:	b530      	push	{r4, r5, lr}
 8002504:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002508:	6203      	str	r3, [r0, #32]
 800250a:	6a03      	ldr	r3, [r0, #32]
 800250c:	6844      	ldr	r4, [r0, #4]
 800250e:	69c2      	ldr	r2, [r0, #28]
 8002510:	680d      	ldr	r5, [r1, #0]
 8002512:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8002516:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800251a:	688d      	ldr	r5, [r1, #8]
 800251c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002520:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8002524:	4d06      	ldr	r5, [pc, #24]	; (8002540 <TIM_OC4_SetConfig+0x40>)
 8002526:	42a8      	cmp	r0, r5
 8002528:	bf02      	ittt	eq
 800252a:	694d      	ldreq	r5, [r1, #20]
 800252c:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 8002530:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8002534:	6044      	str	r4, [r0, #4]
 8002536:	61c2      	str	r2, [r0, #28]
 8002538:	684a      	ldr	r2, [r1, #4]
 800253a:	6402      	str	r2, [r0, #64]	; 0x40
 800253c:	6203      	str	r3, [r0, #32]
 800253e:	bd30      	pop	{r4, r5, pc}
 8002540:	40012c00 	.word	0x40012c00

08002544 <HAL_TIM_Base_MspInit>:
 8002544:	4770      	bx	lr

08002546 <HAL_TIM_Base_Start>:
 8002546:	2302      	movs	r3, #2
 8002548:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 800254c:	6803      	ldr	r3, [r0, #0]
 800254e:	689a      	ldr	r2, [r3, #8]
 8002550:	f002 0207 	and.w	r2, r2, #7
 8002554:	2a06      	cmp	r2, #6
 8002556:	bf1e      	ittt	ne
 8002558:	681a      	ldrne	r2, [r3, #0]
 800255a:	f042 0201 	orrne.w	r2, r2, #1
 800255e:	601a      	strne	r2, [r3, #0]
 8002560:	2301      	movs	r3, #1
 8002562:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 8002566:	2000      	movs	r0, #0
 8002568:	4770      	bx	lr

0800256a <HAL_TIM_PWM_MspInit>:
 800256a:	4770      	bx	lr

0800256c <TIM_Base_SetConfig>:
 800256c:	4a1a      	ldr	r2, [pc, #104]	; (80025d8 <TIM_Base_SetConfig+0x6c>)
 800256e:	6803      	ldr	r3, [r0, #0]
 8002570:	4290      	cmp	r0, r2
 8002572:	d00a      	beq.n	800258a <TIM_Base_SetConfig+0x1e>
 8002574:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8002578:	d007      	beq.n	800258a <TIM_Base_SetConfig+0x1e>
 800257a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800257e:	4290      	cmp	r0, r2
 8002580:	d003      	beq.n	800258a <TIM_Base_SetConfig+0x1e>
 8002582:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002586:	4290      	cmp	r0, r2
 8002588:	d115      	bne.n	80025b6 <TIM_Base_SetConfig+0x4a>
 800258a:	684a      	ldr	r2, [r1, #4]
 800258c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002590:	4313      	orrs	r3, r2
 8002592:	4a11      	ldr	r2, [pc, #68]	; (80025d8 <TIM_Base_SetConfig+0x6c>)
 8002594:	4290      	cmp	r0, r2
 8002596:	d00a      	beq.n	80025ae <TIM_Base_SetConfig+0x42>
 8002598:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800259c:	d007      	beq.n	80025ae <TIM_Base_SetConfig+0x42>
 800259e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80025a2:	4290      	cmp	r0, r2
 80025a4:	d003      	beq.n	80025ae <TIM_Base_SetConfig+0x42>
 80025a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80025aa:	4290      	cmp	r0, r2
 80025ac:	d103      	bne.n	80025b6 <TIM_Base_SetConfig+0x4a>
 80025ae:	68ca      	ldr	r2, [r1, #12]
 80025b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80025b4:	4313      	orrs	r3, r2
 80025b6:	694a      	ldr	r2, [r1, #20]
 80025b8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80025bc:	4313      	orrs	r3, r2
 80025be:	6003      	str	r3, [r0, #0]
 80025c0:	688b      	ldr	r3, [r1, #8]
 80025c2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80025c4:	680b      	ldr	r3, [r1, #0]
 80025c6:	6283      	str	r3, [r0, #40]	; 0x28
 80025c8:	4b03      	ldr	r3, [pc, #12]	; (80025d8 <TIM_Base_SetConfig+0x6c>)
 80025ca:	4298      	cmp	r0, r3
 80025cc:	bf04      	itt	eq
 80025ce:	690b      	ldreq	r3, [r1, #16]
 80025d0:	6303      	streq	r3, [r0, #48]	; 0x30
 80025d2:	2301      	movs	r3, #1
 80025d4:	6143      	str	r3, [r0, #20]
 80025d6:	4770      	bx	lr
 80025d8:	40012c00 	.word	0x40012c00

080025dc <HAL_TIM_Base_Init>:
 80025dc:	b510      	push	{r4, lr}
 80025de:	4604      	mov	r4, r0
 80025e0:	b1a0      	cbz	r0, 800260c <HAL_TIM_Base_Init+0x30>
 80025e2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80025e6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80025ea:	b91b      	cbnz	r3, 80025f4 <HAL_TIM_Base_Init+0x18>
 80025ec:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 80025f0:	f7ff ffa8 	bl	8002544 <HAL_TIM_Base_MspInit>
 80025f4:	2302      	movs	r3, #2
 80025f6:	6820      	ldr	r0, [r4, #0]
 80025f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80025fc:	1d21      	adds	r1, r4, #4
 80025fe:	f7ff ffb5 	bl	800256c <TIM_Base_SetConfig>
 8002602:	2301      	movs	r3, #1
 8002604:	2000      	movs	r0, #0
 8002606:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800260a:	bd10      	pop	{r4, pc}
 800260c:	2001      	movs	r0, #1
 800260e:	e7fc      	b.n	800260a <HAL_TIM_Base_Init+0x2e>

08002610 <HAL_TIM_PWM_Init>:
 8002610:	b510      	push	{r4, lr}
 8002612:	4604      	mov	r4, r0
 8002614:	b1a0      	cbz	r0, 8002640 <HAL_TIM_PWM_Init+0x30>
 8002616:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800261a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800261e:	b91b      	cbnz	r3, 8002628 <HAL_TIM_PWM_Init+0x18>
 8002620:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8002624:	f7ff ffa1 	bl	800256a <HAL_TIM_PWM_MspInit>
 8002628:	2302      	movs	r3, #2
 800262a:	6820      	ldr	r0, [r4, #0]
 800262c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8002630:	1d21      	adds	r1, r4, #4
 8002632:	f7ff ff9b 	bl	800256c <TIM_Base_SetConfig>
 8002636:	2301      	movs	r3, #1
 8002638:	2000      	movs	r0, #0
 800263a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800263e:	bd10      	pop	{r4, pc}
 8002640:	2001      	movs	r0, #1
 8002642:	e7fc      	b.n	800263e <HAL_TIM_PWM_Init+0x2e>

08002644 <TIM_OC2_SetConfig>:
 8002644:	6a03      	ldr	r3, [r0, #32]
 8002646:	b570      	push	{r4, r5, r6, lr}
 8002648:	f023 0310 	bic.w	r3, r3, #16
 800264c:	6203      	str	r3, [r0, #32]
 800264e:	6a03      	ldr	r3, [r0, #32]
 8002650:	6844      	ldr	r4, [r0, #4]
 8002652:	6982      	ldr	r2, [r0, #24]
 8002654:	680d      	ldr	r5, [r1, #0]
 8002656:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 800265a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800265e:	688d      	ldr	r5, [r1, #8]
 8002660:	f023 0320 	bic.w	r3, r3, #32
 8002664:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8002668:	4d0b      	ldr	r5, [pc, #44]	; (8002698 <TIM_OC2_SetConfig+0x54>)
 800266a:	42a8      	cmp	r0, r5
 800266c:	d10d      	bne.n	800268a <TIM_OC2_SetConfig+0x46>
 800266e:	68cd      	ldr	r5, [r1, #12]
 8002670:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002674:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8002678:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 800267c:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8002680:	4335      	orrs	r5, r6
 8002682:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002686:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 800268a:	6044      	str	r4, [r0, #4]
 800268c:	6182      	str	r2, [r0, #24]
 800268e:	684a      	ldr	r2, [r1, #4]
 8002690:	6382      	str	r2, [r0, #56]	; 0x38
 8002692:	6203      	str	r3, [r0, #32]
 8002694:	bd70      	pop	{r4, r5, r6, pc}
 8002696:	bf00      	nop
 8002698:	40012c00 	.word	0x40012c00

0800269c <HAL_TIM_PWM_ConfigChannel>:
 800269c:	b538      	push	{r3, r4, r5, lr}
 800269e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80026a2:	4604      	mov	r4, r0
 80026a4:	2b01      	cmp	r3, #1
 80026a6:	f04f 0002 	mov.w	r0, #2
 80026aa:	d025      	beq.n	80026f8 <HAL_TIM_PWM_ConfigChannel+0x5c>
 80026ac:	2301      	movs	r3, #1
 80026ae:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 80026b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80026b6:	2a0c      	cmp	r2, #12
 80026b8:	d818      	bhi.n	80026ec <HAL_TIM_PWM_ConfigChannel+0x50>
 80026ba:	e8df f002 	tbb	[pc, r2]
 80026be:	1707      	.short	0x1707
 80026c0:	171e1717 	.word	0x171e1717
 80026c4:	172f1717 	.word	0x172f1717
 80026c8:	1717      	.short	0x1717
 80026ca:	40          	.byte	0x40
 80026cb:	00          	.byte	0x00
 80026cc:	6820      	ldr	r0, [r4, #0]
 80026ce:	f7ff fec5 	bl	800245c <TIM_OC1_SetConfig>
 80026d2:	6823      	ldr	r3, [r4, #0]
 80026d4:	6909      	ldr	r1, [r1, #16]
 80026d6:	699a      	ldr	r2, [r3, #24]
 80026d8:	f042 0208 	orr.w	r2, r2, #8
 80026dc:	619a      	str	r2, [r3, #24]
 80026de:	699a      	ldr	r2, [r3, #24]
 80026e0:	f022 0204 	bic.w	r2, r2, #4
 80026e4:	619a      	str	r2, [r3, #24]
 80026e6:	699a      	ldr	r2, [r3, #24]
 80026e8:	430a      	orrs	r2, r1
 80026ea:	619a      	str	r2, [r3, #24]
 80026ec:	2301      	movs	r3, #1
 80026ee:	2000      	movs	r0, #0
 80026f0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80026f4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 80026f8:	bd38      	pop	{r3, r4, r5, pc}
 80026fa:	6820      	ldr	r0, [r4, #0]
 80026fc:	f7ff ffa2 	bl	8002644 <TIM_OC2_SetConfig>
 8002700:	6823      	ldr	r3, [r4, #0]
 8002702:	6909      	ldr	r1, [r1, #16]
 8002704:	699a      	ldr	r2, [r3, #24]
 8002706:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800270a:	619a      	str	r2, [r3, #24]
 800270c:	699a      	ldr	r2, [r3, #24]
 800270e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002712:	619a      	str	r2, [r3, #24]
 8002714:	699a      	ldr	r2, [r3, #24]
 8002716:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800271a:	e7e6      	b.n	80026ea <HAL_TIM_PWM_ConfigChannel+0x4e>
 800271c:	6820      	ldr	r0, [r4, #0]
 800271e:	f7ff fec5 	bl	80024ac <TIM_OC3_SetConfig>
 8002722:	6823      	ldr	r3, [r4, #0]
 8002724:	6909      	ldr	r1, [r1, #16]
 8002726:	69da      	ldr	r2, [r3, #28]
 8002728:	f042 0208 	orr.w	r2, r2, #8
 800272c:	61da      	str	r2, [r3, #28]
 800272e:	69da      	ldr	r2, [r3, #28]
 8002730:	f022 0204 	bic.w	r2, r2, #4
 8002734:	61da      	str	r2, [r3, #28]
 8002736:	69da      	ldr	r2, [r3, #28]
 8002738:	430a      	orrs	r2, r1
 800273a:	61da      	str	r2, [r3, #28]
 800273c:	e7d6      	b.n	80026ec <HAL_TIM_PWM_ConfigChannel+0x50>
 800273e:	6820      	ldr	r0, [r4, #0]
 8002740:	f7ff fede 	bl	8002500 <TIM_OC4_SetConfig>
 8002744:	6823      	ldr	r3, [r4, #0]
 8002746:	6909      	ldr	r1, [r1, #16]
 8002748:	69da      	ldr	r2, [r3, #28]
 800274a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800274e:	61da      	str	r2, [r3, #28]
 8002750:	69da      	ldr	r2, [r3, #28]
 8002752:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002756:	61da      	str	r2, [r3, #28]
 8002758:	69da      	ldr	r2, [r3, #28]
 800275a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800275e:	e7ec      	b.n	800273a <HAL_TIM_PWM_ConfigChannel+0x9e>

08002760 <TIM_ETR_SetConfig>:
 8002760:	b510      	push	{r4, lr}
 8002762:	6884      	ldr	r4, [r0, #8]
 8002764:	430a      	orrs	r2, r1
 8002766:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 800276a:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 800276e:	4323      	orrs	r3, r4
 8002770:	6083      	str	r3, [r0, #8]
 8002772:	bd10      	pop	{r4, pc}

08002774 <HAL_TIM_ConfigClockSource>:
 8002774:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8002778:	b570      	push	{r4, r5, r6, lr}
 800277a:	2b01      	cmp	r3, #1
 800277c:	4604      	mov	r4, r0
 800277e:	f04f 0002 	mov.w	r0, #2
 8002782:	d019      	beq.n	80027b8 <HAL_TIM_ConfigClockSource+0x44>
 8002784:	2301      	movs	r3, #1
 8002786:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 800278a:	6820      	ldr	r0, [r4, #0]
 800278c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8002790:	6883      	ldr	r3, [r0, #8]
 8002792:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002796:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800279a:	6083      	str	r3, [r0, #8]
 800279c:	680b      	ldr	r3, [r1, #0]
 800279e:	2b40      	cmp	r3, #64	; 0x40
 80027a0:	d065      	beq.n	800286e <HAL_TIM_ConfigClockSource+0xfa>
 80027a2:	d815      	bhi.n	80027d0 <HAL_TIM_ConfigClockSource+0x5c>
 80027a4:	2b10      	cmp	r3, #16
 80027a6:	d00c      	beq.n	80027c2 <HAL_TIM_ConfigClockSource+0x4e>
 80027a8:	d807      	bhi.n	80027ba <HAL_TIM_ConfigClockSource+0x46>
 80027aa:	b153      	cbz	r3, 80027c2 <HAL_TIM_ConfigClockSource+0x4e>
 80027ac:	2301      	movs	r3, #1
 80027ae:	2000      	movs	r0, #0
 80027b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80027b4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 80027b8:	bd70      	pop	{r4, r5, r6, pc}
 80027ba:	2b20      	cmp	r3, #32
 80027bc:	d001      	beq.n	80027c2 <HAL_TIM_ConfigClockSource+0x4e>
 80027be:	2b30      	cmp	r3, #48	; 0x30
 80027c0:	d1f4      	bne.n	80027ac <HAL_TIM_ConfigClockSource+0x38>
 80027c2:	6882      	ldr	r2, [r0, #8]
 80027c4:	f043 0307 	orr.w	r3, r3, #7
 80027c8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80027cc:	4313      	orrs	r3, r2
 80027ce:	e01a      	b.n	8002806 <HAL_TIM_ConfigClockSource+0x92>
 80027d0:	2b60      	cmp	r3, #96	; 0x60
 80027d2:	d034      	beq.n	800283e <HAL_TIM_ConfigClockSource+0xca>
 80027d4:	d819      	bhi.n	800280a <HAL_TIM_ConfigClockSource+0x96>
 80027d6:	2b50      	cmp	r3, #80	; 0x50
 80027d8:	d1e8      	bne.n	80027ac <HAL_TIM_ConfigClockSource+0x38>
 80027da:	684a      	ldr	r2, [r1, #4]
 80027dc:	68ce      	ldr	r6, [r1, #12]
 80027de:	6a01      	ldr	r1, [r0, #32]
 80027e0:	6a05      	ldr	r5, [r0, #32]
 80027e2:	f021 010a 	bic.w	r1, r1, #10
 80027e6:	f025 0501 	bic.w	r5, r5, #1
 80027ea:	6205      	str	r5, [r0, #32]
 80027ec:	6983      	ldr	r3, [r0, #24]
 80027ee:	430a      	orrs	r2, r1
 80027f0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80027f4:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 80027f8:	6183      	str	r3, [r0, #24]
 80027fa:	6202      	str	r2, [r0, #32]
 80027fc:	6883      	ldr	r3, [r0, #8]
 80027fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002802:	f043 0357 	orr.w	r3, r3, #87	; 0x57
 8002806:	6083      	str	r3, [r0, #8]
 8002808:	e7d0      	b.n	80027ac <HAL_TIM_ConfigClockSource+0x38>
 800280a:	2b70      	cmp	r3, #112	; 0x70
 800280c:	d00c      	beq.n	8002828 <HAL_TIM_ConfigClockSource+0xb4>
 800280e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002812:	d1cb      	bne.n	80027ac <HAL_TIM_ConfigClockSource+0x38>
 8002814:	68cb      	ldr	r3, [r1, #12]
 8002816:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800281a:	f7ff ffa1 	bl	8002760 <TIM_ETR_SetConfig>
 800281e:	6822      	ldr	r2, [r4, #0]
 8002820:	6893      	ldr	r3, [r2, #8]
 8002822:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002826:	e008      	b.n	800283a <HAL_TIM_ConfigClockSource+0xc6>
 8002828:	68cb      	ldr	r3, [r1, #12]
 800282a:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800282e:	f7ff ff97 	bl	8002760 <TIM_ETR_SetConfig>
 8002832:	6822      	ldr	r2, [r4, #0]
 8002834:	6893      	ldr	r3, [r2, #8]
 8002836:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800283a:	6093      	str	r3, [r2, #8]
 800283c:	e7b6      	b.n	80027ac <HAL_TIM_ConfigClockSource+0x38>
 800283e:	684d      	ldr	r5, [r1, #4]
 8002840:	68ce      	ldr	r6, [r1, #12]
 8002842:	6a01      	ldr	r1, [r0, #32]
 8002844:	f021 0110 	bic.w	r1, r1, #16
 8002848:	6201      	str	r1, [r0, #32]
 800284a:	6982      	ldr	r2, [r0, #24]
 800284c:	6a03      	ldr	r3, [r0, #32]
 800284e:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8002852:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002856:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 800285a:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
 800285e:	6182      	str	r2, [r0, #24]
 8002860:	6203      	str	r3, [r0, #32]
 8002862:	6883      	ldr	r3, [r0, #8]
 8002864:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002868:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 800286c:	e7cb      	b.n	8002806 <HAL_TIM_ConfigClockSource+0x92>
 800286e:	684a      	ldr	r2, [r1, #4]
 8002870:	68ce      	ldr	r6, [r1, #12]
 8002872:	6a01      	ldr	r1, [r0, #32]
 8002874:	6a05      	ldr	r5, [r0, #32]
 8002876:	f021 010a 	bic.w	r1, r1, #10
 800287a:	f025 0501 	bic.w	r5, r5, #1
 800287e:	6205      	str	r5, [r0, #32]
 8002880:	6983      	ldr	r3, [r0, #24]
 8002882:	430a      	orrs	r2, r1
 8002884:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002888:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 800288c:	6183      	str	r3, [r0, #24]
 800288e:	6202      	str	r2, [r0, #32]
 8002890:	6883      	ldr	r3, [r0, #8]
 8002892:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002896:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 800289a:	e7b4      	b.n	8002806 <HAL_TIM_ConfigClockSource+0x92>

0800289c <TIM_CCxChannelCmd>:
 800289c:	b510      	push	{r4, lr}
 800289e:	2401      	movs	r4, #1
 80028a0:	6a03      	ldr	r3, [r0, #32]
 80028a2:	f001 011f 	and.w	r1, r1, #31
 80028a6:	408c      	lsls	r4, r1
 80028a8:	ea23 0304 	bic.w	r3, r3, r4
 80028ac:	6203      	str	r3, [r0, #32]
 80028ae:	6a03      	ldr	r3, [r0, #32]
 80028b0:	408a      	lsls	r2, r1
 80028b2:	431a      	orrs	r2, r3
 80028b4:	6202      	str	r2, [r0, #32]
 80028b6:	bd10      	pop	{r4, pc}

080028b8 <HAL_TIM_OC_Start>:
 80028b8:	b510      	push	{r4, lr}
 80028ba:	4604      	mov	r4, r0
 80028bc:	2201      	movs	r2, #1
 80028be:	6800      	ldr	r0, [r0, #0]
 80028c0:	f7ff ffec 	bl	800289c <TIM_CCxChannelCmd>
 80028c4:	6823      	ldr	r3, [r4, #0]
 80028c6:	4a09      	ldr	r2, [pc, #36]	; (80028ec <HAL_TIM_OC_Start+0x34>)
 80028c8:	2000      	movs	r0, #0
 80028ca:	4293      	cmp	r3, r2
 80028cc:	bf02      	ittt	eq
 80028ce:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 80028d0:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 80028d4:	645a      	streq	r2, [r3, #68]	; 0x44
 80028d6:	689a      	ldr	r2, [r3, #8]
 80028d8:	f002 0207 	and.w	r2, r2, #7
 80028dc:	2a06      	cmp	r2, #6
 80028de:	bf1e      	ittt	ne
 80028e0:	681a      	ldrne	r2, [r3, #0]
 80028e2:	f042 0201 	orrne.w	r2, r2, #1
 80028e6:	601a      	strne	r2, [r3, #0]
 80028e8:	bd10      	pop	{r4, pc}
 80028ea:	bf00      	nop
 80028ec:	40012c00 	.word	0x40012c00

080028f0 <HAL_TIM_PWM_Start>:
 80028f0:	f7ff bfe2 	b.w	80028b8 <HAL_TIM_OC_Start>

080028f4 <UART_EndRxTransfer>:
 80028f4:	6803      	ldr	r3, [r0, #0]
 80028f6:	68da      	ldr	r2, [r3, #12]
 80028f8:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80028fc:	60da      	str	r2, [r3, #12]
 80028fe:	695a      	ldr	r2, [r3, #20]
 8002900:	f022 0201 	bic.w	r2, r2, #1
 8002904:	615a      	str	r2, [r3, #20]
 8002906:	2320      	movs	r3, #32
 8002908:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
 800290c:	4770      	bx	lr
	...

08002910 <UART_SetConfig>:
 8002910:	b538      	push	{r3, r4, r5, lr}
 8002912:	4605      	mov	r5, r0
 8002914:	6803      	ldr	r3, [r0, #0]
 8002916:	68c1      	ldr	r1, [r0, #12]
 8002918:	691a      	ldr	r2, [r3, #16]
 800291a:	2419      	movs	r4, #25
 800291c:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8002920:	430a      	orrs	r2, r1
 8002922:	611a      	str	r2, [r3, #16]
 8002924:	6882      	ldr	r2, [r0, #8]
 8002926:	6900      	ldr	r0, [r0, #16]
 8002928:	68d9      	ldr	r1, [r3, #12]
 800292a:	4302      	orrs	r2, r0
 800292c:	6968      	ldr	r0, [r5, #20]
 800292e:	f421 51b0 	bic.w	r1, r1, #5632	; 0x1600
 8002932:	f021 010c 	bic.w	r1, r1, #12
 8002936:	4302      	orrs	r2, r0
 8002938:	430a      	orrs	r2, r1
 800293a:	60da      	str	r2, [r3, #12]
 800293c:	695a      	ldr	r2, [r3, #20]
 800293e:	69a9      	ldr	r1, [r5, #24]
 8002940:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8002944:	430a      	orrs	r2, r1
 8002946:	615a      	str	r2, [r3, #20]
 8002948:	4a0d      	ldr	r2, [pc, #52]	; (8002980 <UART_SetConfig+0x70>)
 800294a:	4293      	cmp	r3, r2
 800294c:	d114      	bne.n	8002978 <UART_SetConfig+0x68>
 800294e:	f7ff fb23 	bl	8001f98 <HAL_RCC_GetPCLK2Freq>
 8002952:	4360      	muls	r0, r4
 8002954:	686c      	ldr	r4, [r5, #4]
 8002956:	2264      	movs	r2, #100	; 0x64
 8002958:	00a4      	lsls	r4, r4, #2
 800295a:	fbb0 f0f4 	udiv	r0, r0, r4
 800295e:	fbb0 f1f2 	udiv	r1, r0, r2
 8002962:	fb02 0311 	mls	r3, r2, r1, r0
 8002966:	011b      	lsls	r3, r3, #4
 8002968:	3332      	adds	r3, #50	; 0x32
 800296a:	fbb3 f3f2 	udiv	r3, r3, r2
 800296e:	682c      	ldr	r4, [r5, #0]
 8002970:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8002974:	60a3      	str	r3, [r4, #8]
 8002976:	bd38      	pop	{r3, r4, r5, pc}
 8002978:	f7ff fafe 	bl	8001f78 <HAL_RCC_GetPCLK1Freq>
 800297c:	e7e9      	b.n	8002952 <UART_SetConfig+0x42>
 800297e:	bf00      	nop
 8002980:	40013800 	.word	0x40013800

08002984 <UART_WaitOnFlagUntilTimeout.constprop.3>:
 8002984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002986:	4604      	mov	r4, r0
 8002988:	460e      	mov	r6, r1
 800298a:	4617      	mov	r7, r2
 800298c:	461d      	mov	r5, r3
 800298e:	6821      	ldr	r1, [r4, #0]
 8002990:	680b      	ldr	r3, [r1, #0]
 8002992:	ea36 0303 	bics.w	r3, r6, r3
 8002996:	d101      	bne.n	800299c <UART_WaitOnFlagUntilTimeout.constprop.3+0x18>
 8002998:	2000      	movs	r0, #0
 800299a:	e014      	b.n	80029c6 <UART_WaitOnFlagUntilTimeout.constprop.3+0x42>
 800299c:	1c6b      	adds	r3, r5, #1
 800299e:	d0f7      	beq.n	8002990 <UART_WaitOnFlagUntilTimeout.constprop.3+0xc>
 80029a0:	b995      	cbnz	r5, 80029c8 <UART_WaitOnFlagUntilTimeout.constprop.3+0x44>
 80029a2:	6823      	ldr	r3, [r4, #0]
 80029a4:	2003      	movs	r0, #3
 80029a6:	68da      	ldr	r2, [r3, #12]
 80029a8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80029ac:	60da      	str	r2, [r3, #12]
 80029ae:	695a      	ldr	r2, [r3, #20]
 80029b0:	f022 0201 	bic.w	r2, r2, #1
 80029b4:	615a      	str	r2, [r3, #20]
 80029b6:	2320      	movs	r3, #32
 80029b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80029bc:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 80029c0:	2300      	movs	r3, #0
 80029c2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80029c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80029c8:	f7fd fe8e 	bl	80006e8 <HAL_GetTick>
 80029cc:	1bc0      	subs	r0, r0, r7
 80029ce:	4285      	cmp	r5, r0
 80029d0:	d2dd      	bcs.n	800298e <UART_WaitOnFlagUntilTimeout.constprop.3+0xa>
 80029d2:	e7e6      	b.n	80029a2 <UART_WaitOnFlagUntilTimeout.constprop.3+0x1e>

080029d4 <HAL_UART_Init>:
 80029d4:	b510      	push	{r4, lr}
 80029d6:	4604      	mov	r4, r0
 80029d8:	b340      	cbz	r0, 8002a2c <HAL_UART_Init+0x58>
 80029da:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80029de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80029e2:	b91b      	cbnz	r3, 80029ec <HAL_UART_Init+0x18>
 80029e4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80029e8:	f003 fabe 	bl	8005f68 <HAL_UART_MspInit>
 80029ec:	2324      	movs	r3, #36	; 0x24
 80029ee:	6822      	ldr	r2, [r4, #0]
 80029f0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80029f4:	68d3      	ldr	r3, [r2, #12]
 80029f6:	4620      	mov	r0, r4
 80029f8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80029fc:	60d3      	str	r3, [r2, #12]
 80029fe:	f7ff ff87 	bl	8002910 <UART_SetConfig>
 8002a02:	6823      	ldr	r3, [r4, #0]
 8002a04:	2000      	movs	r0, #0
 8002a06:	691a      	ldr	r2, [r3, #16]
 8002a08:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002a0c:	611a      	str	r2, [r3, #16]
 8002a0e:	695a      	ldr	r2, [r3, #20]
 8002a10:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002a14:	615a      	str	r2, [r3, #20]
 8002a16:	68da      	ldr	r2, [r3, #12]
 8002a18:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002a1c:	60da      	str	r2, [r3, #12]
 8002a1e:	2320      	movs	r3, #32
 8002a20:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002a22:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8002a26:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8002a2a:	bd10      	pop	{r4, pc}
 8002a2c:	2001      	movs	r0, #1
 8002a2e:	e7fc      	b.n	8002a2a <HAL_UART_Init+0x56>

08002a30 <HAL_HalfDuplex_Init>:
 8002a30:	b510      	push	{r4, lr}
 8002a32:	4604      	mov	r4, r0
 8002a34:	b360      	cbz	r0, 8002a90 <HAL_HalfDuplex_Init+0x60>
 8002a36:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8002a3a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002a3e:	b91b      	cbnz	r3, 8002a48 <HAL_HalfDuplex_Init+0x18>
 8002a40:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8002a44:	f003 fa90 	bl	8005f68 <HAL_UART_MspInit>
 8002a48:	2324      	movs	r3, #36	; 0x24
 8002a4a:	6822      	ldr	r2, [r4, #0]
 8002a4c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8002a50:	68d3      	ldr	r3, [r2, #12]
 8002a52:	4620      	mov	r0, r4
 8002a54:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002a58:	60d3      	str	r3, [r2, #12]
 8002a5a:	f7ff ff59 	bl	8002910 <UART_SetConfig>
 8002a5e:	6823      	ldr	r3, [r4, #0]
 8002a60:	2000      	movs	r0, #0
 8002a62:	691a      	ldr	r2, [r3, #16]
 8002a64:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002a68:	611a      	str	r2, [r3, #16]
 8002a6a:	695a      	ldr	r2, [r3, #20]
 8002a6c:	f022 0222 	bic.w	r2, r2, #34	; 0x22
 8002a70:	615a      	str	r2, [r3, #20]
 8002a72:	695a      	ldr	r2, [r3, #20]
 8002a74:	f042 0208 	orr.w	r2, r2, #8
 8002a78:	615a      	str	r2, [r3, #20]
 8002a7a:	68da      	ldr	r2, [r3, #12]
 8002a7c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002a80:	60da      	str	r2, [r3, #12]
 8002a82:	2320      	movs	r3, #32
 8002a84:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002a86:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8002a8a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8002a8e:	bd10      	pop	{r4, pc}
 8002a90:	2001      	movs	r0, #1
 8002a92:	e7fc      	b.n	8002a8e <HAL_HalfDuplex_Init+0x5e>

08002a94 <HAL_UART_Transmit>:
 8002a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a98:	461f      	mov	r7, r3
 8002a9a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8002a9e:	4604      	mov	r4, r0
 8002aa0:	2b20      	cmp	r3, #32
 8002aa2:	460d      	mov	r5, r1
 8002aa4:	4690      	mov	r8, r2
 8002aa6:	d14c      	bne.n	8002b42 <HAL_UART_Transmit+0xae>
 8002aa8:	2900      	cmp	r1, #0
 8002aaa:	d048      	beq.n	8002b3e <HAL_UART_Transmit+0xaa>
 8002aac:	2a00      	cmp	r2, #0
 8002aae:	d046      	beq.n	8002b3e <HAL_UART_Transmit+0xaa>
 8002ab0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8002ab4:	2b01      	cmp	r3, #1
 8002ab6:	d044      	beq.n	8002b42 <HAL_UART_Transmit+0xae>
 8002ab8:	2301      	movs	r3, #1
 8002aba:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 8002abe:	2300      	movs	r3, #0
 8002ac0:	63c3      	str	r3, [r0, #60]	; 0x3c
 8002ac2:	2321      	movs	r3, #33	; 0x21
 8002ac4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
 8002ac8:	f7fd fe0e 	bl	80006e8 <HAL_GetTick>
 8002acc:	4606      	mov	r6, r0
 8002ace:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
 8002ad2:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
 8002ad6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8002ad8:	b29b      	uxth	r3, r3
 8002ada:	b963      	cbnz	r3, 8002af6 <HAL_UART_Transmit+0x62>
 8002adc:	463b      	mov	r3, r7
 8002ade:	4632      	mov	r2, r6
 8002ae0:	2140      	movs	r1, #64	; 0x40
 8002ae2:	4620      	mov	r0, r4
 8002ae4:	f7ff ff4e 	bl	8002984 <UART_WaitOnFlagUntilTimeout.constprop.3>
 8002ae8:	b9a0      	cbnz	r0, 8002b14 <HAL_UART_Transmit+0x80>
 8002aea:	2320      	movs	r3, #32
 8002aec:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8002af0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8002af4:	e00f      	b.n	8002b16 <HAL_UART_Transmit+0x82>
 8002af6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8002af8:	4632      	mov	r2, r6
 8002afa:	3b01      	subs	r3, #1
 8002afc:	b29b      	uxth	r3, r3
 8002afe:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002b00:	68a3      	ldr	r3, [r4, #8]
 8002b02:	2180      	movs	r1, #128	; 0x80
 8002b04:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002b08:	4620      	mov	r0, r4
 8002b0a:	463b      	mov	r3, r7
 8002b0c:	d10e      	bne.n	8002b2c <HAL_UART_Transmit+0x98>
 8002b0e:	f7ff ff39 	bl	8002984 <UART_WaitOnFlagUntilTimeout.constprop.3>
 8002b12:	b110      	cbz	r0, 8002b1a <HAL_UART_Transmit+0x86>
 8002b14:	2003      	movs	r0, #3
 8002b16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b1a:	882b      	ldrh	r3, [r5, #0]
 8002b1c:	6822      	ldr	r2, [r4, #0]
 8002b1e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002b22:	6053      	str	r3, [r2, #4]
 8002b24:	6923      	ldr	r3, [r4, #16]
 8002b26:	b943      	cbnz	r3, 8002b3a <HAL_UART_Transmit+0xa6>
 8002b28:	3502      	adds	r5, #2
 8002b2a:	e7d4      	b.n	8002ad6 <HAL_UART_Transmit+0x42>
 8002b2c:	f7ff ff2a 	bl	8002984 <UART_WaitOnFlagUntilTimeout.constprop.3>
 8002b30:	2800      	cmp	r0, #0
 8002b32:	d1ef      	bne.n	8002b14 <HAL_UART_Transmit+0x80>
 8002b34:	6823      	ldr	r3, [r4, #0]
 8002b36:	782a      	ldrb	r2, [r5, #0]
 8002b38:	605a      	str	r2, [r3, #4]
 8002b3a:	3501      	adds	r5, #1
 8002b3c:	e7cb      	b.n	8002ad6 <HAL_UART_Transmit+0x42>
 8002b3e:	2001      	movs	r0, #1
 8002b40:	e7e9      	b.n	8002b16 <HAL_UART_Transmit+0x82>
 8002b42:	2002      	movs	r0, #2
 8002b44:	e7e7      	b.n	8002b16 <HAL_UART_Transmit+0x82>

08002b46 <HAL_UART_Receive_IT>:
 8002b46:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 8002b4a:	2b20      	cmp	r3, #32
 8002b4c:	d120      	bne.n	8002b90 <HAL_UART_Receive_IT+0x4a>
 8002b4e:	b1e9      	cbz	r1, 8002b8c <HAL_UART_Receive_IT+0x46>
 8002b50:	b1e2      	cbz	r2, 8002b8c <HAL_UART_Receive_IT+0x46>
 8002b52:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8002b56:	2b01      	cmp	r3, #1
 8002b58:	d01a      	beq.n	8002b90 <HAL_UART_Receive_IT+0x4a>
 8002b5a:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8002b5c:	8582      	strh	r2, [r0, #44]	; 0x2c
 8002b5e:	2300      	movs	r3, #0
 8002b60:	2222      	movs	r2, #34	; 0x22
 8002b62:	63c3      	str	r3, [r0, #60]	; 0x3c
 8002b64:	f880 203a 	strb.w	r2, [r0, #58]	; 0x3a
 8002b68:	6802      	ldr	r2, [r0, #0]
 8002b6a:	6281      	str	r1, [r0, #40]	; 0x28
 8002b6c:	68d1      	ldr	r1, [r2, #12]
 8002b6e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 8002b72:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002b76:	60d1      	str	r1, [r2, #12]
 8002b78:	6951      	ldr	r1, [r2, #20]
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	f041 0101 	orr.w	r1, r1, #1
 8002b80:	6151      	str	r1, [r2, #20]
 8002b82:	68d1      	ldr	r1, [r2, #12]
 8002b84:	f041 0120 	orr.w	r1, r1, #32
 8002b88:	60d1      	str	r1, [r2, #12]
 8002b8a:	4770      	bx	lr
 8002b8c:	2001      	movs	r0, #1
 8002b8e:	4770      	bx	lr
 8002b90:	2002      	movs	r0, #2
 8002b92:	4770      	bx	lr

08002b94 <HAL_UART_TxCpltCallback>:
 8002b94:	4770      	bx	lr

08002b96 <UART_Receive_IT>:
 8002b96:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 8002b9a:	b510      	push	{r4, lr}
 8002b9c:	2b22      	cmp	r3, #34	; 0x22
 8002b9e:	d133      	bne.n	8002c08 <UART_Receive_IT+0x72>
 8002ba0:	6881      	ldr	r1, [r0, #8]
 8002ba2:	6904      	ldr	r4, [r0, #16]
 8002ba4:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8002ba8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8002baa:	6802      	ldr	r2, [r0, #0]
 8002bac:	d123      	bne.n	8002bf6 <UART_Receive_IT+0x60>
 8002bae:	6852      	ldr	r2, [r2, #4]
 8002bb0:	b9ec      	cbnz	r4, 8002bee <UART_Receive_IT+0x58>
 8002bb2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002bb6:	f823 2b02 	strh.w	r2, [r3], #2
 8002bba:	6283      	str	r3, [r0, #40]	; 0x28
 8002bbc:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 8002bbe:	3c01      	subs	r4, #1
 8002bc0:	b2a4      	uxth	r4, r4
 8002bc2:	85c4      	strh	r4, [r0, #46]	; 0x2e
 8002bc4:	b98c      	cbnz	r4, 8002bea <UART_Receive_IT+0x54>
 8002bc6:	6803      	ldr	r3, [r0, #0]
 8002bc8:	68da      	ldr	r2, [r3, #12]
 8002bca:	f022 0220 	bic.w	r2, r2, #32
 8002bce:	60da      	str	r2, [r3, #12]
 8002bd0:	68da      	ldr	r2, [r3, #12]
 8002bd2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002bd6:	60da      	str	r2, [r3, #12]
 8002bd8:	695a      	ldr	r2, [r3, #20]
 8002bda:	f022 0201 	bic.w	r2, r2, #1
 8002bde:	615a      	str	r2, [r3, #20]
 8002be0:	2320      	movs	r3, #32
 8002be2:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
 8002be6:	f001 fa2d 	bl	8004044 <HAL_UART_RxCpltCallback>
 8002bea:	2000      	movs	r0, #0
 8002bec:	e00d      	b.n	8002c0a <UART_Receive_IT+0x74>
 8002bee:	b2d2      	uxtb	r2, r2
 8002bf0:	f823 2b01 	strh.w	r2, [r3], #1
 8002bf4:	e7e1      	b.n	8002bba <UART_Receive_IT+0x24>
 8002bf6:	1c59      	adds	r1, r3, #1
 8002bf8:	6852      	ldr	r2, [r2, #4]
 8002bfa:	6281      	str	r1, [r0, #40]	; 0x28
 8002bfc:	b90c      	cbnz	r4, 8002c02 <UART_Receive_IT+0x6c>
 8002bfe:	701a      	strb	r2, [r3, #0]
 8002c00:	e7dc      	b.n	8002bbc <UART_Receive_IT+0x26>
 8002c02:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8002c06:	e7fa      	b.n	8002bfe <UART_Receive_IT+0x68>
 8002c08:	2002      	movs	r0, #2
 8002c0a:	bd10      	pop	{r4, pc}

08002c0c <HAL_UART_ErrorCallback>:
 8002c0c:	4770      	bx	lr
	...

08002c10 <HAL_UART_IRQHandler>:
 8002c10:	6803      	ldr	r3, [r0, #0]
 8002c12:	b570      	push	{r4, r5, r6, lr}
 8002c14:	681a      	ldr	r2, [r3, #0]
 8002c16:	4604      	mov	r4, r0
 8002c18:	0716      	lsls	r6, r2, #28
 8002c1a:	68d9      	ldr	r1, [r3, #12]
 8002c1c:	695d      	ldr	r5, [r3, #20]
 8002c1e:	d107      	bne.n	8002c30 <HAL_UART_IRQHandler+0x20>
 8002c20:	0696      	lsls	r6, r2, #26
 8002c22:	d558      	bpl.n	8002cd6 <HAL_UART_IRQHandler+0xc6>
 8002c24:	068d      	lsls	r5, r1, #26
 8002c26:	d556      	bpl.n	8002cd6 <HAL_UART_IRQHandler+0xc6>
 8002c28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002c2c:	f7ff bfb3 	b.w	8002b96 <UART_Receive_IT>
 8002c30:	f015 0501 	ands.w	r5, r5, #1
 8002c34:	d102      	bne.n	8002c3c <HAL_UART_IRQHandler+0x2c>
 8002c36:	f411 7f90 	tst.w	r1, #288	; 0x120
 8002c3a:	d04c      	beq.n	8002cd6 <HAL_UART_IRQHandler+0xc6>
 8002c3c:	07d3      	lsls	r3, r2, #31
 8002c3e:	d505      	bpl.n	8002c4c <HAL_UART_IRQHandler+0x3c>
 8002c40:	05ce      	lsls	r6, r1, #23
 8002c42:	bf42      	ittt	mi
 8002c44:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 8002c46:	f043 0301 	orrmi.w	r3, r3, #1
 8002c4a:	63e3      	strmi	r3, [r4, #60]	; 0x3c
 8002c4c:	0750      	lsls	r0, r2, #29
 8002c4e:	d504      	bpl.n	8002c5a <HAL_UART_IRQHandler+0x4a>
 8002c50:	b11d      	cbz	r5, 8002c5a <HAL_UART_IRQHandler+0x4a>
 8002c52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002c54:	f043 0302 	orr.w	r3, r3, #2
 8002c58:	63e3      	str	r3, [r4, #60]	; 0x3c
 8002c5a:	0793      	lsls	r3, r2, #30
 8002c5c:	d504      	bpl.n	8002c68 <HAL_UART_IRQHandler+0x58>
 8002c5e:	b11d      	cbz	r5, 8002c68 <HAL_UART_IRQHandler+0x58>
 8002c60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002c62:	f043 0304 	orr.w	r3, r3, #4
 8002c66:	63e3      	str	r3, [r4, #60]	; 0x3c
 8002c68:	0716      	lsls	r6, r2, #28
 8002c6a:	d504      	bpl.n	8002c76 <HAL_UART_IRQHandler+0x66>
 8002c6c:	b11d      	cbz	r5, 8002c76 <HAL_UART_IRQHandler+0x66>
 8002c6e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002c70:	f043 0308 	orr.w	r3, r3, #8
 8002c74:	63e3      	str	r3, [r4, #60]	; 0x3c
 8002c76:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002c78:	b343      	cbz	r3, 8002ccc <HAL_UART_IRQHandler+0xbc>
 8002c7a:	0695      	lsls	r5, r2, #26
 8002c7c:	d504      	bpl.n	8002c88 <HAL_UART_IRQHandler+0x78>
 8002c7e:	0688      	lsls	r0, r1, #26
 8002c80:	d502      	bpl.n	8002c88 <HAL_UART_IRQHandler+0x78>
 8002c82:	4620      	mov	r0, r4
 8002c84:	f7ff ff87 	bl	8002b96 <UART_Receive_IT>
 8002c88:	6823      	ldr	r3, [r4, #0]
 8002c8a:	4620      	mov	r0, r4
 8002c8c:	695d      	ldr	r5, [r3, #20]
 8002c8e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8002c90:	0711      	lsls	r1, r2, #28
 8002c92:	d402      	bmi.n	8002c9a <HAL_UART_IRQHandler+0x8a>
 8002c94:	f015 0540 	ands.w	r5, r5, #64	; 0x40
 8002c98:	d019      	beq.n	8002cce <HAL_UART_IRQHandler+0xbe>
 8002c9a:	f7ff fe2b 	bl	80028f4 <UART_EndRxTransfer>
 8002c9e:	6823      	ldr	r3, [r4, #0]
 8002ca0:	695a      	ldr	r2, [r3, #20]
 8002ca2:	0652      	lsls	r2, r2, #25
 8002ca4:	d50f      	bpl.n	8002cc6 <HAL_UART_IRQHandler+0xb6>
 8002ca6:	695a      	ldr	r2, [r3, #20]
 8002ca8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002caa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002cae:	615a      	str	r2, [r3, #20]
 8002cb0:	b148      	cbz	r0, 8002cc6 <HAL_UART_IRQHandler+0xb6>
 8002cb2:	4b26      	ldr	r3, [pc, #152]	; (8002d4c <HAL_UART_IRQHandler+0x13c>)
 8002cb4:	6343      	str	r3, [r0, #52]	; 0x34
 8002cb6:	f7fe f82f 	bl	8000d18 <HAL_DMA_Abort_IT>
 8002cba:	b138      	cbz	r0, 8002ccc <HAL_UART_IRQHandler+0xbc>
 8002cbc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8002cbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002cc2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8002cc4:	4718      	bx	r3
 8002cc6:	4620      	mov	r0, r4
 8002cc8:	f7ff ffa0 	bl	8002c0c <HAL_UART_ErrorCallback>
 8002ccc:	bd70      	pop	{r4, r5, r6, pc}
 8002cce:	f7ff ff9d 	bl	8002c0c <HAL_UART_ErrorCallback>
 8002cd2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002cd4:	e7fa      	b.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002cd6:	0616      	lsls	r6, r2, #24
 8002cd8:	d528      	bpl.n	8002d2c <HAL_UART_IRQHandler+0x11c>
 8002cda:	060d      	lsls	r5, r1, #24
 8002cdc:	d526      	bpl.n	8002d2c <HAL_UART_IRQHandler+0x11c>
 8002cde:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8002ce2:	2a21      	cmp	r2, #33	; 0x21
 8002ce4:	d1f2      	bne.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002ce6:	68a1      	ldr	r1, [r4, #8]
 8002ce8:	6a22      	ldr	r2, [r4, #32]
 8002cea:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8002cee:	d118      	bne.n	8002d22 <HAL_UART_IRQHandler+0x112>
 8002cf0:	8811      	ldrh	r1, [r2, #0]
 8002cf2:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8002cf6:	6059      	str	r1, [r3, #4]
 8002cf8:	6921      	ldr	r1, [r4, #16]
 8002cfa:	b981      	cbnz	r1, 8002d1e <HAL_UART_IRQHandler+0x10e>
 8002cfc:	3202      	adds	r2, #2
 8002cfe:	6222      	str	r2, [r4, #32]
 8002d00:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8002d02:	3a01      	subs	r2, #1
 8002d04:	b292      	uxth	r2, r2
 8002d06:	84e2      	strh	r2, [r4, #38]	; 0x26
 8002d08:	2a00      	cmp	r2, #0
 8002d0a:	d1df      	bne.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002d0c:	68da      	ldr	r2, [r3, #12]
 8002d0e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002d12:	60da      	str	r2, [r3, #12]
 8002d14:	68da      	ldr	r2, [r3, #12]
 8002d16:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002d1a:	60da      	str	r2, [r3, #12]
 8002d1c:	e7d6      	b.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002d1e:	3201      	adds	r2, #1
 8002d20:	e7ed      	b.n	8002cfe <HAL_UART_IRQHandler+0xee>
 8002d22:	1c51      	adds	r1, r2, #1
 8002d24:	6221      	str	r1, [r4, #32]
 8002d26:	7812      	ldrb	r2, [r2, #0]
 8002d28:	605a      	str	r2, [r3, #4]
 8002d2a:	e7e9      	b.n	8002d00 <HAL_UART_IRQHandler+0xf0>
 8002d2c:	0650      	lsls	r0, r2, #25
 8002d2e:	d5cd      	bpl.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002d30:	064a      	lsls	r2, r1, #25
 8002d32:	d5cb      	bpl.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002d34:	68da      	ldr	r2, [r3, #12]
 8002d36:	4620      	mov	r0, r4
 8002d38:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002d3c:	60da      	str	r2, [r3, #12]
 8002d3e:	2320      	movs	r3, #32
 8002d40:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8002d44:	f7ff ff26 	bl	8002b94 <HAL_UART_TxCpltCallback>
 8002d48:	e7c0      	b.n	8002ccc <HAL_UART_IRQHandler+0xbc>
 8002d4a:	bf00      	nop
 8002d4c:	08002d51 	.word	0x08002d51

08002d50 <UART_DMAAbortOnError>:
 8002d50:	b508      	push	{r3, lr}
 8002d52:	2300      	movs	r3, #0
 8002d54:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002d56:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8002d58:	84c3      	strh	r3, [r0, #38]	; 0x26
 8002d5a:	f7ff ff57 	bl	8002c0c <HAL_UART_ErrorCallback>
 8002d5e:	bd08      	pop	{r3, pc}

08002d60 <HAL_HalfDuplex_EnableReceiver>:
 8002d60:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8002d64:	2b01      	cmp	r3, #1
 8002d66:	d011      	beq.n	8002d8c <HAL_HalfDuplex_EnableReceiver+0x2c>
 8002d68:	2324      	movs	r3, #36	; 0x24
 8002d6a:	6802      	ldr	r2, [r0, #0]
 8002d6c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
 8002d70:	68d3      	ldr	r3, [r2, #12]
 8002d72:	f023 030c 	bic.w	r3, r3, #12
 8002d76:	f043 0304 	orr.w	r3, r3, #4
 8002d7a:	60d3      	str	r3, [r2, #12]
 8002d7c:	2320      	movs	r3, #32
 8002d7e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
 8002d82:	2300      	movs	r3, #0
 8002d84:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 8002d88:	4618      	mov	r0, r3
 8002d8a:	4770      	bx	lr
 8002d8c:	2002      	movs	r0, #2
 8002d8e:	4770      	bx	lr

08002d90 <USB_CoreInit>:
 8002d90:	b084      	sub	sp, #16
 8002d92:	a801      	add	r0, sp, #4
 8002d94:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8002d98:	b004      	add	sp, #16
 8002d9a:	2000      	movs	r0, #0
 8002d9c:	4770      	bx	lr

08002d9e <USB_EnableGlobalInt>:
 8002d9e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8002da2:	f443 433f 	orr.w	r3, r3, #48896	; 0xbf00
 8002da6:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8002daa:	2000      	movs	r0, #0
 8002dac:	4770      	bx	lr

08002dae <USB_DisableGlobalInt>:
 8002dae:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8002db2:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8002db6:	045b      	lsls	r3, r3, #17
 8002db8:	0c5b      	lsrs	r3, r3, #17
 8002dba:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8002dbe:	2000      	movs	r0, #0
 8002dc0:	4770      	bx	lr

08002dc2 <USB_SetCurrentMode>:
 8002dc2:	2000      	movs	r0, #0
 8002dc4:	4770      	bx	lr

08002dc6 <USB_DevInit>:
 8002dc6:	b084      	sub	sp, #16
 8002dc8:	b510      	push	{r4, lr}
 8002dca:	ac03      	add	r4, sp, #12
 8002dcc:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8002dd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002dd4:	2301      	movs	r3, #1
 8002dd6:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8002dda:	2300      	movs	r3, #0
 8002ddc:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8002de0:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8002de4:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 8002de8:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8002dec:	b004      	add	sp, #16
 8002dee:	f442 423f 	orr.w	r2, r2, #48896	; 0xbf00
 8002df2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8002df6:	4618      	mov	r0, r3
 8002df8:	4770      	bx	lr
	...

08002dfc <USB_ActivateEndpoint>:
 8002dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002dfe:	780c      	ldrb	r4, [r1, #0]
 8002e00:	4603      	mov	r3, r0
 8002e02:	f830 2024 	ldrh.w	r2, [r0, r4, lsl #2]
 8002e06:	78c8      	ldrb	r0, [r1, #3]
 8002e08:	f422 42ec 	bic.w	r2, r2, #30208	; 0x7600
 8002e0c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8002e10:	2803      	cmp	r0, #3
 8002e12:	d803      	bhi.n	8002e1c <USB_ActivateEndpoint+0x20>
 8002e14:	e8df f000 	tbb	[pc, r0]
 8002e18:	46444942 	.word	0x46444942
 8002e1c:	2001      	movs	r0, #1
 8002e1e:	f248 0580 	movw	r5, #32896	; 0x8080
 8002e22:	432a      	orrs	r2, r5
 8002e24:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8002e28:	780e      	ldrb	r6, [r1, #0]
 8002e2a:	4a9e      	ldr	r2, [pc, #632]	; (80030a4 <USB_ActivateEndpoint+0x2a8>)
 8002e2c:	f833 4026 	ldrh.w	r4, [r3, r6, lsl #2]
 8002e30:	4335      	orrs	r5, r6
 8002e32:	4014      	ands	r4, r2
 8002e34:	432c      	orrs	r4, r5
 8002e36:	f823 4026 	strh.w	r4, [r3, r6, lsl #2]
 8002e3a:	7b0d      	ldrb	r5, [r1, #12]
 8002e3c:	780c      	ldrb	r4, [r1, #0]
 8002e3e:	2d00      	cmp	r5, #0
 8002e40:	f040 8082 	bne.w	8002f48 <USB_ActivateEndpoint+0x14c>
 8002e44:	88cd      	ldrh	r5, [r1, #6]
 8002e46:	784e      	ldrb	r6, [r1, #1]
 8002e48:	086d      	lsrs	r5, r5, #1
 8002e4a:	006d      	lsls	r5, r5, #1
 8002e4c:	eb03 1404 	add.w	r4, r3, r4, lsl #4
 8002e50:	b376      	cbz	r6, 8002eb0 <USB_ActivateEndpoint+0xb4>
 8002e52:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 8002e56:	4434      	add	r4, r6
 8002e58:	f8a4 5400 	strh.w	r5, [r4, #1024]	; 0x400
 8002e5c:	780d      	ldrb	r5, [r1, #0]
 8002e5e:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 8002e62:	0667      	lsls	r7, r4, #25
 8002e64:	d508      	bpl.n	8002e78 <USB_ActivateEndpoint+0x7c>
 8002e66:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 8002e6a:	4022      	ands	r2, r4
 8002e6c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002e70:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8002e74:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 8002e78:	78ca      	ldrb	r2, [r1, #3]
 8002e7a:	780c      	ldrb	r4, [r1, #0]
 8002e7c:	2a01      	cmp	r2, #1
 8002e7e:	f833 1024 	ldrh.w	r1, [r3, r4, lsl #2]
 8002e82:	4a89      	ldr	r2, [pc, #548]	; (80030a8 <USB_ActivateEndpoint+0x2ac>)
 8002e84:	ea02 0201 	and.w	r2, r2, r1
 8002e88:	bf18      	it	ne
 8002e8a:	f082 0220 	eorne.w	r2, r2, #32
 8002e8e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002e92:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002e96:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8002e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002ea0:	2000      	movs	r0, #0
 8002ea2:	e7bc      	b.n	8002e1e <USB_ActivateEndpoint+0x22>
 8002ea4:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
 8002ea8:	e7fa      	b.n	8002ea0 <USB_ActivateEndpoint+0xa4>
 8002eaa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002eae:	e7f7      	b.n	8002ea0 <USB_ActivateEndpoint+0xa4>
 8002eb0:	f8b3 2050 	ldrh.w	r2, [r3, #80]	; 0x50
 8002eb4:	690e      	ldr	r6, [r1, #16]
 8002eb6:	4414      	add	r4, r2
 8002eb8:	f8a4 5408 	strh.w	r5, [r4, #1032]	; 0x408
 8002ebc:	780a      	ldrb	r2, [r1, #0]
 8002ebe:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 8002ec2:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 8002ec6:	b2a4      	uxth	r4, r4
 8002ec8:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 8002ecc:	bb56      	cbnz	r6, 8002f24 <USB_ActivateEndpoint+0x128>
 8002ece:	5b15      	ldrh	r5, [r2, r4]
 8002ed0:	f425 45f8 	bic.w	r5, r5, #31744	; 0x7c00
 8002ed4:	042d      	lsls	r5, r5, #16
 8002ed6:	0c2d      	lsrs	r5, r5, #16
 8002ed8:	5315      	strh	r5, [r2, r4]
 8002eda:	5b15      	ldrh	r5, [r2, r4]
 8002edc:	f445 4500 	orr.w	r5, r5, #32768	; 0x8000
 8002ee0:	5315      	strh	r5, [r2, r4]
 8002ee2:	780c      	ldrb	r4, [r1, #0]
 8002ee4:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8002ee8:	0457      	lsls	r7, r2, #17
 8002eea:	d50b      	bpl.n	8002f04 <USB_ActivateEndpoint+0x108>
 8002eec:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8002ef0:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002ef4:	0512      	lsls	r2, r2, #20
 8002ef6:	0d12      	lsrs	r2, r2, #20
 8002ef8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8002efc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002f00:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8002f04:	7809      	ldrb	r1, [r1, #0]
 8002f06:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 8002f0a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8002f0e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8002f12:	f482 5240 	eor.w	r2, r2, #12288	; 0x3000
 8002f16:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002f1a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002f1e:	f823 2021 	strh.w	r2, [r3, r1, lsl #2]
 8002f22:	e7ba      	b.n	8002e9a <USB_ActivateEndpoint+0x9e>
 8002f24:	2e3e      	cmp	r6, #62	; 0x3e
 8002f26:	d806      	bhi.n	8002f36 <USB_ActivateEndpoint+0x13a>
 8002f28:	0875      	lsrs	r5, r6, #1
 8002f2a:	07f6      	lsls	r6, r6, #31
 8002f2c:	bf48      	it	mi
 8002f2e:	3501      	addmi	r5, #1
 8002f30:	02ad      	lsls	r5, r5, #10
 8002f32:	b2ad      	uxth	r5, r5
 8002f34:	e7d4      	b.n	8002ee0 <USB_ActivateEndpoint+0xe4>
 8002f36:	0977      	lsrs	r7, r6, #5
 8002f38:	06f5      	lsls	r5, r6, #27
 8002f3a:	4d5c      	ldr	r5, [pc, #368]	; (80030ac <USB_ActivateEndpoint+0x2b0>)
 8002f3c:	bf08      	it	eq
 8002f3e:	f107 37ff 	addeq.w	r7, r7, #4294967295
 8002f42:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 8002f46:	e7f4      	b.n	8002f32 <USB_ActivateEndpoint+0x136>
 8002f48:	f833 5024 	ldrh.w	r5, [r3, r4, lsl #2]
 8002f4c:	4015      	ands	r5, r2
 8002f4e:	f445 4501 	orr.w	r5, r5, #33024	; 0x8100
 8002f52:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8002f56:	f823 5024 	strh.w	r5, [r3, r4, lsl #2]
 8002f5a:	780c      	ldrb	r4, [r1, #0]
 8002f5c:	890d      	ldrh	r5, [r1, #8]
 8002f5e:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 8002f62:	eb03 1404 	add.w	r4, r3, r4, lsl #4
 8002f66:	086d      	lsrs	r5, r5, #1
 8002f68:	b2b6      	uxth	r6, r6
 8002f6a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8002f6e:	006d      	lsls	r5, r5, #1
 8002f70:	53a5      	strh	r5, [r4, r6]
 8002f72:	780c      	ldrb	r4, [r1, #0]
 8002f74:	894d      	ldrh	r5, [r1, #10]
 8002f76:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 8002f7a:	eb03 1404 	add.w	r4, r3, r4, lsl #4
 8002f7e:	086d      	lsrs	r5, r5, #1
 8002f80:	f504 6481 	add.w	r4, r4, #1032	; 0x408
 8002f84:	006d      	lsls	r5, r5, #1
 8002f86:	b2b6      	uxth	r6, r6
 8002f88:	53a5      	strh	r5, [r4, r6]
 8002f8a:	784c      	ldrb	r4, [r1, #1]
 8002f8c:	780d      	ldrb	r5, [r1, #0]
 8002f8e:	2c00      	cmp	r4, #0
 8002f90:	d143      	bne.n	800301a <USB_ActivateEndpoint+0x21e>
 8002f92:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 8002f96:	0466      	lsls	r6, r4, #17
 8002f98:	d508      	bpl.n	8002fac <USB_ActivateEndpoint+0x1b0>
 8002f9a:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 8002f9e:	4022      	ands	r2, r4
 8002fa0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8002fa4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002fa8:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 8002fac:	780c      	ldrb	r4, [r1, #0]
 8002fae:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8002fb2:	0655      	lsls	r5, r2, #25
 8002fb4:	d50b      	bpl.n	8002fce <USB_ActivateEndpoint+0x1d2>
 8002fb6:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8002fba:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002fbe:	0512      	lsls	r2, r2, #20
 8002fc0:	0d12      	lsrs	r2, r2, #20
 8002fc2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002fc6:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8002fca:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8002fce:	780c      	ldrb	r4, [r1, #0]
 8002fd0:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8002fd4:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002fd8:	0512      	lsls	r2, r2, #20
 8002fda:	0d12      	lsrs	r2, r2, #20
 8002fdc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002fe0:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8002fe4:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8002fe8:	f248 0480 	movw	r4, #32896	; 0x8080
 8002fec:	780d      	ldrb	r5, [r1, #0]
 8002fee:	f833 2025 	ldrh.w	r2, [r3, r5, lsl #2]
 8002ff2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8002ff6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8002ffa:	f482 5240 	eor.w	r2, r2, #12288	; 0x3000
 8002ffe:	4322      	orrs	r2, r4
 8003000:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 8003004:	7809      	ldrb	r1, [r1, #0]
 8003006:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 800300a:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 800300e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003012:	4314      	orrs	r4, r2
 8003014:	f823 4021 	strh.w	r4, [r3, r1, lsl #2]
 8003018:	e73f      	b.n	8002e9a <USB_ActivateEndpoint+0x9e>
 800301a:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 800301e:	0464      	lsls	r4, r4, #17
 8003020:	d508      	bpl.n	8003034 <USB_ActivateEndpoint+0x238>
 8003022:	f833 4025 	ldrh.w	r4, [r3, r5, lsl #2]
 8003026:	4022      	ands	r2, r4
 8003028:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800302c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003030:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 8003034:	780c      	ldrb	r4, [r1, #0]
 8003036:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 800303a:	0652      	lsls	r2, r2, #25
 800303c:	d50b      	bpl.n	8003056 <USB_ActivateEndpoint+0x25a>
 800303e:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8003042:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8003046:	0512      	lsls	r2, r2, #20
 8003048:	0d12      	lsrs	r2, r2, #20
 800304a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800304e:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8003052:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8003056:	780c      	ldrb	r4, [r1, #0]
 8003058:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 800305c:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8003060:	0512      	lsls	r2, r2, #20
 8003062:	0d12      	lsrs	r2, r2, #20
 8003064:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003068:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800306c:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8003070:	78ca      	ldrb	r2, [r1, #3]
 8003072:	780c      	ldrb	r4, [r1, #0]
 8003074:	2a01      	cmp	r2, #1
 8003076:	f833 5024 	ldrh.w	r5, [r3, r4, lsl #2]
 800307a:	4a0b      	ldr	r2, [pc, #44]	; (80030a8 <USB_ActivateEndpoint+0x2ac>)
 800307c:	ea02 0205 	and.w	r2, r2, r5
 8003080:	bf18      	it	ne
 8003082:	f082 0220 	eorne.w	r2, r2, #32
 8003086:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800308a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800308e:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8003092:	7809      	ldrb	r1, [r1, #0]
 8003094:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 8003098:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800309c:	0492      	lsls	r2, r2, #18
 800309e:	0c92      	lsrs	r2, r2, #18
 80030a0:	e739      	b.n	8002f16 <USB_ActivateEndpoint+0x11a>
 80030a2:	bf00      	nop
 80030a4:	ffff8f8f 	.word	0xffff8f8f
 80030a8:	ffff8fbf 	.word	0xffff8fbf
 80030ac:	ffff8000 	.word	0xffff8000

080030b0 <USB_DeactivateEndpoint>:
 80030b0:	b510      	push	{r4, lr}
 80030b2:	7b0c      	ldrb	r4, [r1, #12]
 80030b4:	784a      	ldrb	r2, [r1, #1]
 80030b6:	780b      	ldrb	r3, [r1, #0]
 80030b8:	bbbc      	cbnz	r4, 800312a <USB_DeactivateEndpoint+0x7a>
 80030ba:	b1f2      	cbz	r2, 80030fa <USB_DeactivateEndpoint+0x4a>
 80030bc:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 80030c0:	0652      	lsls	r2, r2, #25
 80030c2:	d50b      	bpl.n	80030dc <USB_DeactivateEndpoint+0x2c>
 80030c4:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 80030c8:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80030cc:	0512      	lsls	r2, r2, #20
 80030ce:	0d12      	lsrs	r2, r2, #20
 80030d0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80030d4:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 80030d8:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 80030dc:	780a      	ldrb	r2, [r1, #0]
 80030de:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80030e2:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80030e6:	051b      	lsls	r3, r3, #20
 80030e8:	0d1b      	lsrs	r3, r3, #20
 80030ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80030ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80030f2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80030f6:	2000      	movs	r0, #0
 80030f8:	bd10      	pop	{r4, pc}
 80030fa:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 80030fe:	0454      	lsls	r4, r2, #17
 8003100:	d50b      	bpl.n	800311a <USB_DeactivateEndpoint+0x6a>
 8003102:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 8003106:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800310a:	0512      	lsls	r2, r2, #20
 800310c:	0d12      	lsrs	r2, r2, #20
 800310e:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003112:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003116:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800311a:	780a      	ldrb	r2, [r1, #0]
 800311c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003120:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003124:	049b      	lsls	r3, r3, #18
 8003126:	0c9b      	lsrs	r3, r3, #18
 8003128:	e7df      	b.n	80030ea <USB_DeactivateEndpoint+0x3a>
 800312a:	2a00      	cmp	r2, #0
 800312c:	d144      	bne.n	80031b8 <USB_DeactivateEndpoint+0x108>
 800312e:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 8003132:	0452      	lsls	r2, r2, #17
 8003134:	d50b      	bpl.n	800314e <USB_DeactivateEndpoint+0x9e>
 8003136:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800313a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800313e:	0512      	lsls	r2, r2, #20
 8003140:	0d12      	lsrs	r2, r2, #20
 8003142:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003146:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800314a:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800314e:	780a      	ldrb	r2, [r1, #0]
 8003150:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003154:	065c      	lsls	r4, r3, #25
 8003156:	d50b      	bpl.n	8003170 <USB_DeactivateEndpoint+0xc0>
 8003158:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800315c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003160:	051b      	lsls	r3, r3, #20
 8003162:	0d1b      	lsrs	r3, r3, #20
 8003164:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003168:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800316c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8003170:	780a      	ldrb	r2, [r1, #0]
 8003172:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003176:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800317a:	051b      	lsls	r3, r3, #20
 800317c:	0d1b      	lsrs	r3, r3, #20
 800317e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003182:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003186:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800318a:	f248 0280 	movw	r2, #32896	; 0x8080
 800318e:	780c      	ldrb	r4, [r1, #0]
 8003190:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 8003194:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003198:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800319c:	4313      	orrs	r3, r2
 800319e:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 80031a2:	7809      	ldrb	r1, [r1, #0]
 80031a4:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80031a8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80031ac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80031b0:	431a      	orrs	r2, r3
 80031b2:	f820 2021 	strh.w	r2, [r0, r1, lsl #2]
 80031b6:	e79e      	b.n	80030f6 <USB_DeactivateEndpoint+0x46>
 80031b8:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 80031bc:	0452      	lsls	r2, r2, #17
 80031be:	d50b      	bpl.n	80031d8 <USB_DeactivateEndpoint+0x128>
 80031c0:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 80031c4:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80031c8:	0512      	lsls	r2, r2, #20
 80031ca:	0d12      	lsrs	r2, r2, #20
 80031cc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80031d0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80031d4:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 80031d8:	780a      	ldrb	r2, [r1, #0]
 80031da:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80031de:	065b      	lsls	r3, r3, #25
 80031e0:	d50b      	bpl.n	80031fa <USB_DeactivateEndpoint+0x14a>
 80031e2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80031e6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80031ea:	051b      	lsls	r3, r3, #20
 80031ec:	0d1b      	lsrs	r3, r3, #20
 80031ee:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80031f2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80031f6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80031fa:	780a      	ldrb	r2, [r1, #0]
 80031fc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003200:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003204:	051b      	lsls	r3, r3, #20
 8003206:	0d1b      	lsrs	r3, r3, #20
 8003208:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800320c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003210:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8003214:	f248 0280 	movw	r2, #32896	; 0x8080
 8003218:	780c      	ldrb	r4, [r1, #0]
 800321a:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800321e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003222:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003226:	4313      	orrs	r3, r2
 8003228:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800322c:	7809      	ldrb	r1, [r1, #0]
 800322e:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8003232:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003236:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800323a:	e7b9      	b.n	80031b0 <USB_DeactivateEndpoint+0x100>

0800323c <USB_EPSetStall>:
 800323c:	784b      	ldrb	r3, [r1, #1]
 800323e:	780a      	ldrb	r2, [r1, #0]
 8003240:	b17b      	cbz	r3, 8003262 <USB_EPSetStall+0x26>
 8003242:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003246:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800324a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800324e:	f083 0310 	eor.w	r3, r3, #16
 8003252:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003256:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800325a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800325e:	2000      	movs	r0, #0
 8003260:	4770      	bx	lr
 8003262:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003266:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800326a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800326e:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8003272:	e7ee      	b.n	8003252 <USB_EPSetStall+0x16>

08003274 <USB_EPClearStall>:
 8003274:	7b0b      	ldrb	r3, [r1, #12]
 8003276:	bb23      	cbnz	r3, 80032c2 <USB_EPClearStall+0x4e>
 8003278:	784b      	ldrb	r3, [r1, #1]
 800327a:	780a      	ldrb	r2, [r1, #0]
 800327c:	b31b      	cbz	r3, 80032c6 <USB_EPClearStall+0x52>
 800327e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8003282:	065b      	lsls	r3, r3, #25
 8003284:	d50b      	bpl.n	800329e <USB_EPClearStall+0x2a>
 8003286:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800328a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800328e:	051b      	lsls	r3, r3, #20
 8003290:	0d1b      	lsrs	r3, r3, #20
 8003292:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003296:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800329a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800329e:	78cb      	ldrb	r3, [r1, #3]
 80032a0:	2b01      	cmp	r3, #1
 80032a2:	d00e      	beq.n	80032c2 <USB_EPClearStall+0x4e>
 80032a4:	780a      	ldrb	r2, [r1, #0]
 80032a6:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80032aa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80032ae:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80032b2:	f083 0320 	eor.w	r3, r3, #32
 80032b6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80032ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80032be:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80032c2:	2000      	movs	r0, #0
 80032c4:	4770      	bx	lr
 80032c6:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80032ca:	045b      	lsls	r3, r3, #17
 80032cc:	d50b      	bpl.n	80032e6 <USB_EPClearStall+0x72>
 80032ce:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80032d2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80032d6:	051b      	lsls	r3, r3, #20
 80032d8:	0d1b      	lsrs	r3, r3, #20
 80032da:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80032de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80032e2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80032e6:	780a      	ldrb	r2, [r1, #0]
 80032e8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80032ec:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80032f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032f4:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80032f8:	e7dd      	b.n	80032b6 <USB_EPClearStall+0x42>

080032fa <USB_SetDevAddress>:
 80032fa:	b911      	cbnz	r1, 8003302 <USB_SetDevAddress+0x8>
 80032fc:	2380      	movs	r3, #128	; 0x80
 80032fe:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 8003302:	2000      	movs	r0, #0
 8003304:	4770      	bx	lr

08003306 <USB_DevConnect>:
 8003306:	2000      	movs	r0, #0
 8003308:	4770      	bx	lr

0800330a <USB_DevDisconnect>:
 800330a:	2000      	movs	r0, #0
 800330c:	4770      	bx	lr

0800330e <USB_ReadInterrupts>:
 800330e:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 8003312:	4770      	bx	lr

08003314 <USB_EP0_OutStart>:
 8003314:	2000      	movs	r0, #0
 8003316:	4770      	bx	lr

08003318 <USB_WritePMA>:
 8003318:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800331c:	3301      	adds	r3, #1
 800331e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003322:	085b      	lsrs	r3, r3, #1
 8003324:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003328:	429a      	cmp	r2, r3
 800332a:	d100      	bne.n	800332e <USB_WritePMA+0x16>
 800332c:	4770      	bx	lr
 800332e:	f831 0b02 	ldrh.w	r0, [r1], #2
 8003332:	f822 0b04 	strh.w	r0, [r2], #4
 8003336:	e7f7      	b.n	8003328 <USB_WritePMA+0x10>

08003338 <USB_EPStartXfer>:
 8003338:	b570      	push	{r4, r5, r6, lr}
 800333a:	460d      	mov	r5, r1
 800333c:	7849      	ldrb	r1, [r1, #1]
 800333e:	4604      	mov	r4, r0
 8003340:	2901      	cmp	r1, #1
 8003342:	69aa      	ldr	r2, [r5, #24]
 8003344:	692b      	ldr	r3, [r5, #16]
 8003346:	7b28      	ldrb	r0, [r5, #12]
 8003348:	d15d      	bne.n	8003406 <USB_EPStartXfer+0xce>
 800334a:	429a      	cmp	r2, r3
 800334c:	bf9d      	ittte	ls
 800334e:	2300      	movls	r3, #0
 8003350:	61ab      	strls	r3, [r5, #24]
 8003352:	4613      	movls	r3, r2
 8003354:	1ad2      	subhi	r2, r2, r3
 8003356:	bf88      	it	hi
 8003358:	61aa      	strhi	r2, [r5, #24]
 800335a:	6969      	ldr	r1, [r5, #20]
 800335c:	b29e      	uxth	r6, r3
 800335e:	b9e8      	cbnz	r0, 800339c <USB_EPStartXfer+0x64>
 8003360:	4633      	mov	r3, r6
 8003362:	88ea      	ldrh	r2, [r5, #6]
 8003364:	4620      	mov	r0, r4
 8003366:	f7ff ffd7 	bl	8003318 <USB_WritePMA>
 800336a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800336e:	782a      	ldrb	r2, [r5, #0]
 8003370:	f204 4304 	addw	r3, r4, #1028	; 0x404
 8003374:	0112      	lsls	r2, r2, #4
 8003376:	440b      	add	r3, r1
 8003378:	52d6      	strh	r6, [r2, r3]
 800337a:	782a      	ldrb	r2, [r5, #0]
 800337c:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 8003380:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003384:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003388:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 800338c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003390:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003394:	f824 3022 	strh.w	r3, [r4, r2, lsl #2]
 8003398:	2000      	movs	r0, #0
 800339a:	bd70      	pop	{r4, r5, r6, pc}
 800339c:	782b      	ldrb	r3, [r5, #0]
 800339e:	f834 2023 	ldrh.w	r2, [r4, r3, lsl #2]
 80033a2:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 80033a6:	0652      	lsls	r2, r2, #25
 80033a8:	bf4b      	itete	mi
 80033aa:	f204 420c 	addwmi	r2, r4, #1036	; 0x40c
 80033ae:	f204 4204 	addwpl	r2, r4, #1028	; 0x404
 80033b2:	1812      	addmi	r2, r2, r0
 80033b4:	1812      	addpl	r2, r2, r0
 80033b6:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80033ba:	bf4b      	itete	mi
 80033bc:	52d6      	strhmi	r6, [r2, r3]
 80033be:	52d6      	strhpl	r6, [r2, r3]
 80033c0:	896a      	ldrhmi	r2, [r5, #10]
 80033c2:	892a      	ldrhpl	r2, [r5, #8]
 80033c4:	4633      	mov	r3, r6
 80033c6:	4620      	mov	r0, r4
 80033c8:	f7ff ffa6 	bl	8003318 <USB_WritePMA>
 80033cc:	786b      	ldrb	r3, [r5, #1]
 80033ce:	782a      	ldrb	r2, [r5, #0]
 80033d0:	b963      	cbnz	r3, 80033ec <USB_EPStartXfer+0xb4>
 80033d2:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 80033d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80033da:	051b      	lsls	r3, r3, #20
 80033dc:	0d1b      	lsrs	r3, r3, #20
 80033de:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80033e2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80033e6:	f824 3022 	strh.w	r3, [r4, r2, lsl #2]
 80033ea:	e7c6      	b.n	800337a <USB_EPStartXfer+0x42>
 80033ec:	2b01      	cmp	r3, #1
 80033ee:	d1c4      	bne.n	800337a <USB_EPStartXfer+0x42>
 80033f0:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 80033f4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80033f8:	051b      	lsls	r3, r3, #20
 80033fa:	0d1b      	lsrs	r3, r3, #20
 80033fc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003400:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003404:	e7ef      	b.n	80033e6 <USB_EPStartXfer+0xae>
 8003406:	429a      	cmp	r2, r3
 8003408:	bf93      	iteet	ls
 800340a:	2300      	movls	r3, #0
 800340c:	1ad2      	subhi	r2, r2, r3
 800340e:	61aa      	strhi	r2, [r5, #24]
 8003410:	61ab      	strls	r3, [r5, #24]
 8003412:	bf98      	it	ls
 8003414:	4613      	movls	r3, r2
 8003416:	782a      	ldrb	r2, [r5, #0]
 8003418:	b990      	cbnz	r0, 8003440 <USB_EPStartXfer+0x108>
 800341a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800341e:	f204 400c 	addw	r0, r4, #1036	; 0x40c
 8003422:	4401      	add	r1, r0
 8003424:	0112      	lsls	r2, r2, #4
 8003426:	2b00      	cmp	r3, #0
 8003428:	d13b      	bne.n	80034a2 <USB_EPStartXfer+0x16a>
 800342a:	5a8b      	ldrh	r3, [r1, r2]
 800342c:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8003430:	041b      	lsls	r3, r3, #16
 8003432:	0c1b      	lsrs	r3, r3, #16
 8003434:	528b      	strh	r3, [r1, r2]
 8003436:	5a8b      	ldrh	r3, [r1, r2]
 8003438:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800343c:	528b      	strh	r3, [r1, r2]
 800343e:	e039      	b.n	80034b4 <USB_EPStartXfer+0x17c>
 8003440:	b981      	cbnz	r1, 8003464 <USB_EPStartXfer+0x12c>
 8003442:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8003446:	f204 4004 	addw	r0, r4, #1028	; 0x404
 800344a:	4401      	add	r1, r0
 800344c:	0112      	lsls	r2, r2, #4
 800344e:	b9b3      	cbnz	r3, 800347e <USB_EPStartXfer+0x146>
 8003450:	5a88      	ldrh	r0, [r1, r2]
 8003452:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8003456:	0400      	lsls	r0, r0, #16
 8003458:	0c00      	lsrs	r0, r0, #16
 800345a:	5288      	strh	r0, [r1, r2]
 800345c:	5a88      	ldrh	r0, [r1, r2]
 800345e:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8003462:	5288      	strh	r0, [r1, r2]
 8003464:	7869      	ldrb	r1, [r5, #1]
 8003466:	782a      	ldrb	r2, [r5, #0]
 8003468:	2900      	cmp	r1, #0
 800346a:	d0d6      	beq.n	800341a <USB_EPStartXfer+0xe2>
 800346c:	2901      	cmp	r1, #1
 800346e:	d121      	bne.n	80034b4 <USB_EPStartXfer+0x17c>
 8003470:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 8003474:	f204 410c 	addw	r1, r4, #1036	; 0x40c
 8003478:	4401      	add	r1, r0
 800347a:	0112      	lsls	r2, r2, #4
 800347c:	e02c      	b.n	80034d8 <USB_EPStartXfer+0x1a0>
 800347e:	2b3e      	cmp	r3, #62	; 0x3e
 8003480:	d806      	bhi.n	8003490 <USB_EPStartXfer+0x158>
 8003482:	0858      	lsrs	r0, r3, #1
 8003484:	07de      	lsls	r6, r3, #31
 8003486:	bf48      	it	mi
 8003488:	3001      	addmi	r0, #1
 800348a:	0280      	lsls	r0, r0, #10
 800348c:	b280      	uxth	r0, r0
 800348e:	e7e8      	b.n	8003462 <USB_EPStartXfer+0x12a>
 8003490:	095e      	lsrs	r6, r3, #5
 8003492:	06d8      	lsls	r0, r3, #27
 8003494:	4811      	ldr	r0, [pc, #68]	; (80034dc <USB_EPStartXfer+0x1a4>)
 8003496:	bf08      	it	eq
 8003498:	f106 36ff 	addeq.w	r6, r6, #4294967295
 800349c:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 80034a0:	e7f4      	b.n	800348c <USB_EPStartXfer+0x154>
 80034a2:	2b3e      	cmp	r3, #62	; 0x3e
 80034a4:	d810      	bhi.n	80034c8 <USB_EPStartXfer+0x190>
 80034a6:	0858      	lsrs	r0, r3, #1
 80034a8:	07de      	lsls	r6, r3, #31
 80034aa:	bf48      	it	mi
 80034ac:	3001      	addmi	r0, #1
 80034ae:	0280      	lsls	r0, r0, #10
 80034b0:	b280      	uxth	r0, r0
 80034b2:	5288      	strh	r0, [r1, r2]
 80034b4:	782a      	ldrb	r2, [r5, #0]
 80034b6:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 80034ba:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80034be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80034c2:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80034c6:	e761      	b.n	800338c <USB_EPStartXfer+0x54>
 80034c8:	0958      	lsrs	r0, r3, #5
 80034ca:	06db      	lsls	r3, r3, #27
 80034cc:	4b03      	ldr	r3, [pc, #12]	; (80034dc <USB_EPStartXfer+0x1a4>)
 80034ce:	bf08      	it	eq
 80034d0:	f100 30ff 	addeq.w	r0, r0, #4294967295
 80034d4:	ea43 2380 	orr.w	r3, r3, r0, lsl #10
 80034d8:	b29b      	uxth	r3, r3
 80034da:	e7af      	b.n	800343c <USB_EPStartXfer+0x104>
 80034dc:	ffff8000 	.word	0xffff8000

080034e0 <USB_ReadPMA>:
 80034e0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80034e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80034e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80034ea:	085d      	lsrs	r5, r3, #1
 80034ec:	4608      	mov	r0, r1
 80034ee:	4617      	mov	r7, r2
 80034f0:	462e      	mov	r6, r5
 80034f2:	3002      	adds	r0, #2
 80034f4:	b936      	cbnz	r6, 8003504 <USB_ReadPMA+0x24>
 80034f6:	07db      	lsls	r3, r3, #31
 80034f8:	bf44      	itt	mi
 80034fa:	f832 3025 	ldrhmi.w	r3, [r2, r5, lsl #2]
 80034fe:	f801 3015 	strbmi.w	r3, [r1, r5, lsl #1]
 8003502:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003504:	f837 4b04 	ldrh.w	r4, [r7], #4
 8003508:	3e01      	subs	r6, #1
 800350a:	b2a4      	uxth	r4, r4
 800350c:	f800 4c02 	strb.w	r4, [r0, #-2]
 8003510:	0a24      	lsrs	r4, r4, #8
 8003512:	f800 4c01 	strb.w	r4, [r0, #-1]
 8003516:	e7ec      	b.n	80034f2 <USB_ReadPMA+0x12>

08003518 <USBD_CDC_EP0_RxReady>:
 8003518:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc
 800351c:	b510      	push	{r4, lr}
 800351e:	b16b      	cbz	r3, 800353c <USBD_CDC_EP0_RxReady+0x24>
 8003520:	f8d0 42b8 	ldr.w	r4, [r0, #696]	; 0x2b8
 8003524:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 8003528:	28ff      	cmp	r0, #255	; 0xff
 800352a:	d007      	beq.n	800353c <USBD_CDC_EP0_RxReady+0x24>
 800352c:	689b      	ldr	r3, [r3, #8]
 800352e:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8003532:	4621      	mov	r1, r4
 8003534:	4798      	blx	r3
 8003536:	23ff      	movs	r3, #255	; 0xff
 8003538:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 800353c:	2000      	movs	r0, #0
 800353e:	bd10      	pop	{r4, pc}

08003540 <USBD_CDC_GetFSCfgDesc>:
 8003540:	2343      	movs	r3, #67	; 0x43
 8003542:	8003      	strh	r3, [r0, #0]
 8003544:	4800      	ldr	r0, [pc, #0]	; (8003548 <USBD_CDC_GetFSCfgDesc+0x8>)
 8003546:	4770      	bx	lr
 8003548:	20000040 	.word	0x20000040

0800354c <USBD_CDC_GetHSCfgDesc>:
 800354c:	2343      	movs	r3, #67	; 0x43
 800354e:	8003      	strh	r3, [r0, #0]
 8003550:	4800      	ldr	r0, [pc, #0]	; (8003554 <USBD_CDC_GetHSCfgDesc+0x8>)
 8003552:	4770      	bx	lr
 8003554:	20000084 	.word	0x20000084

08003558 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8003558:	2343      	movs	r3, #67	; 0x43
 800355a:	8003      	strh	r3, [r0, #0]
 800355c:	4800      	ldr	r0, [pc, #0]	; (8003560 <USBD_CDC_GetOtherSpeedCfgDesc+0x8>)
 800355e:	4770      	bx	lr
 8003560:	200000d4 	.word	0x200000d4

08003564 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8003564:	230a      	movs	r3, #10
 8003566:	8003      	strh	r3, [r0, #0]
 8003568:	4800      	ldr	r0, [pc, #0]	; (800356c <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 800356a:	4770      	bx	lr
 800356c:	200000c8 	.word	0x200000c8

08003570 <USBD_CDC_DataOut>:
 8003570:	b538      	push	{r3, r4, r5, lr}
 8003572:	4605      	mov	r5, r0
 8003574:	f8d0 42b8 	ldr.w	r4, [r0, #696]	; 0x2b8
 8003578:	f003 f8a4 	bl	80066c4 <USBD_LL_GetRxDataSize>
 800357c:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8003580:	f8c4 020c 	str.w	r0, [r4, #524]	; 0x20c
 8003584:	b14b      	cbz	r3, 800359a <USBD_CDC_DataOut+0x2a>
 8003586:	f8d5 32bc 	ldr.w	r3, [r5, #700]	; 0x2bc
 800358a:	f504 7103 	add.w	r1, r4, #524	; 0x20c
 800358e:	68db      	ldr	r3, [r3, #12]
 8003590:	f8d4 0204 	ldr.w	r0, [r4, #516]	; 0x204
 8003594:	4798      	blx	r3
 8003596:	2000      	movs	r0, #0
 8003598:	bd38      	pop	{r3, r4, r5, pc}
 800359a:	2002      	movs	r0, #2
 800359c:	e7fc      	b.n	8003598 <USBD_CDC_DataOut+0x28>

0800359e <USBD_CDC_DataIn>:
 800359e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035a0:	f8d0 62b8 	ldr.w	r6, [r0, #696]	; 0x2b8
 80035a4:	b1ce      	cbz	r6, 80035da <USBD_CDC_DataIn+0x3c>
 80035a6:	2314      	movs	r3, #20
 80035a8:	fb03 0301 	mla	r3, r3, r1, r0
 80035ac:	69da      	ldr	r2, [r3, #28]
 80035ae:	b182      	cbz	r2, 80035d2 <USBD_CDC_DataIn+0x34>
 80035b0:	f8d0 42c0 	ldr.w	r4, [r0, #704]	; 0x2c0
 80035b4:	eb04 1441 	add.w	r4, r4, r1, lsl #5
 80035b8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 80035ba:	fbb2 f4f5 	udiv	r4, r2, r5
 80035be:	fb05 2414 	mls	r4, r5, r4, r2
 80035c2:	b934      	cbnz	r4, 80035d2 <USBD_CDC_DataIn+0x34>
 80035c4:	61dc      	str	r4, [r3, #28]
 80035c6:	4622      	mov	r2, r4
 80035c8:	4623      	mov	r3, r4
 80035ca:	f003 f85f 	bl	800668c <USBD_LL_Transmit>
 80035ce:	4620      	mov	r0, r4
 80035d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035d2:	2000      	movs	r0, #0
 80035d4:	f8c6 0214 	str.w	r0, [r6, #532]	; 0x214
 80035d8:	e7fa      	b.n	80035d0 <USBD_CDC_DataIn+0x32>
 80035da:	2002      	movs	r0, #2
 80035dc:	e7f8      	b.n	80035d0 <USBD_CDC_DataIn+0x32>

080035de <USBD_CDC_Setup>:
 80035de:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80035e2:	f04f 0800 	mov.w	r8, #0
 80035e6:	780a      	ldrb	r2, [r1, #0]
 80035e8:	4605      	mov	r5, r0
 80035ea:	f012 0460 	ands.w	r4, r2, #96	; 0x60
 80035ee:	460e      	mov	r6, r1
 80035f0:	f8d0 72b8 	ldr.w	r7, [r0, #696]	; 0x2b8
 80035f4:	f88d 8005 	strb.w	r8, [sp, #5]
 80035f8:	f8ad 8006 	strh.w	r8, [sp, #6]
 80035fc:	d028      	beq.n	8003650 <USBD_CDC_Setup+0x72>
 80035fe:	2c20      	cmp	r4, #32
 8003600:	d145      	bne.n	800368e <USBD_CDC_Setup+0xb0>
 8003602:	88cc      	ldrh	r4, [r1, #6]
 8003604:	784b      	ldrb	r3, [r1, #1]
 8003606:	b1e4      	cbz	r4, 8003642 <USBD_CDC_Setup+0x64>
 8003608:	0612      	lsls	r2, r2, #24
 800360a:	d511      	bpl.n	8003630 <USBD_CDC_Setup+0x52>
 800360c:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc
 8003610:	4639      	mov	r1, r7
 8003612:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8003616:	4618      	mov	r0, r3
 8003618:	4622      	mov	r2, r4
 800361a:	47c8      	blx	r9
 800361c:	88f2      	ldrh	r2, [r6, #6]
 800361e:	4639      	mov	r1, r7
 8003620:	4628      	mov	r0, r5
 8003622:	f000 fc46 	bl	8003eb2 <USBD_CtlSendData>
 8003626:	4644      	mov	r4, r8
 8003628:	4620      	mov	r0, r4
 800362a:	b003      	add	sp, #12
 800362c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003630:	f887 3200 	strb.w	r3, [r7, #512]	; 0x200
 8003634:	f887 4201 	strb.w	r4, [r7, #513]	; 0x201
 8003638:	4622      	mov	r2, r4
 800363a:	4639      	mov	r1, r7
 800363c:	f000 fc4e 	bl	8003edc <USBD_CtlPrepareRx>
 8003640:	e7f1      	b.n	8003626 <USBD_CDC_Setup+0x48>
 8003642:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc
 8003646:	4618      	mov	r0, r3
 8003648:	6895      	ldr	r5, [r2, #8]
 800364a:	4622      	mov	r2, r4
 800364c:	47a8      	blx	r5
 800364e:	e7eb      	b.n	8003628 <USBD_CDC_Setup+0x4a>
 8003650:	784f      	ldrb	r7, [r1, #1]
 8003652:	2f0a      	cmp	r7, #10
 8003654:	d00d      	beq.n	8003672 <USBD_CDC_Setup+0x94>
 8003656:	2f0b      	cmp	r7, #11
 8003658:	d015      	beq.n	8003686 <USBD_CDC_Setup+0xa8>
 800365a:	b9c7      	cbnz	r7, 800368e <USBD_CDC_Setup+0xb0>
 800365c:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003660:	2b03      	cmp	r3, #3
 8003662:	d114      	bne.n	800368e <USBD_CDC_Setup+0xb0>
 8003664:	2202      	movs	r2, #2
 8003666:	f10d 0106 	add.w	r1, sp, #6
 800366a:	f000 fc22 	bl	8003eb2 <USBD_CtlSendData>
 800366e:	463c      	mov	r4, r7
 8003670:	e7da      	b.n	8003628 <USBD_CDC_Setup+0x4a>
 8003672:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003676:	2b03      	cmp	r3, #3
 8003678:	d109      	bne.n	800368e <USBD_CDC_Setup+0xb0>
 800367a:	2201      	movs	r2, #1
 800367c:	f10d 0105 	add.w	r1, sp, #5
 8003680:	f000 fc17 	bl	8003eb2 <USBD_CtlSendData>
 8003684:	e7d0      	b.n	8003628 <USBD_CDC_Setup+0x4a>
 8003686:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800368a:	2b03      	cmp	r3, #3
 800368c:	d0cc      	beq.n	8003628 <USBD_CDC_Setup+0x4a>
 800368e:	4631      	mov	r1, r6
 8003690:	4628      	mov	r0, r5
 8003692:	f000 fbe7 	bl	8003e64 <USBD_CtlError>
 8003696:	2402      	movs	r4, #2
 8003698:	e7c6      	b.n	8003628 <USBD_CDC_Setup+0x4a>

0800369a <USBD_CDC_DeInit>:
 800369a:	b538      	push	{r3, r4, r5, lr}
 800369c:	4604      	mov	r4, r0
 800369e:	2500      	movs	r5, #0
 80036a0:	2181      	movs	r1, #129	; 0x81
 80036a2:	f002 ffab 	bl	80065fc <USBD_LL_CloseEP>
 80036a6:	2101      	movs	r1, #1
 80036a8:	62e5      	str	r5, [r4, #44]	; 0x2c
 80036aa:	4620      	mov	r0, r4
 80036ac:	f002 ffa6 	bl	80065fc <USBD_LL_CloseEP>
 80036b0:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
 80036b4:	2182      	movs	r1, #130	; 0x82
 80036b6:	4620      	mov	r0, r4
 80036b8:	f002 ffa0 	bl	80065fc <USBD_LL_CloseEP>
 80036bc:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 80036c0:	6425      	str	r5, [r4, #64]	; 0x40
 80036c2:	b14b      	cbz	r3, 80036d8 <USBD_CDC_DeInit+0x3e>
 80036c4:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 80036c8:	685b      	ldr	r3, [r3, #4]
 80036ca:	4798      	blx	r3
 80036cc:	f8d4 02b8 	ldr.w	r0, [r4, #696]	; 0x2b8
 80036d0:	f003 f800 	bl	80066d4 <USBD_static_free>
 80036d4:	f8c4 52b8 	str.w	r5, [r4, #696]	; 0x2b8
 80036d8:	2000      	movs	r0, #0
 80036da:	bd38      	pop	{r3, r4, r5, pc}

080036dc <USBD_CDC_Init>:
 80036dc:	7c03      	ldrb	r3, [r0, #16]
 80036de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036e2:	4604      	mov	r4, r0
 80036e4:	bbcb      	cbnz	r3, 800375a <USBD_CDC_Init+0x7e>
 80036e6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80036ea:	2202      	movs	r2, #2
 80036ec:	2181      	movs	r1, #129	; 0x81
 80036ee:	2501      	movs	r5, #1
 80036f0:	f002 ff74 	bl	80065dc <USBD_LL_OpenEP>
 80036f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80036f8:	62e5      	str	r5, [r4, #44]	; 0x2c
 80036fa:	4629      	mov	r1, r5
 80036fc:	2202      	movs	r2, #2
 80036fe:	4620      	mov	r0, r4
 8003700:	f002 ff6c 	bl	80065dc <USBD_LL_OpenEP>
 8003704:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
 8003708:	2501      	movs	r5, #1
 800370a:	2308      	movs	r3, #8
 800370c:	2203      	movs	r2, #3
 800370e:	2182      	movs	r1, #130	; 0x82
 8003710:	4620      	mov	r0, r4
 8003712:	f002 ff63 	bl	80065dc <USBD_LL_OpenEP>
 8003716:	6425      	str	r5, [r4, #64]	; 0x40
 8003718:	f44f 7007 	mov.w	r0, #540	; 0x21c
 800371c:	f002 ffd6 	bl	80066cc <USBD_static_malloc>
 8003720:	4606      	mov	r6, r0
 8003722:	f8c4 02b8 	str.w	r0, [r4, #696]	; 0x2b8
 8003726:	b350      	cbz	r0, 800377e <USBD_CDC_Init+0xa2>
 8003728:	2700      	movs	r7, #0
 800372a:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	4798      	blx	r3
 8003732:	f894 8010 	ldrb.w	r8, [r4, #16]
 8003736:	f8c6 7214 	str.w	r7, [r6, #532]	; 0x214
 800373a:	f8c6 7218 	str.w	r7, [r6, #536]	; 0x218
 800373e:	f1b8 0f00 	cmp.w	r8, #0
 8003742:	d113      	bne.n	800376c <USBD_CDC_Init+0x90>
 8003744:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003748:	f8d6 2204 	ldr.w	r2, [r6, #516]	; 0x204
 800374c:	4629      	mov	r1, r5
 800374e:	4620      	mov	r0, r4
 8003750:	f002 ffaa 	bl	80066a8 <USBD_LL_PrepareReceive>
 8003754:	4640      	mov	r0, r8
 8003756:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800375a:	2501      	movs	r5, #1
 800375c:	2340      	movs	r3, #64	; 0x40
 800375e:	2202      	movs	r2, #2
 8003760:	2181      	movs	r1, #129	; 0x81
 8003762:	f002 ff3b 	bl	80065dc <USBD_LL_OpenEP>
 8003766:	62e5      	str	r5, [r4, #44]	; 0x2c
 8003768:	2340      	movs	r3, #64	; 0x40
 800376a:	e7c6      	b.n	80036fa <USBD_CDC_Init+0x1e>
 800376c:	2340      	movs	r3, #64	; 0x40
 800376e:	f8d6 2204 	ldr.w	r2, [r6, #516]	; 0x204
 8003772:	4629      	mov	r1, r5
 8003774:	4620      	mov	r0, r4
 8003776:	f002 ff97 	bl	80066a8 <USBD_LL_PrepareReceive>
 800377a:	4638      	mov	r0, r7
 800377c:	e7eb      	b.n	8003756 <USBD_CDC_Init+0x7a>
 800377e:	4628      	mov	r0, r5
 8003780:	e7e9      	b.n	8003756 <USBD_CDC_Init+0x7a>

08003782 <USBD_CDC_RegisterInterface>:
 8003782:	b119      	cbz	r1, 800378c <USBD_CDC_RegisterInterface+0xa>
 8003784:	f8c0 12bc 	str.w	r1, [r0, #700]	; 0x2bc
 8003788:	2000      	movs	r0, #0
 800378a:	4770      	bx	lr
 800378c:	2002      	movs	r0, #2
 800378e:	4770      	bx	lr

08003790 <USBD_CDC_SetTxBuffer>:
 8003790:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8003794:	2000      	movs	r0, #0
 8003796:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 800379a:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 800379e:	4770      	bx	lr

080037a0 <USBD_CDC_SetRxBuffer>:
 80037a0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 80037a4:	2000      	movs	r0, #0
 80037a6:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 80037aa:	4770      	bx	lr

080037ac <USBD_CDC_TransmitPacket>:
 80037ac:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 80037b0:	b510      	push	{r4, lr}
 80037b2:	b182      	cbz	r2, 80037d6 <USBD_CDC_TransmitPacket+0x2a>
 80037b4:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
 80037b8:	2301      	movs	r3, #1
 80037ba:	b974      	cbnz	r4, 80037da <USBD_CDC_TransmitPacket+0x2e>
 80037bc:	f8c2 3214 	str.w	r3, [r2, #532]	; 0x214
 80037c0:	f8d2 3210 	ldr.w	r3, [r2, #528]	; 0x210
 80037c4:	2181      	movs	r1, #129	; 0x81
 80037c6:	6303      	str	r3, [r0, #48]	; 0x30
 80037c8:	f8d2 2208 	ldr.w	r2, [r2, #520]	; 0x208
 80037cc:	b29b      	uxth	r3, r3
 80037ce:	f002 ff5d 	bl	800668c <USBD_LL_Transmit>
 80037d2:	4620      	mov	r0, r4
 80037d4:	bd10      	pop	{r4, pc}
 80037d6:	2002      	movs	r0, #2
 80037d8:	e7fc      	b.n	80037d4 <USBD_CDC_TransmitPacket+0x28>
 80037da:	4618      	mov	r0, r3
 80037dc:	e7fa      	b.n	80037d4 <USBD_CDC_TransmitPacket+0x28>

080037de <USBD_CDC_ReceivePacket>:
 80037de:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 80037e2:	b510      	push	{r4, lr}
 80037e4:	b162      	cbz	r2, 8003800 <USBD_CDC_ReceivePacket+0x22>
 80037e6:	7c04      	ldrb	r4, [r0, #16]
 80037e8:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 80037ec:	b934      	cbnz	r4, 80037fc <USBD_CDC_ReceivePacket+0x1e>
 80037ee:	f44f 7300 	mov.w	r3, #512	; 0x200
 80037f2:	2101      	movs	r1, #1
 80037f4:	f002 ff58 	bl	80066a8 <USBD_LL_PrepareReceive>
 80037f8:	2000      	movs	r0, #0
 80037fa:	bd10      	pop	{r4, pc}
 80037fc:	2340      	movs	r3, #64	; 0x40
 80037fe:	e7f8      	b.n	80037f2 <USBD_CDC_ReceivePacket+0x14>
 8003800:	2002      	movs	r0, #2
 8003802:	e7fa      	b.n	80037fa <USBD_CDC_ReceivePacket+0x1c>

08003804 <USBD_Init>:
 8003804:	b508      	push	{r3, lr}
 8003806:	b180      	cbz	r0, 800382a <USBD_Init+0x26>
 8003808:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800380c:	b113      	cbz	r3, 8003814 <USBD_Init+0x10>
 800380e:	2300      	movs	r3, #0
 8003810:	f8c0 32b4 	str.w	r3, [r0, #692]	; 0x2b4
 8003814:	b109      	cbz	r1, 800381a <USBD_Init+0x16>
 8003816:	f8c0 12b0 	str.w	r1, [r0, #688]	; 0x2b0
 800381a:	2301      	movs	r3, #1
 800381c:	7002      	strb	r2, [r0, #0]
 800381e:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8003822:	f002 fe8b 	bl	800653c <USBD_LL_Init>
 8003826:	2000      	movs	r0, #0
 8003828:	bd08      	pop	{r3, pc}
 800382a:	2002      	movs	r0, #2
 800382c:	e7fc      	b.n	8003828 <USBD_Init+0x24>

0800382e <USBD_RegisterClass>:
 800382e:	b119      	cbz	r1, 8003838 <USBD_RegisterClass+0xa>
 8003830:	f8c0 12b4 	str.w	r1, [r0, #692]	; 0x2b4
 8003834:	2000      	movs	r0, #0
 8003836:	4770      	bx	lr
 8003838:	2002      	movs	r0, #2
 800383a:	4770      	bx	lr

0800383c <USBD_Start>:
 800383c:	b508      	push	{r3, lr}
 800383e:	f002 febf 	bl	80065c0 <USBD_LL_Start>
 8003842:	2000      	movs	r0, #0
 8003844:	bd08      	pop	{r3, pc}

08003846 <USBD_SetClassConfig>:
 8003846:	b508      	push	{r3, lr}
 8003848:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800384c:	b90b      	cbnz	r3, 8003852 <USBD_SetClassConfig+0xc>
 800384e:	2002      	movs	r0, #2
 8003850:	bd08      	pop	{r3, pc}
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	4798      	blx	r3
 8003856:	2800      	cmp	r0, #0
 8003858:	d0fa      	beq.n	8003850 <USBD_SetClassConfig+0xa>
 800385a:	e7f8      	b.n	800384e <USBD_SetClassConfig+0x8>

0800385c <USBD_ClrClassConfig>:
 800385c:	b508      	push	{r3, lr}
 800385e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003862:	685b      	ldr	r3, [r3, #4]
 8003864:	4798      	blx	r3
 8003866:	2000      	movs	r0, #0
 8003868:	bd08      	pop	{r3, pc}

0800386a <USBD_LL_SetupStage>:
 800386a:	b538      	push	{r3, r4, r5, lr}
 800386c:	f500 752a 	add.w	r5, r0, #680	; 0x2a8
 8003870:	4604      	mov	r4, r0
 8003872:	4628      	mov	r0, r5
 8003874:	f000 fae2 	bl	8003e3c <USBD_ParseSetupRequest>
 8003878:	2301      	movs	r3, #1
 800387a:	f894 12a8 	ldrb.w	r1, [r4, #680]	; 0x2a8
 800387e:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
 8003882:	f8b4 32ae 	ldrh.w	r3, [r4, #686]	; 0x2ae
 8003886:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800388a:	f001 031f 	and.w	r3, r1, #31
 800388e:	2b01      	cmp	r3, #1
 8003890:	d00e      	beq.n	80038b0 <USBD_LL_SetupStage+0x46>
 8003892:	d307      	bcc.n	80038a4 <USBD_LL_SetupStage+0x3a>
 8003894:	2b02      	cmp	r3, #2
 8003896:	d010      	beq.n	80038ba <USBD_LL_SetupStage+0x50>
 8003898:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800389c:	4620      	mov	r0, r4
 800389e:	f002 febb 	bl	8006618 <USBD_LL_StallEP>
 80038a2:	e003      	b.n	80038ac <USBD_LL_SetupStage+0x42>
 80038a4:	4629      	mov	r1, r5
 80038a6:	4620      	mov	r0, r4
 80038a8:	f000 f8f6 	bl	8003a98 <USBD_StdDevReq>
 80038ac:	2000      	movs	r0, #0
 80038ae:	bd38      	pop	{r3, r4, r5, pc}
 80038b0:	4629      	mov	r1, r5
 80038b2:	4620      	mov	r0, r4
 80038b4:	f000 fa14 	bl	8003ce0 <USBD_StdItfReq>
 80038b8:	e7f8      	b.n	80038ac <USBD_LL_SetupStage+0x42>
 80038ba:	4629      	mov	r1, r5
 80038bc:	4620      	mov	r0, r4
 80038be:	f000 fa34 	bl	8003d2a <USBD_StdEPReq>
 80038c2:	e7f3      	b.n	80038ac <USBD_LL_SetupStage+0x42>

080038c4 <USBD_LL_DataOutStage>:
 80038c4:	b570      	push	{r4, r5, r6, lr}
 80038c6:	4605      	mov	r5, r0
 80038c8:	4616      	mov	r6, r2
 80038ca:	bb49      	cbnz	r1, 8003920 <USBD_LL_DataOutStage+0x5c>
 80038cc:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 80038d0:	2b03      	cmp	r3, #3
 80038d2:	d11e      	bne.n	8003912 <USBD_LL_DataOutStage+0x4e>
 80038d4:	f8d0 3160 	ldr.w	r3, [r0, #352]	; 0x160
 80038d8:	f8d0 2164 	ldr.w	r2, [r0, #356]	; 0x164
 80038dc:	4293      	cmp	r3, r2
 80038de:	d90b      	bls.n	80038f8 <USBD_LL_DataOutStage+0x34>
 80038e0:	1a9b      	subs	r3, r3, r2
 80038e2:	429a      	cmp	r2, r3
 80038e4:	f8c0 3160 	str.w	r3, [r0, #352]	; 0x160
 80038e8:	bf8c      	ite	hi
 80038ea:	b29a      	uxthhi	r2, r3
 80038ec:	b292      	uxthls	r2, r2
 80038ee:	4631      	mov	r1, r6
 80038f0:	f000 fb03 	bl	8003efa <USBD_CtlContinueRx>
 80038f4:	2000      	movs	r0, #0
 80038f6:	bd70      	pop	{r4, r5, r6, pc}
 80038f8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80038fc:	691b      	ldr	r3, [r3, #16]
 80038fe:	b123      	cbz	r3, 800390a <USBD_LL_DataOutStage+0x46>
 8003900:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8003904:	2a03      	cmp	r2, #3
 8003906:	d100      	bne.n	800390a <USBD_LL_DataOutStage+0x46>
 8003908:	4798      	blx	r3
 800390a:	4628      	mov	r0, r5
 800390c:	f000 fafd 	bl	8003f0a <USBD_CtlSendStatus>
 8003910:	e7f0      	b.n	80038f4 <USBD_LL_DataOutStage+0x30>
 8003912:	2b05      	cmp	r3, #5
 8003914:	d1ee      	bne.n	80038f4 <USBD_LL_DataOutStage+0x30>
 8003916:	f8c5 1294 	str.w	r1, [r5, #660]	; 0x294
 800391a:	f002 fe7d 	bl	8006618 <USBD_LL_StallEP>
 800391e:	e7e9      	b.n	80038f4 <USBD_LL_DataOutStage+0x30>
 8003920:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003924:	699b      	ldr	r3, [r3, #24]
 8003926:	b12b      	cbz	r3, 8003934 <USBD_LL_DataOutStage+0x70>
 8003928:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 800392c:	2a03      	cmp	r2, #3
 800392e:	d101      	bne.n	8003934 <USBD_LL_DataOutStage+0x70>
 8003930:	4798      	blx	r3
 8003932:	e7df      	b.n	80038f4 <USBD_LL_DataOutStage+0x30>
 8003934:	2002      	movs	r0, #2
 8003936:	e7de      	b.n	80038f6 <USBD_LL_DataOutStage+0x32>

08003938 <USBD_LL_DataInStage>:
 8003938:	b570      	push	{r4, r5, r6, lr}
 800393a:	4613      	mov	r3, r2
 800393c:	4604      	mov	r4, r0
 800393e:	460e      	mov	r6, r1
 8003940:	2900      	cmp	r1, #0
 8003942:	d147      	bne.n	80039d4 <USBD_LL_DataInStage+0x9c>
 8003944:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 8003948:	2a02      	cmp	r2, #2
 800394a:	d13c      	bne.n	80039c6 <USBD_LL_DataInStage+0x8e>
 800394c:	e9d0 5208 	ldrd	r5, r2, [r0, #32]
 8003950:	4295      	cmp	r5, r2
 8003952:	d913      	bls.n	800397c <USBD_LL_DataInStage+0x44>
 8003954:	1aaa      	subs	r2, r5, r2
 8003956:	6202      	str	r2, [r0, #32]
 8003958:	4619      	mov	r1, r3
 800395a:	b292      	uxth	r2, r2
 800395c:	f000 fab6 	bl	8003ecc <USBD_CtlContinueSendData>
 8003960:	4633      	mov	r3, r6
 8003962:	461a      	mov	r2, r3
 8003964:	4619      	mov	r1, r3
 8003966:	4620      	mov	r0, r4
 8003968:	f002 fe9e 	bl	80066a8 <USBD_LL_PrepareReceive>
 800396c:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 8003970:	2000      	movs	r0, #0
 8003972:	2b01      	cmp	r3, #1
 8003974:	d101      	bne.n	800397a <USBD_LL_DataInStage+0x42>
 8003976:	f884 02a0 	strb.w	r0, [r4, #672]	; 0x2a0
 800397a:	bd70      	pop	{r4, r5, r6, pc}
 800397c:	69c3      	ldr	r3, [r0, #28]
 800397e:	fbb3 f5f2 	udiv	r5, r3, r2
 8003982:	fb02 3515 	mls	r5, r2, r5, r3
 8003986:	b965      	cbnz	r5, 80039a2 <USBD_LL_DataInStage+0x6a>
 8003988:	429a      	cmp	r2, r3
 800398a:	d80a      	bhi.n	80039a2 <USBD_LL_DataInStage+0x6a>
 800398c:	f8d0 2298 	ldr.w	r2, [r0, #664]	; 0x298
 8003990:	4293      	cmp	r3, r2
 8003992:	d206      	bcs.n	80039a2 <USBD_LL_DataInStage+0x6a>
 8003994:	462a      	mov	r2, r5
 8003996:	f000 fa99 	bl	8003ecc <USBD_CtlContinueSendData>
 800399a:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 800399e:	462b      	mov	r3, r5
 80039a0:	e7df      	b.n	8003962 <USBD_LL_DataInStage+0x2a>
 80039a2:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 80039a6:	68db      	ldr	r3, [r3, #12]
 80039a8:	b12b      	cbz	r3, 80039b6 <USBD_LL_DataInStage+0x7e>
 80039aa:	f894 229c 	ldrb.w	r2, [r4, #668]	; 0x29c
 80039ae:	2a03      	cmp	r2, #3
 80039b0:	d101      	bne.n	80039b6 <USBD_LL_DataInStage+0x7e>
 80039b2:	4620      	mov	r0, r4
 80039b4:	4798      	blx	r3
 80039b6:	2180      	movs	r1, #128	; 0x80
 80039b8:	4620      	mov	r0, r4
 80039ba:	f002 fe2d 	bl	8006618 <USBD_LL_StallEP>
 80039be:	4620      	mov	r0, r4
 80039c0:	f000 faae 	bl	8003f20 <USBD_CtlReceiveStatus>
 80039c4:	e7d2      	b.n	800396c <USBD_LL_DataInStage+0x34>
 80039c6:	f032 0304 	bics.w	r3, r2, #4
 80039ca:	d1cf      	bne.n	800396c <USBD_LL_DataInStage+0x34>
 80039cc:	2180      	movs	r1, #128	; 0x80
 80039ce:	f002 fe23 	bl	8006618 <USBD_LL_StallEP>
 80039d2:	e7cb      	b.n	800396c <USBD_LL_DataInStage+0x34>
 80039d4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80039d8:	695b      	ldr	r3, [r3, #20]
 80039da:	b133      	cbz	r3, 80039ea <USBD_LL_DataInStage+0xb2>
 80039dc:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 80039e0:	2a03      	cmp	r2, #3
 80039e2:	d102      	bne.n	80039ea <USBD_LL_DataInStage+0xb2>
 80039e4:	4798      	blx	r3
 80039e6:	2000      	movs	r0, #0
 80039e8:	e7c7      	b.n	800397a <USBD_LL_DataInStage+0x42>
 80039ea:	2002      	movs	r0, #2
 80039ec:	e7c5      	b.n	800397a <USBD_LL_DataInStage+0x42>

080039ee <USBD_LL_Reset>:
 80039ee:	2200      	movs	r2, #0
 80039f0:	b570      	push	{r4, r5, r6, lr}
 80039f2:	4604      	mov	r4, r0
 80039f4:	2501      	movs	r5, #1
 80039f6:	2640      	movs	r6, #64	; 0x40
 80039f8:	4611      	mov	r1, r2
 80039fa:	2340      	movs	r3, #64	; 0x40
 80039fc:	f002 fdee 	bl	80065dc <USBD_LL_OpenEP>
 8003a00:	4633      	mov	r3, r6
 8003a02:	2180      	movs	r1, #128	; 0x80
 8003a04:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 8003a08:	f8c4 6164 	str.w	r6, [r4, #356]	; 0x164
 8003a0c:	2200      	movs	r2, #0
 8003a0e:	4620      	mov	r0, r4
 8003a10:	f002 fde4 	bl	80065dc <USBD_LL_OpenEP>
 8003a14:	2100      	movs	r1, #0
 8003a16:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 8003a1a:	61a5      	str	r5, [r4, #24]
 8003a1c:	6266      	str	r6, [r4, #36]	; 0x24
 8003a1e:	f884 529c 	strb.w	r5, [r4, #668]	; 0x29c
 8003a22:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
 8003a26:	6061      	str	r1, [r4, #4]
 8003a28:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8003a2c:	b123      	cbz	r3, 8003a38 <USBD_LL_Reset+0x4a>
 8003a2e:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 8003a32:	4620      	mov	r0, r4
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	4798      	blx	r3
 8003a38:	2000      	movs	r0, #0
 8003a3a:	bd70      	pop	{r4, r5, r6, pc}

08003a3c <USBD_LL_SetSpeed>:
 8003a3c:	7401      	strb	r1, [r0, #16]
 8003a3e:	2000      	movs	r0, #0
 8003a40:	4770      	bx	lr

08003a42 <USBD_LL_Suspend>:
 8003a42:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003a46:	f880 329d 	strb.w	r3, [r0, #669]	; 0x29d
 8003a4a:	2304      	movs	r3, #4
 8003a4c:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8003a50:	2000      	movs	r0, #0
 8003a52:	4770      	bx	lr

08003a54 <USBD_LL_Resume>:
 8003a54:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003a58:	2b04      	cmp	r3, #4
 8003a5a:	bf04      	itt	eq
 8003a5c:	f890 329d 	ldrbeq.w	r3, [r0, #669]	; 0x29d
 8003a60:	f880 329c 	strbeq.w	r3, [r0, #668]	; 0x29c
 8003a64:	2000      	movs	r0, #0
 8003a66:	4770      	bx	lr

08003a68 <USBD_LL_SOF>:
 8003a68:	b508      	push	{r3, lr}
 8003a6a:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8003a6e:	2a03      	cmp	r2, #3
 8003a70:	d104      	bne.n	8003a7c <USBD_LL_SOF+0x14>
 8003a72:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003a76:	69db      	ldr	r3, [r3, #28]
 8003a78:	b103      	cbz	r3, 8003a7c <USBD_LL_SOF+0x14>
 8003a7a:	4798      	blx	r3
 8003a7c:	2000      	movs	r0, #0
 8003a7e:	bd08      	pop	{r3, pc}

08003a80 <USBD_CtlError.constprop.1>:
 8003a80:	b510      	push	{r4, lr}
 8003a82:	4604      	mov	r4, r0
 8003a84:	2180      	movs	r1, #128	; 0x80
 8003a86:	f002 fdc7 	bl	8006618 <USBD_LL_StallEP>
 8003a8a:	4620      	mov	r0, r4
 8003a8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a90:	2100      	movs	r1, #0
 8003a92:	f002 bdc1 	b.w	8006618 <USBD_LL_StallEP>
	...

08003a98 <USBD_StdDevReq>:
 8003a98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003a9a:	780b      	ldrb	r3, [r1, #0]
 8003a9c:	4604      	mov	r4, r0
 8003a9e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8003aa2:	2b20      	cmp	r3, #32
 8003aa4:	460d      	mov	r5, r1
 8003aa6:	d012      	beq.n	8003ace <USBD_StdDevReq+0x36>
 8003aa8:	2b40      	cmp	r3, #64	; 0x40
 8003aaa:	d010      	beq.n	8003ace <USBD_StdDevReq+0x36>
 8003aac:	2b00      	cmp	r3, #0
 8003aae:	d15b      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003ab0:	784b      	ldrb	r3, [r1, #1]
 8003ab2:	2b09      	cmp	r3, #9
 8003ab4:	d858      	bhi.n	8003b68 <USBD_StdDevReq+0xd0>
 8003ab6:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003aba:	00e9      	.short	0x00e9
 8003abc:	00570105 	.word	0x00570105
 8003ac0:	005700fe 	.word	0x005700fe
 8003ac4:	00130084 	.word	0x00130084
 8003ac8:	00d20057 	.word	0x00d20057
 8003acc:	00a0      	.short	0x00a0
 8003ace:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 8003ad2:	4629      	mov	r1, r5
 8003ad4:	689b      	ldr	r3, [r3, #8]
 8003ad6:	4620      	mov	r0, r4
 8003ad8:	4798      	blx	r3
 8003ada:	2000      	movs	r0, #0
 8003adc:	b003      	add	sp, #12
 8003ade:	bd30      	pop	{r4, r5, pc}
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8003ae6:	884b      	ldrh	r3, [r1, #2]
 8003ae8:	0a1a      	lsrs	r2, r3, #8
 8003aea:	3a01      	subs	r2, #1
 8003aec:	2a06      	cmp	r2, #6
 8003aee:	d83b      	bhi.n	8003b68 <USBD_StdDevReq+0xd0>
 8003af0:	e8df f002 	tbb	[pc, r2]
 8003af4:	3a2d2004 	.word	0x3a2d2004
 8003af8:	523a      	.short	0x523a
 8003afa:	5c          	.byte	0x5c
 8003afb:	00          	.byte	0x00
 8003afc:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f10d 0106 	add.w	r1, sp, #6
 8003b06:	7c20      	ldrb	r0, [r4, #16]
 8003b08:	4798      	blx	r3
 8003b0a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8003b0e:	b152      	cbz	r2, 8003b26 <USBD_StdDevReq+0x8e>
 8003b10:	88eb      	ldrh	r3, [r5, #6]
 8003b12:	b143      	cbz	r3, 8003b26 <USBD_StdDevReq+0x8e>
 8003b14:	429a      	cmp	r2, r3
 8003b16:	bf28      	it	cs
 8003b18:	461a      	movcs	r2, r3
 8003b1a:	4601      	mov	r1, r0
 8003b1c:	4620      	mov	r0, r4
 8003b1e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8003b22:	f000 f9c6 	bl	8003eb2 <USBD_CtlSendData>
 8003b26:	88eb      	ldrh	r3, [r5, #6]
 8003b28:	2b00      	cmp	r3, #0
 8003b2a:	d1d6      	bne.n	8003ada <USBD_StdDevReq+0x42>
 8003b2c:	4620      	mov	r0, r4
 8003b2e:	f000 f9ec 	bl	8003f0a <USBD_CtlSendStatus>
 8003b32:	e7d2      	b.n	8003ada <USBD_StdDevReq+0x42>
 8003b34:	7c02      	ldrb	r2, [r0, #16]
 8003b36:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003b3a:	b932      	cbnz	r2, 8003b4a <USBD_StdDevReq+0xb2>
 8003b3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b3e:	f10d 0006 	add.w	r0, sp, #6
 8003b42:	4798      	blx	r3
 8003b44:	2302      	movs	r3, #2
 8003b46:	7043      	strb	r3, [r0, #1]
 8003b48:	e7df      	b.n	8003b0a <USBD_StdDevReq+0x72>
 8003b4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b4c:	e7f7      	b.n	8003b3e <USBD_StdDevReq+0xa6>
 8003b4e:	b2db      	uxtb	r3, r3
 8003b50:	2b05      	cmp	r3, #5
 8003b52:	d809      	bhi.n	8003b68 <USBD_StdDevReq+0xd0>
 8003b54:	e8df f003 	tbb	[pc, r3]
 8003b58:	14100c03 	.word	0x14100c03
 8003b5c:	1c18      	.short	0x1c18
 8003b5e:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b62:	685b      	ldr	r3, [r3, #4]
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d1cc      	bne.n	8003b02 <USBD_StdDevReq+0x6a>
 8003b68:	4620      	mov	r0, r4
 8003b6a:	f7ff ff89 	bl	8003a80 <USBD_CtlError.constprop.1>
 8003b6e:	e7b4      	b.n	8003ada <USBD_StdDevReq+0x42>
 8003b70:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b74:	689b      	ldr	r3, [r3, #8]
 8003b76:	e7f5      	b.n	8003b64 <USBD_StdDevReq+0xcc>
 8003b78:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b7c:	68db      	ldr	r3, [r3, #12]
 8003b7e:	e7f1      	b.n	8003b64 <USBD_StdDevReq+0xcc>
 8003b80:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b84:	691b      	ldr	r3, [r3, #16]
 8003b86:	e7ed      	b.n	8003b64 <USBD_StdDevReq+0xcc>
 8003b88:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b8c:	695b      	ldr	r3, [r3, #20]
 8003b8e:	e7e9      	b.n	8003b64 <USBD_StdDevReq+0xcc>
 8003b90:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8003b94:	699b      	ldr	r3, [r3, #24]
 8003b96:	e7e5      	b.n	8003b64 <USBD_StdDevReq+0xcc>
 8003b98:	7c03      	ldrb	r3, [r0, #16]
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d1e4      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003b9e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003ba2:	f10d 0006 	add.w	r0, sp, #6
 8003ba6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003ba8:	4798      	blx	r3
 8003baa:	e7ae      	b.n	8003b0a <USBD_StdDevReq+0x72>
 8003bac:	7c03      	ldrb	r3, [r0, #16]
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d1da      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003bb2:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8003bb6:	f10d 0006 	add.w	r0, sp, #6
 8003bba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bbc:	4798      	blx	r3
 8003bbe:	2307      	movs	r3, #7
 8003bc0:	e7c1      	b.n	8003b46 <USBD_StdDevReq+0xae>
 8003bc2:	888b      	ldrh	r3, [r1, #4]
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d1cf      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003bc8:	88cb      	ldrh	r3, [r1, #6]
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d1cc      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003bce:	884d      	ldrh	r5, [r1, #2]
 8003bd0:	2d7f      	cmp	r5, #127	; 0x7f
 8003bd2:	d8c9      	bhi.n	8003b68 <USBD_StdDevReq+0xd0>
 8003bd4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003bd8:	2b03      	cmp	r3, #3
 8003bda:	d0c5      	beq.n	8003b68 <USBD_StdDevReq+0xd0>
 8003bdc:	b2e9      	uxtb	r1, r5
 8003bde:	f880 129e 	strb.w	r1, [r0, #670]	; 0x29e
 8003be2:	f002 fd45 	bl	8006670 <USBD_LL_SetUSBAddress>
 8003be6:	4620      	mov	r0, r4
 8003be8:	f000 f98f 	bl	8003f0a <USBD_CtlSendStatus>
 8003bec:	b11d      	cbz	r5, 8003bf6 <USBD_StdDevReq+0x15e>
 8003bee:	2302      	movs	r3, #2
 8003bf0:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8003bf4:	e771      	b.n	8003ada <USBD_StdDevReq+0x42>
 8003bf6:	2301      	movs	r3, #1
 8003bf8:	e7fa      	b.n	8003bf0 <USBD_StdDevReq+0x158>
 8003bfa:	7889      	ldrb	r1, [r1, #2]
 8003bfc:	4d37      	ldr	r5, [pc, #220]	; (8003cdc <USBD_StdDevReq+0x244>)
 8003bfe:	2901      	cmp	r1, #1
 8003c00:	7029      	strb	r1, [r5, #0]
 8003c02:	d8b1      	bhi.n	8003b68 <USBD_StdDevReq+0xd0>
 8003c04:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003c08:	2b02      	cmp	r3, #2
 8003c0a:	d008      	beq.n	8003c1e <USBD_StdDevReq+0x186>
 8003c0c:	2b03      	cmp	r3, #3
 8003c0e:	d014      	beq.n	8003c3a <USBD_StdDevReq+0x1a2>
 8003c10:	f7ff ff36 	bl	8003a80 <USBD_CtlError.constprop.1>
 8003c14:	7829      	ldrb	r1, [r5, #0]
 8003c16:	4620      	mov	r0, r4
 8003c18:	f7ff fe20 	bl	800385c <USBD_ClrClassConfig>
 8003c1c:	e75d      	b.n	8003ada <USBD_StdDevReq+0x42>
 8003c1e:	2900      	cmp	r1, #0
 8003c20:	d084      	beq.n	8003b2c <USBD_StdDevReq+0x94>
 8003c22:	2101      	movs	r1, #1
 8003c24:	2303      	movs	r3, #3
 8003c26:	6041      	str	r1, [r0, #4]
 8003c28:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8003c2c:	4620      	mov	r0, r4
 8003c2e:	f7ff fe0a 	bl	8003846 <USBD_SetClassConfig>
 8003c32:	2802      	cmp	r0, #2
 8003c34:	f47f af7a 	bne.w	8003b2c <USBD_StdDevReq+0x94>
 8003c38:	e796      	b.n	8003b68 <USBD_StdDevReq+0xd0>
 8003c3a:	b931      	cbnz	r1, 8003c4a <USBD_StdDevReq+0x1b2>
 8003c3c:	2302      	movs	r3, #2
 8003c3e:	6041      	str	r1, [r0, #4]
 8003c40:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8003c44:	f7ff fe0a 	bl	800385c <USBD_ClrClassConfig>
 8003c48:	e770      	b.n	8003b2c <USBD_StdDevReq+0x94>
 8003c4a:	6841      	ldr	r1, [r0, #4]
 8003c4c:	2901      	cmp	r1, #1
 8003c4e:	f43f af6d 	beq.w	8003b2c <USBD_StdDevReq+0x94>
 8003c52:	b2c9      	uxtb	r1, r1
 8003c54:	f7ff fe02 	bl	800385c <USBD_ClrClassConfig>
 8003c58:	7829      	ldrb	r1, [r5, #0]
 8003c5a:	6061      	str	r1, [r4, #4]
 8003c5c:	e7e6      	b.n	8003c2c <USBD_StdDevReq+0x194>
 8003c5e:	88ca      	ldrh	r2, [r1, #6]
 8003c60:	2a01      	cmp	r2, #1
 8003c62:	d181      	bne.n	8003b68 <USBD_StdDevReq+0xd0>
 8003c64:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	f43f af7d 	beq.w	8003b68 <USBD_StdDevReq+0xd0>
 8003c6e:	2b02      	cmp	r3, #2
 8003c70:	d904      	bls.n	8003c7c <USBD_StdDevReq+0x1e4>
 8003c72:	2b03      	cmp	r3, #3
 8003c74:	f47f af78 	bne.w	8003b68 <USBD_StdDevReq+0xd0>
 8003c78:	1d01      	adds	r1, r0, #4
 8003c7a:	e003      	b.n	8003c84 <USBD_StdDevReq+0x1ec>
 8003c7c:	4601      	mov	r1, r0
 8003c7e:	2300      	movs	r3, #0
 8003c80:	f841 3f08 	str.w	r3, [r1, #8]!
 8003c84:	4620      	mov	r0, r4
 8003c86:	f000 f914 	bl	8003eb2 <USBD_CtlSendData>
 8003c8a:	e726      	b.n	8003ada <USBD_StdDevReq+0x42>
 8003c8c:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003c90:	3b01      	subs	r3, #1
 8003c92:	2b02      	cmp	r3, #2
 8003c94:	f63f af68 	bhi.w	8003b68 <USBD_StdDevReq+0xd0>
 8003c98:	88cb      	ldrh	r3, [r1, #6]
 8003c9a:	2b02      	cmp	r3, #2
 8003c9c:	f47f af64 	bne.w	8003b68 <USBD_StdDevReq+0xd0>
 8003ca0:	2301      	movs	r3, #1
 8003ca2:	60c3      	str	r3, [r0, #12]
 8003ca4:	f8d0 32a4 	ldr.w	r3, [r0, #676]	; 0x2a4
 8003ca8:	b10b      	cbz	r3, 8003cae <USBD_StdDevReq+0x216>
 8003caa:	2303      	movs	r3, #3
 8003cac:	60c3      	str	r3, [r0, #12]
 8003cae:	2202      	movs	r2, #2
 8003cb0:	f104 010c 	add.w	r1, r4, #12
 8003cb4:	e7e6      	b.n	8003c84 <USBD_StdDevReq+0x1ec>
 8003cb6:	884b      	ldrh	r3, [r1, #2]
 8003cb8:	2b01      	cmp	r3, #1
 8003cba:	f47f af0e 	bne.w	8003ada <USBD_StdDevReq+0x42>
 8003cbe:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 8003cc2:	e733      	b.n	8003b2c <USBD_StdDevReq+0x94>
 8003cc4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003cc8:	3b01      	subs	r3, #1
 8003cca:	2b02      	cmp	r3, #2
 8003ccc:	f63f af4c 	bhi.w	8003b68 <USBD_StdDevReq+0xd0>
 8003cd0:	884b      	ldrh	r3, [r1, #2]
 8003cd2:	2b01      	cmp	r3, #1
 8003cd4:	f47f af01 	bne.w	8003ada <USBD_StdDevReq+0x42>
 8003cd8:	2300      	movs	r3, #0
 8003cda:	e7f0      	b.n	8003cbe <USBD_StdDevReq+0x226>
 8003cdc:	200003f4 	.word	0x200003f4

08003ce0 <USBD_StdItfReq>:
 8003ce0:	b538      	push	{r3, r4, r5, lr}
 8003ce2:	780b      	ldrb	r3, [r1, #0]
 8003ce4:	4604      	mov	r4, r0
 8003ce6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8003cea:	2b20      	cmp	r3, #32
 8003cec:	460d      	mov	r5, r1
 8003cee:	d002      	beq.n	8003cf6 <USBD_StdItfReq+0x16>
 8003cf0:	2b40      	cmp	r3, #64	; 0x40
 8003cf2:	d000      	beq.n	8003cf6 <USBD_StdItfReq+0x16>
 8003cf4:	b9ab      	cbnz	r3, 8003d22 <USBD_StdItfReq+0x42>
 8003cf6:	f894 329c 	ldrb.w	r3, [r4, #668]	; 0x29c
 8003cfa:	3b01      	subs	r3, #1
 8003cfc:	2b02      	cmp	r3, #2
 8003cfe:	d810      	bhi.n	8003d22 <USBD_StdItfReq+0x42>
 8003d00:	792b      	ldrb	r3, [r5, #4]
 8003d02:	2b01      	cmp	r3, #1
 8003d04:	d80d      	bhi.n	8003d22 <USBD_StdItfReq+0x42>
 8003d06:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 8003d0a:	4629      	mov	r1, r5
 8003d0c:	689b      	ldr	r3, [r3, #8]
 8003d0e:	4620      	mov	r0, r4
 8003d10:	4798      	blx	r3
 8003d12:	88eb      	ldrh	r3, [r5, #6]
 8003d14:	b91b      	cbnz	r3, 8003d1e <USBD_StdItfReq+0x3e>
 8003d16:	b910      	cbnz	r0, 8003d1e <USBD_StdItfReq+0x3e>
 8003d18:	4620      	mov	r0, r4
 8003d1a:	f000 f8f6 	bl	8003f0a <USBD_CtlSendStatus>
 8003d1e:	2000      	movs	r0, #0
 8003d20:	bd38      	pop	{r3, r4, r5, pc}
 8003d22:	4620      	mov	r0, r4
 8003d24:	f7ff feac 	bl	8003a80 <USBD_CtlError.constprop.1>
 8003d28:	e7f9      	b.n	8003d1e <USBD_StdItfReq+0x3e>

08003d2a <USBD_StdEPReq>:
 8003d2a:	b538      	push	{r3, r4, r5, lr}
 8003d2c:	780a      	ldrb	r2, [r1, #0]
 8003d2e:	4604      	mov	r4, r0
 8003d30:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8003d34:	2a20      	cmp	r2, #32
 8003d36:	460b      	mov	r3, r1
 8003d38:	d014      	beq.n	8003d64 <USBD_StdEPReq+0x3a>
 8003d3a:	2a40      	cmp	r2, #64	; 0x40
 8003d3c:	d012      	beq.n	8003d64 <USBD_StdEPReq+0x3a>
 8003d3e:	b96a      	cbnz	r2, 8003d5c <USBD_StdEPReq+0x32>
 8003d40:	785a      	ldrb	r2, [r3, #1]
 8003d42:	888d      	ldrh	r5, [r1, #4]
 8003d44:	2a01      	cmp	r2, #1
 8003d46:	b2e9      	uxtb	r1, r5
 8003d48:	d020      	beq.n	8003d8c <USBD_StdEPReq+0x62>
 8003d4a:	d336      	bcc.n	8003dba <USBD_StdEPReq+0x90>
 8003d4c:	2a03      	cmp	r2, #3
 8003d4e:	d105      	bne.n	8003d5c <USBD_StdEPReq+0x32>
 8003d50:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8003d54:	2a02      	cmp	r2, #2
 8003d56:	d027      	beq.n	8003da8 <USBD_StdEPReq+0x7e>
 8003d58:	2a03      	cmp	r2, #3
 8003d5a:	d00b      	beq.n	8003d74 <USBD_StdEPReq+0x4a>
 8003d5c:	4620      	mov	r0, r4
 8003d5e:	f7ff fe8f 	bl	8003a80 <USBD_CtlError.constprop.1>
 8003d62:	e005      	b.n	8003d70 <USBD_StdEPReq+0x46>
 8003d64:	f8d4 22b4 	ldr.w	r2, [r4, #692]	; 0x2b4
 8003d68:	4619      	mov	r1, r3
 8003d6a:	6892      	ldr	r2, [r2, #8]
 8003d6c:	4620      	mov	r0, r4
 8003d6e:	4790      	blx	r2
 8003d70:	2000      	movs	r0, #0
 8003d72:	bd38      	pop	{r3, r4, r5, pc}
 8003d74:	885a      	ldrh	r2, [r3, #2]
 8003d76:	b92a      	cbnz	r2, 8003d84 <USBD_StdEPReq+0x5a>
 8003d78:	064a      	lsls	r2, r1, #25
 8003d7a:	d003      	beq.n	8003d84 <USBD_StdEPReq+0x5a>
 8003d7c:	88db      	ldrh	r3, [r3, #6]
 8003d7e:	b90b      	cbnz	r3, 8003d84 <USBD_StdEPReq+0x5a>
 8003d80:	f002 fc4a 	bl	8006618 <USBD_LL_StallEP>
 8003d84:	4620      	mov	r0, r4
 8003d86:	f000 f8c0 	bl	8003f0a <USBD_CtlSendStatus>
 8003d8a:	e7f1      	b.n	8003d70 <USBD_StdEPReq+0x46>
 8003d8c:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8003d90:	2a02      	cmp	r2, #2
 8003d92:	d009      	beq.n	8003da8 <USBD_StdEPReq+0x7e>
 8003d94:	2a03      	cmp	r2, #3
 8003d96:	d1e1      	bne.n	8003d5c <USBD_StdEPReq+0x32>
 8003d98:	885b      	ldrh	r3, [r3, #2]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d1e8      	bne.n	8003d70 <USBD_StdEPReq+0x46>
 8003d9e:	064d      	lsls	r5, r1, #25
 8003da0:	d0f0      	beq.n	8003d84 <USBD_StdEPReq+0x5a>
 8003da2:	f002 fc47 	bl	8006634 <USBD_LL_ClearStallEP>
 8003da6:	e7ed      	b.n	8003d84 <USBD_StdEPReq+0x5a>
 8003da8:	064b      	lsls	r3, r1, #25
 8003daa:	d0d7      	beq.n	8003d5c <USBD_StdEPReq+0x32>
 8003dac:	f002 fc34 	bl	8006618 <USBD_LL_StallEP>
 8003db0:	2180      	movs	r1, #128	; 0x80
 8003db2:	4620      	mov	r0, r4
 8003db4:	f002 fc30 	bl	8006618 <USBD_LL_StallEP>
 8003db8:	e7da      	b.n	8003d70 <USBD_StdEPReq+0x46>
 8003dba:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8003dbe:	2b02      	cmp	r3, #2
 8003dc0:	d018      	beq.n	8003df4 <USBD_StdEPReq+0xca>
 8003dc2:	2b03      	cmp	r3, #3
 8003dc4:	d1ca      	bne.n	8003d5c <USBD_StdEPReq+0x32>
 8003dc6:	2314      	movs	r3, #20
 8003dc8:	f001 020f 	and.w	r2, r1, #15
 8003dcc:	f015 0f80 	tst.w	r5, #128	; 0x80
 8003dd0:	fb03 0202 	mla	r2, r3, r2, r0
 8003dd4:	d01f      	beq.n	8003e16 <USBD_StdEPReq+0xec>
 8003dd6:	6992      	ldr	r2, [r2, #24]
 8003dd8:	2a00      	cmp	r2, #0
 8003dda:	d0bf      	beq.n	8003d5c <USBD_StdEPReq+0x32>
 8003ddc:	f001 057f 	and.w	r5, r1, #127	; 0x7f
 8003de0:	fb05 3503 	mla	r5, r5, r3, r3
 8003de4:	4405      	add	r5, r0
 8003de6:	f011 037f 	ands.w	r3, r1, #127	; 0x7f
 8003dea:	d11f      	bne.n	8003e2c <USBD_StdEPReq+0x102>
 8003dec:	602b      	str	r3, [r5, #0]
 8003dee:	2202      	movs	r2, #2
 8003df0:	4629      	mov	r1, r5
 8003df2:	e00c      	b.n	8003e0e <USBD_StdEPReq+0xe4>
 8003df4:	064a      	lsls	r2, r1, #25
 8003df6:	d1b1      	bne.n	8003d5c <USBD_StdEPReq+0x32>
 8003df8:	062b      	lsls	r3, r5, #24
 8003dfa:	f04f 0300 	mov.w	r3, #0
 8003dfe:	f04f 0202 	mov.w	r2, #2
 8003e02:	bf4c      	ite	mi
 8003e04:	f100 0114 	addmi.w	r1, r0, #20
 8003e08:	f500 71aa 	addpl.w	r1, r0, #340	; 0x154
 8003e0c:	600b      	str	r3, [r1, #0]
 8003e0e:	4620      	mov	r0, r4
 8003e10:	f000 f84f 	bl	8003eb2 <USBD_CtlSendData>
 8003e14:	e7ac      	b.n	8003d70 <USBD_StdEPReq+0x46>
 8003e16:	f8d2 2158 	ldr.w	r2, [r2, #344]	; 0x158
 8003e1a:	2a00      	cmp	r2, #0
 8003e1c:	d09e      	beq.n	8003d5c <USBD_StdEPReq+0x32>
 8003e1e:	f001 057f 	and.w	r5, r1, #127	; 0x7f
 8003e22:	fb03 0505 	mla	r5, r3, r5, r0
 8003e26:	f505 75aa 	add.w	r5, r5, #340	; 0x154
 8003e2a:	e7dc      	b.n	8003de6 <USBD_StdEPReq+0xbc>
 8003e2c:	4620      	mov	r0, r4
 8003e2e:	f002 fc0f 	bl	8006650 <USBD_LL_IsStallEP>
 8003e32:	b108      	cbz	r0, 8003e38 <USBD_StdEPReq+0x10e>
 8003e34:	2301      	movs	r3, #1
 8003e36:	e7d9      	b.n	8003dec <USBD_StdEPReq+0xc2>
 8003e38:	6028      	str	r0, [r5, #0]
 8003e3a:	e7d8      	b.n	8003dee <USBD_StdEPReq+0xc4>

08003e3c <USBD_ParseSetupRequest>:
 8003e3c:	780b      	ldrb	r3, [r1, #0]
 8003e3e:	7003      	strb	r3, [r0, #0]
 8003e40:	784b      	ldrb	r3, [r1, #1]
 8003e42:	7043      	strb	r3, [r0, #1]
 8003e44:	78ca      	ldrb	r2, [r1, #3]
 8003e46:	788b      	ldrb	r3, [r1, #2]
 8003e48:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8003e4c:	8043      	strh	r3, [r0, #2]
 8003e4e:	794a      	ldrb	r2, [r1, #5]
 8003e50:	790b      	ldrb	r3, [r1, #4]
 8003e52:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8003e56:	8083      	strh	r3, [r0, #4]
 8003e58:	79ca      	ldrb	r2, [r1, #7]
 8003e5a:	798b      	ldrb	r3, [r1, #6]
 8003e5c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8003e60:	80c3      	strh	r3, [r0, #6]
 8003e62:	4770      	bx	lr

08003e64 <USBD_CtlError>:
 8003e64:	b510      	push	{r4, lr}
 8003e66:	4604      	mov	r4, r0
 8003e68:	2180      	movs	r1, #128	; 0x80
 8003e6a:	f002 fbd5 	bl	8006618 <USBD_LL_StallEP>
 8003e6e:	4620      	mov	r0, r4
 8003e70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e74:	2100      	movs	r1, #0
 8003e76:	f002 bbcf 	b.w	8006618 <USBD_LL_StallEP>

08003e7a <USBD_GetString>:
 8003e7a:	b530      	push	{r4, r5, lr}
 8003e7c:	b188      	cbz	r0, 8003ea2 <USBD_GetString+0x28>
 8003e7e:	4605      	mov	r5, r0
 8003e80:	1a2b      	subs	r3, r5, r0
 8003e82:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003e86:	b2db      	uxtb	r3, r3
 8003e88:	2c00      	cmp	r4, #0
 8003e8a:	d1f9      	bne.n	8003e80 <USBD_GetString+0x6>
 8003e8c:	3301      	adds	r3, #1
 8003e8e:	005b      	lsls	r3, r3, #1
 8003e90:	8013      	strh	r3, [r2, #0]
 8003e92:	700b      	strb	r3, [r1, #0]
 8003e94:	2303      	movs	r3, #3
 8003e96:	704b      	strb	r3, [r1, #1]
 8003e98:	2302      	movs	r3, #2
 8003e9a:	3801      	subs	r0, #1
 8003e9c:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8003ea0:	b905      	cbnz	r5, 8003ea4 <USBD_GetString+0x2a>
 8003ea2:	bd30      	pop	{r4, r5, pc}
 8003ea4:	1c5a      	adds	r2, r3, #1
 8003ea6:	54cd      	strb	r5, [r1, r3]
 8003ea8:	b2d2      	uxtb	r2, r2
 8003eaa:	3302      	adds	r3, #2
 8003eac:	b2db      	uxtb	r3, r3
 8003eae:	548c      	strb	r4, [r1, r2]
 8003eb0:	e7f4      	b.n	8003e9c <USBD_GetString+0x22>

08003eb2 <USBD_CtlSendData>:
 8003eb2:	4613      	mov	r3, r2
 8003eb4:	2202      	movs	r2, #2
 8003eb6:	b510      	push	{r4, lr}
 8003eb8:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
 8003ebc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8003ec0:	460a      	mov	r2, r1
 8003ec2:	2100      	movs	r1, #0
 8003ec4:	f002 fbe2 	bl	800668c <USBD_LL_Transmit>
 8003ec8:	2000      	movs	r0, #0
 8003eca:	bd10      	pop	{r4, pc}

08003ecc <USBD_CtlContinueSendData>:
 8003ecc:	b508      	push	{r3, lr}
 8003ece:	4613      	mov	r3, r2
 8003ed0:	460a      	mov	r2, r1
 8003ed2:	2100      	movs	r1, #0
 8003ed4:	f002 fbda 	bl	800668c <USBD_LL_Transmit>
 8003ed8:	2000      	movs	r0, #0
 8003eda:	bd08      	pop	{r3, pc}

08003edc <USBD_CtlPrepareRx>:
 8003edc:	4613      	mov	r3, r2
 8003ede:	2203      	movs	r2, #3
 8003ee0:	b510      	push	{r4, lr}
 8003ee2:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
 8003ee6:	f8c0 315c 	str.w	r3, [r0, #348]	; 0x15c
 8003eea:	460a      	mov	r2, r1
 8003eec:	f8c0 3160 	str.w	r3, [r0, #352]	; 0x160
 8003ef0:	2100      	movs	r1, #0
 8003ef2:	f002 fbd9 	bl	80066a8 <USBD_LL_PrepareReceive>
 8003ef6:	2000      	movs	r0, #0
 8003ef8:	bd10      	pop	{r4, pc}

08003efa <USBD_CtlContinueRx>:
 8003efa:	b508      	push	{r3, lr}
 8003efc:	4613      	mov	r3, r2
 8003efe:	460a      	mov	r2, r1
 8003f00:	2100      	movs	r1, #0
 8003f02:	f002 fbd1 	bl	80066a8 <USBD_LL_PrepareReceive>
 8003f06:	2000      	movs	r0, #0
 8003f08:	bd08      	pop	{r3, pc}

08003f0a <USBD_CtlSendStatus>:
 8003f0a:	b508      	push	{r3, lr}
 8003f0c:	2304      	movs	r3, #4
 8003f0e:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
 8003f12:	2300      	movs	r3, #0
 8003f14:	461a      	mov	r2, r3
 8003f16:	4619      	mov	r1, r3
 8003f18:	f002 fbb8 	bl	800668c <USBD_LL_Transmit>
 8003f1c:	2000      	movs	r0, #0
 8003f1e:	bd08      	pop	{r3, pc}

08003f20 <USBD_CtlReceiveStatus>:
 8003f20:	b508      	push	{r3, lr}
 8003f22:	2305      	movs	r3, #5
 8003f24:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
 8003f28:	2300      	movs	r3, #0
 8003f2a:	461a      	mov	r2, r3
 8003f2c:	4619      	mov	r1, r3
 8003f2e:	f002 fbbb 	bl	80066a8 <USBD_LL_PrepareReceive>
 8003f32:	2000      	movs	r0, #0
 8003f34:	bd08      	pop	{r3, pc}
	...

08003f38 <get_addr>:
}

uint32_t get_addr(void)
{
	return reg_addr;
}
 8003f38:	4b01      	ldr	r3, [pc, #4]	; (8003f40 <get_addr+0x8>)
 8003f3a:	6818      	ldr	r0, [r3, #0]
 8003f3c:	4770      	bx	lr
 8003f3e:	bf00      	nop
 8003f40:	200003f8 	.word	0x200003f8

08003f44 <get_mode>:

dmxmode_t get_mode(void)
{
	return dmx_mode;
}
 8003f44:	4b01      	ldr	r3, [pc, #4]	; (8003f4c <get_mode+0x8>)
 8003f46:	7818      	ldrb	r0, [r3, #0]
 8003f48:	4770      	bx	lr
 8003f4a:	bf00      	nop
 8003f4c:	200003f5 	.word	0x200003f5

08003f50 <get_reg_length>:
}

uint32_t get_reg_length(void)
{
	return reg_len;
}
 8003f50:	4b01      	ldr	r3, [pc, #4]	; (8003f58 <get_reg_length+0x8>)
 8003f52:	6818      	ldr	r0, [r3, #0]
 8003f54:	4770      	bx	lr
 8003f56:	bf00      	nop
 8003f58:	20000400 	.word	0x20000400

08003f5c <init_regs>:

void init_regs(void)
{
 8003f5c:	b510      	push	{r4, lr}
	//allocate memory
	if (reg_data != NULL)
 8003f5e:	4c06      	ldr	r4, [pc, #24]	; (8003f78 <init_regs+0x1c>)
 8003f60:	6820      	ldr	r0, [r4, #0]
 8003f62:	b108      	cbz	r0, 8003f68 <init_regs+0xc>
		free(reg_data);
 8003f64:	f002 ff56 	bl	8006e14 <free>

	reg_data = calloc(reg_len, sizeof(uint8_t));
 8003f68:	4b04      	ldr	r3, [pc, #16]	; (8003f7c <init_regs+0x20>)
 8003f6a:	2101      	movs	r1, #1
 8003f6c:	6818      	ldr	r0, [r3, #0]
 8003f6e:	f002 ff17 	bl	8006da0 <calloc>
 8003f72:	6020      	str	r0, [r4, #0]
}
 8003f74:	bd10      	pop	{r4, pc}
 8003f76:	bf00      	nop
 8003f78:	200003fc 	.word	0x200003fc
 8003f7c:	20000400 	.word	0x20000400

08003f80 <dmx512_init>:
	if ((mode & 0x01) != 0)
 8003f80:	f010 0f01 	tst.w	r0, #1
		dmx_mode = DMX_MODE2;
 8003f84:	bf18      	it	ne
 8003f86:	2201      	movne	r2, #1
	reg_addr = addr;
 8003f88:	4b06      	ldr	r3, [pc, #24]	; (8003fa4 <dmx512_init+0x24>)
 8003f8a:	6019      	str	r1, [r3, #0]
 8003f8c:	4b06      	ldr	r3, [pc, #24]	; (8003fa8 <dmx512_init+0x28>)
		dmx_mode = DMX_MODE2;
 8003f8e:	bf18      	it	ne
 8003f90:	701a      	strbne	r2, [r3, #0]
	switch (dmx_mode)
 8003f92:	781b      	ldrb	r3, [r3, #0]
 8003f94:	2b01      	cmp	r3, #1
	reg_len = len;
 8003f96:	bf14      	ite	ne
 8003f98:	220b      	movne	r2, #11
 8003f9a:	221a      	moveq	r2, #26
 8003f9c:	4b03      	ldr	r3, [pc, #12]	; (8003fac <dmx512_init+0x2c>)
 8003f9e:	601a      	str	r2, [r3, #0]
	init_regs();
 8003fa0:	f7ff bfdc 	b.w	8003f5c <init_regs>
 8003fa4:	200003f8 	.word	0x200003f8
 8003fa8:	200003f5 	.word	0x200003f5
 8003fac:	20000400 	.word	0x20000400

08003fb0 <set_reg>:

void set_reg(uint32_t reg, uint8_t val)
{
	if ((reg_data != NULL) && (reg<reg_len))
 8003fb0:	4b04      	ldr	r3, [pc, #16]	; (8003fc4 <set_reg+0x14>)
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	b123      	cbz	r3, 8003fc0 <set_reg+0x10>
 8003fb6:	4a04      	ldr	r2, [pc, #16]	; (8003fc8 <set_reg+0x18>)
 8003fb8:	6812      	ldr	r2, [r2, #0]
 8003fba:	4282      	cmp	r2, r0
	{
		reg_data[reg] = val;
 8003fbc:	bf88      	it	hi
 8003fbe:	5419      	strbhi	r1, [r3, r0]
	}
}
 8003fc0:	4770      	bx	lr
 8003fc2:	bf00      	nop
 8003fc4:	200003fc 	.word	0x200003fc
 8003fc8:	20000400 	.word	0x20000400

08003fcc <get_reg>:

uint8_t get_reg(uint32_t reg)
{
	if ((reg_data != NULL) && (reg<reg_len))
 8003fcc:	4b05      	ldr	r3, [pc, #20]	; (8003fe4 <get_reg+0x18>)
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	b12b      	cbz	r3, 8003fde <get_reg+0x12>
 8003fd2:	4a05      	ldr	r2, [pc, #20]	; (8003fe8 <get_reg+0x1c>)
 8003fd4:	6812      	ldr	r2, [r2, #0]
 8003fd6:	4282      	cmp	r2, r0
 8003fd8:	d901      	bls.n	8003fde <get_reg+0x12>
	{
		return reg_data[reg];
 8003fda:	5c18      	ldrb	r0, [r3, r0]
 8003fdc:	4770      	bx	lr
	}
	else
	{
		return 0;
 8003fde:	2000      	movs	r0, #0
	}
}
 8003fe0:	4770      	bx	lr
 8003fe2:	bf00      	nop
 8003fe4:	200003fc 	.word	0x200003fc
 8003fe8:	20000400 	.word	0x20000400

08003fec <get_reg_name>:
}


const char* get_reg_name(uint32_t reg)
{
	if (reg<reg_len)
 8003fec:	4b04      	ldr	r3, [pc, #16]	; (8004000 <get_reg_name+0x14>)
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	4283      	cmp	r3, r0
		return regnames[reg];
 8003ff2:	bf86      	itte	hi
 8003ff4:	4b03      	ldrhi	r3, [pc, #12]	; (8004004 <get_reg_name+0x18>)
 8003ff6:	f853 0020 	ldrhi.w	r0, [r3, r0, lsl #2]
	else
		return 0;
 8003ffa:	2000      	movls	r0, #0
}
 8003ffc:	4770      	bx	lr
 8003ffe:	bf00      	nop
 8004000:	20000400 	.word	0x20000400
 8004004:	20000118 	.word	0x20000118

08004008 <USART1_IRQHandler>:
 8004008:	4b09      	ldr	r3, [pc, #36]	; (8004030 <USART1_IRQHandler+0x28>)
 800400a:	b082      	sub	sp, #8
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	681a      	ldr	r2, [r3, #0]
 8004010:	0792      	lsls	r2, r2, #30
 8004012:	d509      	bpl.n	8004028 <USART1_IRQHandler+0x20>
 8004014:	2200      	movs	r2, #0
 8004016:	9201      	str	r2, [sp, #4]
 8004018:	681a      	ldr	r2, [r3, #0]
 800401a:	9201      	str	r2, [sp, #4]
 800401c:	2201      	movs	r2, #1
 800401e:	685b      	ldr	r3, [r3, #4]
 8004020:	9301      	str	r3, [sp, #4]
 8004022:	9b01      	ldr	r3, [sp, #4]
 8004024:	4b03      	ldr	r3, [pc, #12]	; (8004034 <USART1_IRQHandler+0x2c>)
 8004026:	701a      	strb	r2, [r3, #0]
 8004028:	4801      	ldr	r0, [pc, #4]	; (8004030 <USART1_IRQHandler+0x28>)
 800402a:	b002      	add	sp, #8
 800402c:	f7fe bdf0 	b.w	8002c10 <HAL_UART_IRQHandler>
 8004030:	20000c10 	.word	0x20000c10
 8004034:	20000410 	.word	0x20000410

08004038 <USART3_IRQHandler>:
 8004038:	4801      	ldr	r0, [pc, #4]	; (8004040 <USART3_IRQHandler+0x8>)
 800403a:	f7fe bde9 	b.w	8002c10 <HAL_UART_IRQHandler>
 800403e:	bf00      	nop
 8004040:	20000b2c 	.word	0x20000b2c

08004044 <HAL_UART_RxCpltCallback>:
 8004044:	6803      	ldr	r3, [r0, #0]
 8004046:	4a34      	ldr	r2, [pc, #208]	; (8004118 <HAL_UART_RxCpltCallback+0xd4>)
 8004048:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800404a:	4293      	cmp	r3, r2
 800404c:	d156      	bne.n	80040fc <HAL_UART_RxCpltCallback+0xb8>
 800404e:	4b33      	ldr	r3, [pc, #204]	; (800411c <HAL_UART_RxCpltCallback+0xd8>)
 8004050:	4d33      	ldr	r5, [pc, #204]	; (8004120 <HAL_UART_RxCpltCallback+0xdc>)
 8004052:	781b      	ldrb	r3, [r3, #0]
 8004054:	4c33      	ldr	r4, [pc, #204]	; (8004124 <HAL_UART_RxCpltCallback+0xe0>)
 8004056:	f88d 3007 	strb.w	r3, [sp, #7]
 800405a:	782b      	ldrb	r3, [r5, #0]
 800405c:	b36b      	cbz	r3, 80040ba <HAL_UART_RxCpltCallback+0x76>
 800405e:	4a32      	ldr	r2, [pc, #200]	; (8004128 <HAL_UART_RxCpltCallback+0xe4>)
 8004060:	7813      	ldrb	r3, [r2, #0]
 8004062:	3301      	adds	r3, #1
 8004064:	b2db      	uxtb	r3, r3
 8004066:	7013      	strb	r3, [r2, #0]
 8004068:	7813      	ldrb	r3, [r2, #0]
 800406a:	2b2c      	cmp	r3, #44	; 0x2c
 800406c:	d10d      	bne.n	800408a <HAL_UART_RxCpltCallback+0x46>
 800406e:	2300      	movs	r3, #0
 8004070:	7013      	strb	r3, [r2, #0]
 8004072:	4a2e      	ldr	r2, [pc, #184]	; (800412c <HAL_UART_RxCpltCallback+0xe8>)
 8004074:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004078:	7813      	ldrb	r3, [r2, #0]
 800407a:	482d      	ldr	r0, [pc, #180]	; (8004130 <HAL_UART_RxCpltCallback+0xec>)
 800407c:	fab3 f383 	clz	r3, r3
 8004080:	095b      	lsrs	r3, r3, #5
 8004082:	7013      	strb	r3, [r2, #0]
 8004084:	7812      	ldrb	r2, [r2, #0]
 8004086:	f7fd f937 	bl	80012f8 <HAL_GPIO_WritePin>
 800408a:	2300      	movs	r3, #0
 800408c:	4929      	ldr	r1, [pc, #164]	; (8004134 <HAL_UART_RxCpltCallback+0xf0>)
 800408e:	700b      	strb	r3, [r1, #0]
 8004090:	8023      	strh	r3, [r4, #0]
 8004092:	702b      	strb	r3, [r5, #0]
 8004094:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004098:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800409c:	b15a      	cbz	r2, 80040b6 <HAL_UART_RxCpltCallback+0x72>
 800409e:	2b17      	cmp	r3, #23
 80040a0:	f04f 0201 	mov.w	r2, #1
 80040a4:	d027      	beq.n	80040f6 <HAL_UART_RxCpltCallback+0xb2>
 80040a6:	700a      	strb	r2, [r1, #0]
 80040a8:	491c      	ldr	r1, [pc, #112]	; (800411c <HAL_UART_RxCpltCallback+0xd8>)
 80040aa:	4823      	ldr	r0, [pc, #140]	; (8004138 <HAL_UART_RxCpltCallback+0xf4>)
 80040ac:	b002      	add	sp, #8
 80040ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80040b2:	f7fe bd48 	b.w	8002b46 <HAL_UART_Receive_IT>
 80040b6:	4a21      	ldr	r2, [pc, #132]	; (800413c <HAL_UART_RxCpltCallback+0xf8>)
 80040b8:	7013      	strb	r3, [r2, #0]
 80040ba:	4b20      	ldr	r3, [pc, #128]	; (800413c <HAL_UART_RxCpltCallback+0xf8>)
 80040bc:	781b      	ldrb	r3, [r3, #0]
 80040be:	b9a3      	cbnz	r3, 80040ea <HAL_UART_RxCpltCallback+0xa6>
 80040c0:	4d1f      	ldr	r5, [pc, #124]	; (8004140 <HAL_UART_RxCpltCallback+0xfc>)
 80040c2:	8823      	ldrh	r3, [r4, #0]
 80040c4:	682a      	ldr	r2, [r5, #0]
 80040c6:	429a      	cmp	r2, r3
 80040c8:	d80f      	bhi.n	80040ea <HAL_UART_RxCpltCallback+0xa6>
 80040ca:	8826      	ldrh	r6, [r4, #0]
 80040cc:	f7ff ff40 	bl	8003f50 <get_reg_length>
 80040d0:	682b      	ldr	r3, [r5, #0]
 80040d2:	b2b6      	uxth	r6, r6
 80040d4:	4418      	add	r0, r3
 80040d6:	4286      	cmp	r6, r0
 80040d8:	d207      	bcs.n	80040ea <HAL_UART_RxCpltCallback+0xa6>
 80040da:	8820      	ldrh	r0, [r4, #0]
 80040dc:	682b      	ldr	r3, [r5, #0]
 80040de:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80040e2:	1ac0      	subs	r0, r0, r3
 80040e4:	3801      	subs	r0, #1
 80040e6:	f7ff ff63 	bl	8003fb0 <set_reg>
 80040ea:	8823      	ldrh	r3, [r4, #0]
 80040ec:	2201      	movs	r2, #1
 80040ee:	3301      	adds	r3, #1
 80040f0:	b29b      	uxth	r3, r3
 80040f2:	8023      	strh	r3, [r4, #0]
 80040f4:	e7d8      	b.n	80040a8 <HAL_UART_RxCpltCallback+0x64>
 80040f6:	4b11      	ldr	r3, [pc, #68]	; (800413c <HAL_UART_RxCpltCallback+0xf8>)
 80040f8:	701a      	strb	r2, [r3, #0]
 80040fa:	e7de      	b.n	80040ba <HAL_UART_RxCpltCallback+0x76>
 80040fc:	4a11      	ldr	r2, [pc, #68]	; (8004144 <HAL_UART_RxCpltCallback+0x100>)
 80040fe:	4293      	cmp	r3, r2
 8004100:	d108      	bne.n	8004114 <HAL_UART_RxCpltCallback+0xd0>
 8004102:	2201      	movs	r2, #1
 8004104:	4910      	ldr	r1, [pc, #64]	; (8004148 <HAL_UART_RxCpltCallback+0x104>)
 8004106:	4811      	ldr	r0, [pc, #68]	; (800414c <HAL_UART_RxCpltCallback+0x108>)
 8004108:	f000 ff8e 	bl	8005028 <ring_buffer_put>
 800410c:	2201      	movs	r2, #1
 800410e:	490e      	ldr	r1, [pc, #56]	; (8004148 <HAL_UART_RxCpltCallback+0x104>)
 8004110:	480f      	ldr	r0, [pc, #60]	; (8004150 <HAL_UART_RxCpltCallback+0x10c>)
 8004112:	e7cb      	b.n	80040ac <HAL_UART_RxCpltCallback+0x68>
 8004114:	b002      	add	sp, #8
 8004116:	bd70      	pop	{r4, r5, r6, pc}
 8004118:	40013800 	.word	0x40013800
 800411c:	20000404 	.word	0x20000404
 8004120:	20000410 	.word	0x20000410
 8004124:	20000406 	.word	0x20000406
 8004128:	20000409 	.word	0x20000409
 800412c:	20000408 	.word	0x20000408
 8004130:	40011000 	.word	0x40011000
 8004134:	20000180 	.word	0x20000180
 8004138:	20000c10 	.word	0x20000c10
 800413c:	2000040a 	.word	0x2000040a
 8004140:	2000040c 	.word	0x2000040c
 8004144:	40004800 	.word	0x40004800
 8004148:	20000405 	.word	0x20000405
 800414c:	20000b14 	.word	0x20000b14
 8004150:	20000b2c 	.word	0x20000b2c

08004154 <dmx512_setRx>:
 8004154:	b508      	push	{r3, lr}
 8004156:	4805      	ldr	r0, [pc, #20]	; (800416c <dmx512_setRx+0x18>)
 8004158:	2200      	movs	r2, #0
 800415a:	2180      	movs	r1, #128	; 0x80
 800415c:	f7fd f8cc 	bl	80012f8 <HAL_GPIO_WritePin>
 8004160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004164:	4802      	ldr	r0, [pc, #8]	; (8004170 <dmx512_setRx+0x1c>)
 8004166:	f7fe bdfb 	b.w	8002d60 <HAL_HalfDuplex_EnableReceiver>
 800416a:	bf00      	nop
 800416c:	40010c00 	.word	0x40010c00
 8004170:	20000c10 	.word	0x20000c10

08004174 <dmx512_rec_enable.part.0>:
 8004174:	b508      	push	{r3, lr}
 8004176:	f7ff fedf 	bl	8003f38 <get_addr>
 800417a:	4b05      	ldr	r3, [pc, #20]	; (8004190 <dmx512_rec_enable.part.0+0x1c>)
 800417c:	6018      	str	r0, [r3, #0]
 800417e:	f7ff ffe9 	bl	8004154 <dmx512_setRx>
 8004182:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004186:	2201      	movs	r2, #1
 8004188:	4902      	ldr	r1, [pc, #8]	; (8004194 <dmx512_rec_enable.part.0+0x20>)
 800418a:	4803      	ldr	r0, [pc, #12]	; (8004198 <dmx512_rec_enable.part.0+0x24>)
 800418c:	f7fe bcdb 	b.w	8002b46 <HAL_UART_Receive_IT>
 8004190:	2000040c 	.word	0x2000040c
 8004194:	20000404 	.word	0x20000404
 8004198:	20000c10 	.word	0x20000c10

0800419c <dmx512_rec_init>:
 800419c:	b508      	push	{r3, lr}
 800419e:	f7ff ffe9 	bl	8004174 <dmx512_rec_enable.part.0>
 80041a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80041a6:	2201      	movs	r2, #1
 80041a8:	4901      	ldr	r1, [pc, #4]	; (80041b0 <dmx512_rec_init+0x14>)
 80041aa:	4802      	ldr	r0, [pc, #8]	; (80041b4 <dmx512_rec_init+0x18>)
 80041ac:	f7fe bccb 	b.w	8002b46 <HAL_UART_Receive_IT>
 80041b0:	20000405 	.word	0x20000405
 80041b4:	20000b2c 	.word	0x20000b2c

080041b8 <EE_LL_Format>:
 80041b8:	b530      	push	{r4, r5, lr}
 80041ba:	4604      	mov	r4, r0
 80041bc:	02a4      	lsls	r4, r4, #10
 80041be:	b087      	sub	sp, #28
 80041c0:	f044 6400 	orr.w	r4, r4, #134217728	; 0x8000000
 80041c4:	460d      	mov	r5, r1
 80041c6:	f7fc feab 	bl	8000f20 <HAL_FLASH_Unlock>
 80041ca:	2301      	movs	r3, #1
 80041cc:	9404      	str	r4, [sp, #16]
 80041ce:	2400      	movs	r4, #0
 80041d0:	a901      	add	r1, sp, #4
 80041d2:	a802      	add	r0, sp, #8
 80041d4:	9505      	str	r5, [sp, #20]
 80041d6:	9303      	str	r3, [sp, #12]
 80041d8:	9402      	str	r4, [sp, #8]
 80041da:	f7fc ff5b 	bl	8001094 <HAL_FLASHEx_Erase>
 80041de:	b938      	cbnz	r0, 80041f0 <EE_LL_Format+0x38>
 80041e0:	f7fc feb0 	bl	8000f44 <HAL_FLASH_Lock>
 80041e4:	9801      	ldr	r0, [sp, #4]
 80041e6:	1c43      	adds	r3, r0, #1
 80041e8:	4258      	negs	r0, r3
 80041ea:	4158      	adcs	r0, r3
 80041ec:	b007      	add	sp, #28
 80041ee:	bd30      	pop	{r4, r5, pc}
 80041f0:	f7fc fea8 	bl	8000f44 <HAL_FLASH_Lock>
 80041f4:	4620      	mov	r0, r4
 80041f6:	e7f9      	b.n	80041ec <EE_LL_Format+0x34>

080041f8 <EE_Format>:
 80041f8:	2101      	movs	r1, #1
 80041fa:	207f      	movs	r0, #127	; 0x7f
 80041fc:	f7ff bfdc 	b.w	80041b8 <EE_LL_Format>

08004200 <EE_Reads>:
 8004200:	4401      	add	r1, r0
 8004202:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8004206:	dd0b      	ble.n	8004220 <EE_Reads+0x20>
 8004208:	2000      	movs	r0, #0
 800420a:	4770      	bx	lr
 800420c:	0083      	lsls	r3, r0, #2
 800420e:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8004212:	f503 33fe 	add.w	r3, r3, #130048	; 0x1fc00
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	3001      	adds	r0, #1
 800421a:	f842 3b04 	str.w	r3, [r2], #4
 800421e:	b280      	uxth	r0, r0
 8004220:	4281      	cmp	r1, r0
 8004222:	dcf3      	bgt.n	800420c <EE_Reads+0xc>
 8004224:	2001      	movs	r0, #1
 8004226:	4770      	bx	lr

08004228 <EE_Writes>:
 8004228:	4401      	add	r1, r0
 800422a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800422e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004230:	4616      	mov	r6, r2
 8004232:	dd02      	ble.n	800423a <EE_Writes+0x12>
 8004234:	2400      	movs	r4, #0
 8004236:	4620      	mov	r0, r4
 8004238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800423a:	f7ff ffdd 	bl	80041f8 <EE_Format>
 800423e:	4604      	mov	r4, r0
 8004240:	2800      	cmp	r0, #0
 8004242:	d0f7      	beq.n	8004234 <EE_Writes+0xc>
 8004244:	f7fc fe6c 	bl	8000f20 <HAL_FLASH_Unlock>
 8004248:	4d09      	ldr	r5, [pc, #36]	; (8004270 <EE_Writes+0x48>)
 800424a:	4f0a      	ldr	r7, [pc, #40]	; (8004274 <EE_Writes+0x4c>)
 800424c:	3e04      	subs	r6, #4
 800424e:	f856 2f04 	ldr.w	r2, [r6, #4]!
 8004252:	2300      	movs	r3, #0
 8004254:	4629      	mov	r1, r5
 8004256:	2002      	movs	r0, #2
 8004258:	f7fc fea8 	bl	8000fac <HAL_FLASH_Program>
 800425c:	b110      	cbz	r0, 8004264 <EE_Writes+0x3c>
 800425e:	f7fc fe71 	bl	8000f44 <HAL_FLASH_Lock>
 8004262:	e7e7      	b.n	8004234 <EE_Writes+0xc>
 8004264:	3504      	adds	r5, #4
 8004266:	42bd      	cmp	r5, r7
 8004268:	d1f1      	bne.n	800424e <EE_Writes+0x26>
 800426a:	f7fc fe6b 	bl	8000f44 <HAL_FLASH_Lock>
 800426e:	e7e2      	b.n	8004236 <EE_Writes+0xe>
 8004270:	0801fc00 	.word	0x0801fc00
 8004274:	08020000 	.word	0x08020000

08004278 <init_fx_list>:
const s_fx_param* pfx_list[MAX_FX];
static const s_fx_param param = {PWM_FX,MODE_CONTINOUS,0,"NULL",0,NULL};

//Point all pointers to the same "empty" FX
void init_fx_list(void)
{
 8004278:	2300      	movs	r3, #0
	uint8_t cnt = 0;
	for(cnt = 0;cnt < MAX_FX;cnt++)
		pfx_list[cnt] = &param;
 800427a:	4a04      	ldr	r2, [pc, #16]	; (800428c <init_fx_list+0x14>)
 800427c:	4904      	ldr	r1, [pc, #16]	; (8004290 <init_fx_list+0x18>)
 800427e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8004282:	3301      	adds	r3, #1
	for(cnt = 0;cnt < MAX_FX;cnt++)
 8004284:	2b40      	cmp	r3, #64	; 0x40
 8004286:	d1fa      	bne.n	800427e <init_fx_list+0x6>
}
 8004288:	4770      	bx	lr
 800428a:	bf00      	nop
 800428c:	20000970 	.word	0x20000970
 8004290:	08007a6c 	.word	0x08007a6c

08004294 <register_fx>:

uint8_t register_fx(const s_fx_param* pfx_param, uint8_t fx_num)
{
 8004294:	b510      	push	{r4, lr}
 8004296:	4a0e      	ldr	r2, [pc, #56]	; (80042d0 <register_fx+0x3c>)
	uint8_t fx_cnt = 1;
	//If FX = 0 we find the first empty slot and install it there
	if (fx_num == 0)
 8004298:	b9c1      	cbnz	r1, 80042cc <register_fx+0x38>
 800429a:	2301      	movs	r3, #1
	{
		while ((pfx_list[fx_cnt]->fx_run_pointer != NULL) && (fx_cnt < MAX_FX-1))
 800429c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80042a0:	b2dc      	uxtb	r4, r3
 80042a2:	6909      	ldr	r1, [r1, #16]
 80042a4:	b141      	cbz	r1, 80042b8 <register_fx+0x24>
 80042a6:	3301      	adds	r3, #1
 80042a8:	2b40      	cmp	r3, #64	; 0x40
 80042aa:	d1f7      	bne.n	800429c <register_fx+0x8>
		}

		//No slots available
		if (fx_cnt == MAX_FX-1)
		{
			print("FX Space full");
 80042ac:	4809      	ldr	r0, [pc, #36]	; (80042d4 <register_fx+0x40>)
 80042ae:	f001 fa3b 	bl	8005728 <print>
			return 0;
 80042b2:	2400      	movs	r4, #0
	}

	pfx_list[fx_num] = pfx_param;
	print("ID:%d\t FX: %s",fx_num,pfx_param->fxname);
	return fx_num;
}
 80042b4:	4620      	mov	r0, r4
 80042b6:	bd10      	pop	{r4, pc}
		if (fx_cnt == MAX_FX-1)
 80042b8:	2c3f      	cmp	r4, #63	; 0x3f
 80042ba:	d0f7      	beq.n	80042ac <register_fx+0x18>
	pfx_list[fx_num] = pfx_param;
 80042bc:	f842 0024 	str.w	r0, [r2, r4, lsl #2]
	print("ID:%d\t FX: %s",fx_num,pfx_param->fxname);
 80042c0:	4621      	mov	r1, r4
 80042c2:	1cc2      	adds	r2, r0, #3
 80042c4:	4804      	ldr	r0, [pc, #16]	; (80042d8 <register_fx+0x44>)
 80042c6:	f001 fa2f 	bl	8005728 <print>
	return fx_num;
 80042ca:	e7f3      	b.n	80042b4 <register_fx+0x20>
 80042cc:	460c      	mov	r4, r1
 80042ce:	e7f5      	b.n	80042bc <register_fx+0x28>
 80042d0:	20000970 	.word	0x20000970
 80042d4:	08007a80 	.word	0x08007a80
 80042d8:	08007a8e 	.word	0x08007a8e

080042dc <fx_install>:
#include "fx_pwm_running_light.h"
#include "fx_pwm_pulsing_light.h"
#include "fx_strip_running_light.h"

void fx_install(void)
{
 80042dc:	b508      	push	{r3, lr}
	//REGISTER FX HERE !!!
    fx_pwm_running_light(0);
 80042de:	2000      	movs	r0, #0
 80042e0:	f002 fb72 	bl	80069c8 <fx_pwm_running_light>
    fx_pwm_running_pulse_light(0);
 80042e4:	2000      	movs	r0, #0
 80042e6:	f002 fb75 	bl	80069d4 <fx_pwm_running_pulse_light>
    fx_pwm_pulsing_light(0);
 80042ea:	2000      	movs	r0, #0
 80042ec:	f002 fb00 	bl	80068f0 <fx_pwm_pulsing_light>
    fx_pwm_pulsing_pulse_light(0);
 80042f0:	2000      	movs	r0, #0
 80042f2:	f002 fb03 	bl	80068fc <fx_pwm_pulsing_pulse_light>
    fx_strip_running_light(0);
}
 80042f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    fx_strip_running_light(0);
 80042fa:	2000      	movs	r0, #0
 80042fc:	f002 bc04 	b.w	8006b08 <fx_strip_running_light>

08004300 <install_fx>:
extern const s_fx_param* pfx_list[MAX_FX];
extern uint8_t fxcnt;

void install_fx(void)
{
	fx_install();
 8004300:	f7ff bfec 	b.w	80042dc <fx_install>

08004304 <start_fx>:
}


//Called to start a new effect. Return the effect that was actually enabled
uint8_t start_fx(uint8_t id)
{
 8004304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	//Check if FX is installed (We assume at future calls to the routine that the pointer is valid...
	if (NULL != pfx_list[current_fx]->fx_run_pointer)
 8004308:	4c15      	ldr	r4, [pc, #84]	; (8004360 <start_fx+0x5c>)
 800430a:	4d16      	ldr	r5, [pc, #88]	; (8004364 <start_fx+0x60>)
 800430c:	7823      	ldrb	r3, [r4, #0]
{
 800430e:	4680      	mov	r8, r0
	if (NULL != pfx_list[current_fx]->fx_run_pointer)
 8004310:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
 8004314:	690b      	ldr	r3, [r1, #16]
 8004316:	b303      	cbz	r3, 800435a <start_fx+0x56>
	{
		//Call the last FX once with the END State
		if (current_fx_state != FX_DONE)
 8004318:	4e13      	ldr	r6, [pc, #76]	; (8004368 <start_fx+0x64>)
 800431a:	7832      	ldrb	r2, [r6, #0]
 800431c:	2a03      	cmp	r2, #3
 800431e:	d005      	beq.n	800432c <start_fx+0x28>
		{
			pfx_list[current_fx]->fx_run_pointer(FX_END,pfx_list[current_fx]->duration,0);
 8004320:	2200      	movs	r2, #0
 8004322:	68c9      	ldr	r1, [r1, #12]
 8004324:	2002      	movs	r0, #2
 8004326:	4798      	blx	r3
			current_fx_state = FX_DONE;
 8004328:	2303      	movs	r3, #3
 800432a:	7033      	strb	r3, [r6, #0]
		}
		//ID is valid, setup parameters
		fx_frame_count = 0;
 800432c:	2700      	movs	r7, #0
 800432e:	4b0f      	ldr	r3, [pc, #60]	; (800436c <start_fx+0x68>)

		//Store current_fx
		last_fx = current_fx;
 8004330:	7822      	ldrb	r2, [r4, #0]
		fx_frame_count = 0;
 8004332:	601f      	str	r7, [r3, #0]
		last_fx = current_fx;
 8004334:	4b0e      	ldr	r3, [pc, #56]	; (8004370 <start_fx+0x6c>)
		current_fx = id;
 8004336:	f884 8000 	strb.w	r8, [r4]
		last_fx = current_fx;
 800433a:	701a      	strb	r2, [r3, #0]

		//Call run routine once with INIT state
		pfx_list[current_fx]->fx_run_pointer(FX_INIT,0,pfx_list[current_fx]->duration);
 800433c:	f855 3028 	ldr.w	r3, [r5, r8, lsl #2]
 8004340:	4639      	mov	r1, r7
 8004342:	e9d3 2803 	ldrd	r2, r8, [r3, #12]
 8004346:	4638      	mov	r0, r7
 8004348:	47c0      	blx	r8
		current_fx_state = FX_INIT;
		print("Started FX ID:%d\t FX: %s ",current_fx,pfx_list[current_fx]->fxname);
 800434a:	7821      	ldrb	r1, [r4, #0]
 800434c:	4809      	ldr	r0, [pc, #36]	; (8004374 <start_fx+0x70>)
 800434e:	f855 2021 	ldr.w	r2, [r5, r1, lsl #2]
		current_fx_state = FX_INIT;
 8004352:	7037      	strb	r7, [r6, #0]
		print("Started FX ID:%d\t FX: %s ",current_fx,pfx_list[current_fx]->fxname);
 8004354:	3203      	adds	r2, #3
 8004356:	f001 f9e7 	bl	8005728 <print>
	}
	//return new ID
	return current_fx;
}
 800435a:	7820      	ldrb	r0, [r4, #0]
 800435c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004360:	20000411 	.word	0x20000411
 8004364:	20000970 	.word	0x20000970
 8004368:	20000412 	.word	0x20000412
 800436c:	20000414 	.word	0x20000414
 8004370:	20000418 	.word	0x20000418
 8004374:	08007ab8 	.word	0x08007ab8

08004378 <fx_done>:


void fx_done(void)
{
 8004378:	b570      	push	{r4, r5, r6, lr}
	pfx_list[current_fx]->fx_run_pointer(FX_END,pfx_list[current_fx]->duration,0);
 800437a:	4d10      	ldr	r5, [pc, #64]	; (80043bc <fx_done+0x44>)
 800437c:	4c10      	ldr	r4, [pc, #64]	; (80043c0 <fx_done+0x48>)
 800437e:	782b      	ldrb	r3, [r5, #0]
 8004380:	2200      	movs	r2, #0
 8004382:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8004386:	2002      	movs	r0, #2
 8004388:	68d9      	ldr	r1, [r3, #12]
 800438a:	691e      	ldr	r6, [r3, #16]
 800438c:	47b0      	blx	r6
	print("Completed FX ID:%d\t FX: %s ",current_fx,pfx_list[current_fx]->fxname);
 800438e:	7829      	ldrb	r1, [r5, #0]
 8004390:	480c      	ldr	r0, [pc, #48]	; (80043c4 <fx_done+0x4c>)
 8004392:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
 8004396:	3203      	adds	r2, #3
 8004398:	f001 f9c6 	bl	8005728 <print>
	current_fx_state = FX_DONE;
 800439c:	2203      	movs	r2, #3
 800439e:	4b0a      	ldr	r3, [pc, #40]	; (80043c8 <fx_done+0x50>)
 80043a0:	701a      	strb	r2, [r3, #0]
	if (pfx_list[current_fx]->next_fx != 0)
 80043a2:	782b      	ldrb	r3, [r5, #0]
 80043a4:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80043a8:	7898      	ldrb	r0, [r3, #2]
 80043aa:	b118      	cbz	r0, 80043b4 <fx_done+0x3c>
	{
		//Go back to last FX
		start_fx(last_fx);
	}
	return;
}
 80043ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		start_fx(last_fx);
 80043b0:	f7ff bfa8 	b.w	8004304 <start_fx>
 80043b4:	4b05      	ldr	r3, [pc, #20]	; (80043cc <fx_done+0x54>)
 80043b6:	7818      	ldrb	r0, [r3, #0]
 80043b8:	e7f8      	b.n	80043ac <fx_done+0x34>
 80043ba:	bf00      	nop
 80043bc:	20000411 	.word	0x20000411
 80043c0:	20000970 	.word	0x20000970
 80043c4:	08007a9c 	.word	0x08007a9c
 80043c8:	20000412 	.word	0x20000412
 80043cc:	20000418 	.word	0x20000418

080043d0 <run_fx>:

//Called every frame
void run_fx(void)
{
 80043d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	//No FX Active...
	if (current_fx == 0)
 80043d2:	4e17      	ldr	r6, [pc, #92]	; (8004430 <run_fx+0x60>)
 80043d4:	7833      	ldrb	r3, [r6, #0]
 80043d6:	b353      	cbz	r3, 800442e <run_fx+0x5e>
		return;

	//Check if FX Has expired
	if (pfx_list[current_fx]->mode == MODE_SINGLE_SHOT)
 80043d8:	4f16      	ldr	r7, [pc, #88]	; (8004434 <run_fx+0x64>)
 80043da:	4c17      	ldr	r4, [pc, #92]	; (8004438 <run_fx+0x68>)
 80043dc:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 80043e0:	6821      	ldr	r1, [r4, #0]
 80043e2:	7858      	ldrb	r0, [r3, #1]
 80043e4:	68da      	ldr	r2, [r3, #12]
 80043e6:	2801      	cmp	r0, #1
 80043e8:	d105      	bne.n	80043f6 <run_fx+0x26>
	{
		if (pfx_list[current_fx]->duration == fx_frame_count)
 80043ea:	4291      	cmp	r1, r2
 80043ec:	d10f      	bne.n	800440e <run_fx+0x3e>
		return;
	}

	current_fx_state = FX_RUN;
	fx_frame_count++;
}
 80043ee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			fx_done();
 80043f2:	f7ff bfc1 	b.w	8004378 <fx_done>
	else if (pfx_list[current_fx]->mode == MODE_LOOP)
 80043f6:	2802      	cmp	r0, #2
 80043f8:	d109      	bne.n	800440e <run_fx+0x3e>
		if (pfx_list[current_fx]->duration == fx_frame_count)
 80043fa:	4291      	cmp	r1, r2
 80043fc:	d107      	bne.n	800440e <run_fx+0x3e>
			fx_frame_count = 0;
 80043fe:	2500      	movs	r5, #0
 8004400:	691b      	ldr	r3, [r3, #16]
 8004402:	6025      	str	r5, [r4, #0]
			pfx_list[current_fx]->fx_run_pointer(FX_INIT,pfx_list[current_fx]->duration,0);
 8004404:	462a      	mov	r2, r5
 8004406:	4628      	mov	r0, r5
 8004408:	4798      	blx	r3
			current_fx_state = FX_INIT;
 800440a:	4b0c      	ldr	r3, [pc, #48]	; (800443c <run_fx+0x6c>)
 800440c:	701d      	strb	r5, [r3, #0]
	if (FX_COMPLETED == pfx_list[current_fx]->fx_run_pointer(FX_RUN,fx_frame_count,pfx_list[current_fx]->duration))
 800440e:	7833      	ldrb	r3, [r6, #0]
 8004410:	6821      	ldr	r1, [r4, #0]
 8004412:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8004416:	2001      	movs	r0, #1
 8004418:	e9d3 2503 	ldrd	r2, r5, [r3, #12]
 800441c:	47a8      	blx	r5
 800441e:	2801      	cmp	r0, #1
 8004420:	d0e5      	beq.n	80043ee <run_fx+0x1e>
	current_fx_state = FX_RUN;
 8004422:	2201      	movs	r2, #1
 8004424:	4b05      	ldr	r3, [pc, #20]	; (800443c <run_fx+0x6c>)
 8004426:	701a      	strb	r2, [r3, #0]
	fx_frame_count++;
 8004428:	6823      	ldr	r3, [r4, #0]
 800442a:	4413      	add	r3, r2
 800442c:	6023      	str	r3, [r4, #0]
}
 800442e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004430:	20000411 	.word	0x20000411
 8004434:	20000970 	.word	0x20000970
 8004438:	20000414 	.word	0x20000414
 800443c:	20000412 	.word	0x20000412

08004440 <get_mode_from_pins>:
 8004440:	b510      	push	{r4, lr}
 8004442:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004446:	4808      	ldr	r0, [pc, #32]	; (8004468 <get_mode_from_pins+0x28>)
 8004448:	f7fc ff50 	bl	80012ec <HAL_GPIO_ReadPin>
 800444c:	fab0 f480 	clz	r4, r0
 8004450:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004454:	4804      	ldr	r0, [pc, #16]	; (8004468 <get_mode_from_pins+0x28>)
 8004456:	0964      	lsrs	r4, r4, #5
 8004458:	f7fc ff48 	bl	80012ec <HAL_GPIO_ReadPin>
 800445c:	b908      	cbnz	r0, 8004462 <get_mode_from_pins+0x22>
 800445e:	f044 0402 	orr.w	r4, r4, #2
 8004462:	4620      	mov	r0, r4
 8004464:	bd10      	pop	{r4, pc}
 8004466:	bf00      	nop
 8004468:	40011000 	.word	0x40011000

0800446c <get_addr_from_pins>:
 800446c:	b510      	push	{r4, lr}
 800446e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004472:	481f      	ldr	r0, [pc, #124]	; (80044f0 <get_addr_from_pins+0x84>)
 8004474:	f7fc ff3a 	bl	80012ec <HAL_GPIO_ReadPin>
 8004478:	fab0 f480 	clz	r4, r0
 800447c:	2108      	movs	r1, #8
 800447e:	481d      	ldr	r0, [pc, #116]	; (80044f4 <get_addr_from_pins+0x88>)
 8004480:	0964      	lsrs	r4, r4, #5
 8004482:	f7fc ff33 	bl	80012ec <HAL_GPIO_ReadPin>
 8004486:	b908      	cbnz	r0, 800448c <get_addr_from_pins+0x20>
 8004488:	f044 0402 	orr.w	r4, r4, #2
 800448c:	2110      	movs	r1, #16
 800448e:	4819      	ldr	r0, [pc, #100]	; (80044f4 <get_addr_from_pins+0x88>)
 8004490:	f7fc ff2c 	bl	80012ec <HAL_GPIO_ReadPin>
 8004494:	b908      	cbnz	r0, 800449a <get_addr_from_pins+0x2e>
 8004496:	f044 0404 	orr.w	r4, r4, #4
 800449a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800449e:	4815      	ldr	r0, [pc, #84]	; (80044f4 <get_addr_from_pins+0x88>)
 80044a0:	f7fc ff24 	bl	80012ec <HAL_GPIO_ReadPin>
 80044a4:	b908      	cbnz	r0, 80044aa <get_addr_from_pins+0x3e>
 80044a6:	f044 0408 	orr.w	r4, r4, #8
 80044aa:	f44f 7100 	mov.w	r1, #512	; 0x200
 80044ae:	4811      	ldr	r0, [pc, #68]	; (80044f4 <get_addr_from_pins+0x88>)
 80044b0:	f7fc ff1c 	bl	80012ec <HAL_GPIO_ReadPin>
 80044b4:	b908      	cbnz	r0, 80044ba <get_addr_from_pins+0x4e>
 80044b6:	f044 0410 	orr.w	r4, r4, #16
 80044ba:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80044be:	480d      	ldr	r0, [pc, #52]	; (80044f4 <get_addr_from_pins+0x88>)
 80044c0:	f7fc ff14 	bl	80012ec <HAL_GPIO_ReadPin>
 80044c4:	b908      	cbnz	r0, 80044ca <get_addr_from_pins+0x5e>
 80044c6:	f044 0420 	orr.w	r4, r4, #32
 80044ca:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80044ce:	4809      	ldr	r0, [pc, #36]	; (80044f4 <get_addr_from_pins+0x88>)
 80044d0:	f7fc ff0c 	bl	80012ec <HAL_GPIO_ReadPin>
 80044d4:	b908      	cbnz	r0, 80044da <get_addr_from_pins+0x6e>
 80044d6:	f044 0440 	orr.w	r4, r4, #64	; 0x40
 80044da:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80044de:	4805      	ldr	r0, [pc, #20]	; (80044f4 <get_addr_from_pins+0x88>)
 80044e0:	f7fc ff04 	bl	80012ec <HAL_GPIO_ReadPin>
 80044e4:	b908      	cbnz	r0, 80044ea <get_addr_from_pins+0x7e>
 80044e6:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80044ea:	4620      	mov	r0, r4
 80044ec:	bd10      	pop	{r4, pc}
 80044ee:	bf00      	nop
 80044f0:	40010800 	.word	0x40010800
 80044f4:	40010c00 	.word	0x40010c00

080044f8 <check_button>:
 80044f8:	b508      	push	{r3, lr}
 80044fa:	2120      	movs	r1, #32
 80044fc:	4803      	ldr	r0, [pc, #12]	; (800450c <check_button+0x14>)
 80044fe:	f7fc fef5 	bl	80012ec <HAL_GPIO_ReadPin>
 8004502:	fab0 f080 	clz	r0, r0
 8004506:	0940      	lsrs	r0, r0, #5
 8004508:	bd08      	pop	{r3, pc}
 800450a:	bf00      	nop
 800450c:	40010800 	.word	0x40010800

08004510 <scale_value>:
 8004510:	b570      	push	{r4, r5, r6, lr}
 8004512:	f240 4434 	movw	r4, #1076	; 0x434
 8004516:	23ff      	movs	r3, #255	; 0xff
 8004518:	4360      	muls	r0, r4
 800451a:	fbb0 f3f3 	udiv	r3, r0, r3
 800451e:	4616      	mov	r6, r2
 8004520:	4a0e      	ldr	r2, [pc, #56]	; (800455c <scale_value+0x4c>)
 8004522:	8810      	ldrh	r0, [r2, #0]
 8004524:	4358      	muls	r0, r3
 8004526:	fbb0 f0f4 	udiv	r0, r0, r4
 800452a:	1a40      	subs	r0, r0, r1
 800452c:	f7fb fed0 	bl	80002d0 <__aeabi_i2f>
 8004530:	4605      	mov	r5, r0
 8004532:	4630      	mov	r0, r6
 8004534:	f7fb fecc 	bl	80002d0 <__aeabi_i2f>
 8004538:	4601      	mov	r1, r0
 800453a:	4628      	mov	r0, r5
 800453c:	f7fb ff1c 	bl	8000378 <__aeabi_fmul>
 8004540:	4907      	ldr	r1, [pc, #28]	; (8004560 <scale_value+0x50>)
 8004542:	f7fb ffcd 	bl	80004e0 <__aeabi_fdiv>
 8004546:	f7fc f867 	bl	8000618 <__aeabi_f2iz>
 800454a:	b200      	sxth	r0, r0
 800454c:	42a0      	cmp	r0, r4
 800454e:	bfa8      	it	ge
 8004550:	4620      	movge	r0, r4
 8004552:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8004556:	b280      	uxth	r0, r0
 8004558:	bd70      	pop	{r4, r5, r6, pc}
 800455a:	bf00      	nop
 800455c:	2000041a 	.word	0x2000041a
 8004560:	42c80000 	.word	0x42c80000

08004564 <update_pwm_lights>:
 8004564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004566:	4cb6      	ldr	r4, [pc, #728]	; (8004840 <update_pwm_lights+0x2dc>)
 8004568:	4605      	mov	r5, r0
 800456a:	6823      	ldr	r3, [r4, #0]
 800456c:	2000      	movs	r0, #0
 800456e:	781e      	ldrb	r6, [r3, #0]
 8004570:	f7ff fd2c 	bl	8003fcc <get_reg>
 8004574:	4286      	cmp	r6, r0
 8004576:	d100      	bne.n	800457a <update_pwm_lights+0x16>
 8004578:	b185      	cbz	r5, 800459c <update_pwm_lights+0x38>
 800457a:	2000      	movs	r0, #0
 800457c:	f7ff fd26 	bl	8003fcc <get_reg>
 8004580:	f240 4334 	movw	r3, #1076	; 0x434
 8004584:	4358      	muls	r0, r3
 8004586:	23ff      	movs	r3, #255	; 0xff
 8004588:	fbb0 f0f3 	udiv	r0, r0, r3
 800458c:	4bad      	ldr	r3, [pc, #692]	; (8004844 <update_pwm_lights+0x2e0>)
 800458e:	6825      	ldr	r5, [r4, #0]
 8004590:	8018      	strh	r0, [r3, #0]
 8004592:	2000      	movs	r0, #0
 8004594:	f7ff fd1a 	bl	8003fcc <get_reg>
 8004598:	7028      	strb	r0, [r5, #0]
 800459a:	2501      	movs	r5, #1
 800459c:	6823      	ldr	r3, [r4, #0]
 800459e:	2001      	movs	r0, #1
 80045a0:	785e      	ldrb	r6, [r3, #1]
 80045a2:	f7ff fd13 	bl	8003fcc <get_reg>
 80045a6:	4286      	cmp	r6, r0
 80045a8:	d100      	bne.n	80045ac <update_pwm_lights+0x48>
 80045aa:	b1ad      	cbz	r5, 80045d8 <update_pwm_lights+0x74>
 80045ac:	2001      	movs	r0, #1
 80045ae:	f7ff fd0d 	bl	8003fcc <get_reg>
 80045b2:	49a5      	ldr	r1, [pc, #660]	; (8004848 <update_pwm_lights+0x2e4>)
 80045b4:	f9b1 303e 	ldrsh.w	r3, [r1, #62]	; 0x3e
 80045b8:	f9b1 203c 	ldrsh.w	r2, [r1, #60]	; 0x3c
 80045bc:	f9b1 103a 	ldrsh.w	r1, [r1, #58]	; 0x3a
 80045c0:	f7ff ffa6 	bl	8004510 <scale_value>
 80045c4:	2100      	movs	r1, #0
 80045c6:	4602      	mov	r2, r0
 80045c8:	4608      	mov	r0, r1
 80045ca:	f000 fcc5 	bl	8004f58 <configPWM>
 80045ce:	2001      	movs	r0, #1
 80045d0:	6826      	ldr	r6, [r4, #0]
 80045d2:	f7ff fcfb 	bl	8003fcc <get_reg>
 80045d6:	7070      	strb	r0, [r6, #1]
 80045d8:	6823      	ldr	r3, [r4, #0]
 80045da:	2002      	movs	r0, #2
 80045dc:	789e      	ldrb	r6, [r3, #2]
 80045de:	f7ff fcf5 	bl	8003fcc <get_reg>
 80045e2:	4286      	cmp	r6, r0
 80045e4:	d100      	bne.n	80045e8 <update_pwm_lights+0x84>
 80045e6:	b1ad      	cbz	r5, 8004614 <update_pwm_lights+0xb0>
 80045e8:	2002      	movs	r0, #2
 80045ea:	f7ff fcef 	bl	8003fcc <get_reg>
 80045ee:	4996      	ldr	r1, [pc, #600]	; (8004848 <update_pwm_lights+0x2e4>)
 80045f0:	f9b1 3044 	ldrsh.w	r3, [r1, #68]	; 0x44
 80045f4:	f9b1 2042 	ldrsh.w	r2, [r1, #66]	; 0x42
 80045f8:	f9b1 1040 	ldrsh.w	r1, [r1, #64]	; 0x40
 80045fc:	f7ff ff88 	bl	8004510 <scale_value>
 8004600:	2101      	movs	r1, #1
 8004602:	4602      	mov	r2, r0
 8004604:	2000      	movs	r0, #0
 8004606:	f000 fca7 	bl	8004f58 <configPWM>
 800460a:	2002      	movs	r0, #2
 800460c:	6826      	ldr	r6, [r4, #0]
 800460e:	f7ff fcdd 	bl	8003fcc <get_reg>
 8004612:	70b0      	strb	r0, [r6, #2]
 8004614:	6823      	ldr	r3, [r4, #0]
 8004616:	2003      	movs	r0, #3
 8004618:	78de      	ldrb	r6, [r3, #3]
 800461a:	f7ff fcd7 	bl	8003fcc <get_reg>
 800461e:	4286      	cmp	r6, r0
 8004620:	d100      	bne.n	8004624 <update_pwm_lights+0xc0>
 8004622:	b1ad      	cbz	r5, 8004650 <update_pwm_lights+0xec>
 8004624:	2003      	movs	r0, #3
 8004626:	f7ff fcd1 	bl	8003fcc <get_reg>
 800462a:	4987      	ldr	r1, [pc, #540]	; (8004848 <update_pwm_lights+0x2e4>)
 800462c:	f9b1 304a 	ldrsh.w	r3, [r1, #74]	; 0x4a
 8004630:	f9b1 2048 	ldrsh.w	r2, [r1, #72]	; 0x48
 8004634:	f9b1 1046 	ldrsh.w	r1, [r1, #70]	; 0x46
 8004638:	f7ff ff6a 	bl	8004510 <scale_value>
 800463c:	2102      	movs	r1, #2
 800463e:	4602      	mov	r2, r0
 8004640:	2000      	movs	r0, #0
 8004642:	f000 fc89 	bl	8004f58 <configPWM>
 8004646:	2003      	movs	r0, #3
 8004648:	6826      	ldr	r6, [r4, #0]
 800464a:	f7ff fcbf 	bl	8003fcc <get_reg>
 800464e:	70f0      	strb	r0, [r6, #3]
 8004650:	6823      	ldr	r3, [r4, #0]
 8004652:	2004      	movs	r0, #4
 8004654:	791e      	ldrb	r6, [r3, #4]
 8004656:	f7ff fcb9 	bl	8003fcc <get_reg>
 800465a:	4286      	cmp	r6, r0
 800465c:	d100      	bne.n	8004660 <update_pwm_lights+0xfc>
 800465e:	b1ad      	cbz	r5, 800468c <update_pwm_lights+0x128>
 8004660:	2004      	movs	r0, #4
 8004662:	f7ff fcb3 	bl	8003fcc <get_reg>
 8004666:	4978      	ldr	r1, [pc, #480]	; (8004848 <update_pwm_lights+0x2e4>)
 8004668:	f9b1 303e 	ldrsh.w	r3, [r1, #62]	; 0x3e
 800466c:	f9b1 203c 	ldrsh.w	r2, [r1, #60]	; 0x3c
 8004670:	f9b1 103a 	ldrsh.w	r1, [r1, #58]	; 0x3a
 8004674:	f7ff ff4c 	bl	8004510 <scale_value>
 8004678:	2100      	movs	r1, #0
 800467a:	4602      	mov	r2, r0
 800467c:	2001      	movs	r0, #1
 800467e:	f000 fc6b 	bl	8004f58 <configPWM>
 8004682:	2004      	movs	r0, #4
 8004684:	6826      	ldr	r6, [r4, #0]
 8004686:	f7ff fca1 	bl	8003fcc <get_reg>
 800468a:	7130      	strb	r0, [r6, #4]
 800468c:	6823      	ldr	r3, [r4, #0]
 800468e:	2005      	movs	r0, #5
 8004690:	795e      	ldrb	r6, [r3, #5]
 8004692:	f7ff fc9b 	bl	8003fcc <get_reg>
 8004696:	4286      	cmp	r6, r0
 8004698:	d100      	bne.n	800469c <update_pwm_lights+0x138>
 800469a:	b1ad      	cbz	r5, 80046c8 <update_pwm_lights+0x164>
 800469c:	2005      	movs	r0, #5
 800469e:	f7ff fc95 	bl	8003fcc <get_reg>
 80046a2:	4969      	ldr	r1, [pc, #420]	; (8004848 <update_pwm_lights+0x2e4>)
 80046a4:	f9b1 3044 	ldrsh.w	r3, [r1, #68]	; 0x44
 80046a8:	f9b1 2042 	ldrsh.w	r2, [r1, #66]	; 0x42
 80046ac:	f9b1 1040 	ldrsh.w	r1, [r1, #64]	; 0x40
 80046b0:	f7ff ff2e 	bl	8004510 <scale_value>
 80046b4:	2101      	movs	r1, #1
 80046b6:	4602      	mov	r2, r0
 80046b8:	4608      	mov	r0, r1
 80046ba:	f000 fc4d 	bl	8004f58 <configPWM>
 80046be:	2005      	movs	r0, #5
 80046c0:	6826      	ldr	r6, [r4, #0]
 80046c2:	f7ff fc83 	bl	8003fcc <get_reg>
 80046c6:	7170      	strb	r0, [r6, #5]
 80046c8:	6823      	ldr	r3, [r4, #0]
 80046ca:	2006      	movs	r0, #6
 80046cc:	799e      	ldrb	r6, [r3, #6]
 80046ce:	f7ff fc7d 	bl	8003fcc <get_reg>
 80046d2:	4286      	cmp	r6, r0
 80046d4:	d100      	bne.n	80046d8 <update_pwm_lights+0x174>
 80046d6:	b1ad      	cbz	r5, 8004704 <update_pwm_lights+0x1a0>
 80046d8:	2006      	movs	r0, #6
 80046da:	f7ff fc77 	bl	8003fcc <get_reg>
 80046de:	495a      	ldr	r1, [pc, #360]	; (8004848 <update_pwm_lights+0x2e4>)
 80046e0:	f9b1 304a 	ldrsh.w	r3, [r1, #74]	; 0x4a
 80046e4:	f9b1 2048 	ldrsh.w	r2, [r1, #72]	; 0x48
 80046e8:	f9b1 1046 	ldrsh.w	r1, [r1, #70]	; 0x46
 80046ec:	f7ff ff10 	bl	8004510 <scale_value>
 80046f0:	2102      	movs	r1, #2
 80046f2:	4602      	mov	r2, r0
 80046f4:	2001      	movs	r0, #1
 80046f6:	f000 fc2f 	bl	8004f58 <configPWM>
 80046fa:	2006      	movs	r0, #6
 80046fc:	6826      	ldr	r6, [r4, #0]
 80046fe:	f7ff fc65 	bl	8003fcc <get_reg>
 8004702:	71b0      	strb	r0, [r6, #6]
 8004704:	6823      	ldr	r3, [r4, #0]
 8004706:	2007      	movs	r0, #7
 8004708:	79de      	ldrb	r6, [r3, #7]
 800470a:	f7ff fc5f 	bl	8003fcc <get_reg>
 800470e:	4286      	cmp	r6, r0
 8004710:	d100      	bne.n	8004714 <update_pwm_lights+0x1b0>
 8004712:	b1ad      	cbz	r5, 8004740 <update_pwm_lights+0x1dc>
 8004714:	2007      	movs	r0, #7
 8004716:	f7ff fc59 	bl	8003fcc <get_reg>
 800471a:	494b      	ldr	r1, [pc, #300]	; (8004848 <update_pwm_lights+0x2e4>)
 800471c:	f9b1 303e 	ldrsh.w	r3, [r1, #62]	; 0x3e
 8004720:	f9b1 203c 	ldrsh.w	r2, [r1, #60]	; 0x3c
 8004724:	f9b1 103a 	ldrsh.w	r1, [r1, #58]	; 0x3a
 8004728:	f7ff fef2 	bl	8004510 <scale_value>
 800472c:	2100      	movs	r1, #0
 800472e:	4602      	mov	r2, r0
 8004730:	2002      	movs	r0, #2
 8004732:	f000 fc11 	bl	8004f58 <configPWM>
 8004736:	2007      	movs	r0, #7
 8004738:	6826      	ldr	r6, [r4, #0]
 800473a:	f7ff fc47 	bl	8003fcc <get_reg>
 800473e:	71f0      	strb	r0, [r6, #7]
 8004740:	6823      	ldr	r3, [r4, #0]
 8004742:	2008      	movs	r0, #8
 8004744:	7a1e      	ldrb	r6, [r3, #8]
 8004746:	f7ff fc41 	bl	8003fcc <get_reg>
 800474a:	4286      	cmp	r6, r0
 800474c:	d100      	bne.n	8004750 <update_pwm_lights+0x1ec>
 800474e:	b1ad      	cbz	r5, 800477c <update_pwm_lights+0x218>
 8004750:	2008      	movs	r0, #8
 8004752:	f7ff fc3b 	bl	8003fcc <get_reg>
 8004756:	493c      	ldr	r1, [pc, #240]	; (8004848 <update_pwm_lights+0x2e4>)
 8004758:	f9b1 3044 	ldrsh.w	r3, [r1, #68]	; 0x44
 800475c:	f9b1 2042 	ldrsh.w	r2, [r1, #66]	; 0x42
 8004760:	f9b1 1040 	ldrsh.w	r1, [r1, #64]	; 0x40
 8004764:	f7ff fed4 	bl	8004510 <scale_value>
 8004768:	2101      	movs	r1, #1
 800476a:	4602      	mov	r2, r0
 800476c:	2002      	movs	r0, #2
 800476e:	f000 fbf3 	bl	8004f58 <configPWM>
 8004772:	2008      	movs	r0, #8
 8004774:	6826      	ldr	r6, [r4, #0]
 8004776:	f7ff fc29 	bl	8003fcc <get_reg>
 800477a:	7230      	strb	r0, [r6, #8]
 800477c:	6823      	ldr	r3, [r4, #0]
 800477e:	2009      	movs	r0, #9
 8004780:	7a5e      	ldrb	r6, [r3, #9]
 8004782:	f7ff fc23 	bl	8003fcc <get_reg>
 8004786:	4286      	cmp	r6, r0
 8004788:	d100      	bne.n	800478c <update_pwm_lights+0x228>
 800478a:	b1ad      	cbz	r5, 80047b8 <update_pwm_lights+0x254>
 800478c:	2009      	movs	r0, #9
 800478e:	f7ff fc1d 	bl	8003fcc <get_reg>
 8004792:	492d      	ldr	r1, [pc, #180]	; (8004848 <update_pwm_lights+0x2e4>)
 8004794:	f9b1 304a 	ldrsh.w	r3, [r1, #74]	; 0x4a
 8004798:	f9b1 2048 	ldrsh.w	r2, [r1, #72]	; 0x48
 800479c:	f9b1 1046 	ldrsh.w	r1, [r1, #70]	; 0x46
 80047a0:	f7ff feb6 	bl	8004510 <scale_value>
 80047a4:	2102      	movs	r1, #2
 80047a6:	4602      	mov	r2, r0
 80047a8:	4608      	mov	r0, r1
 80047aa:	f000 fbd5 	bl	8004f58 <configPWM>
 80047ae:	2009      	movs	r0, #9
 80047b0:	6826      	ldr	r6, [r4, #0]
 80047b2:	f7ff fc0b 	bl	8003fcc <get_reg>
 80047b6:	7270      	strb	r0, [r6, #9]
 80047b8:	6823      	ldr	r3, [r4, #0]
 80047ba:	200a      	movs	r0, #10
 80047bc:	7a9e      	ldrb	r6, [r3, #10]
 80047be:	f7ff fc05 	bl	8003fcc <get_reg>
 80047c2:	4286      	cmp	r6, r0
 80047c4:	d100      	bne.n	80047c8 <update_pwm_lights+0x264>
 80047c6:	b18d      	cbz	r5, 80047ec <update_pwm_lights+0x288>
 80047c8:	200a      	movs	r0, #10
 80047ca:	f7ff fbff 	bl	8003fcc <get_reg>
 80047ce:	23dc      	movs	r3, #220	; 0xdc
 80047d0:	2264      	movs	r2, #100	; 0x64
 80047d2:	2100      	movs	r1, #0
 80047d4:	f7ff fe9c 	bl	8004510 <scale_value>
 80047d8:	2103      	movs	r1, #3
 80047da:	4602      	mov	r2, r0
 80047dc:	2002      	movs	r0, #2
 80047de:	f000 fbbb 	bl	8004f58 <configPWM>
 80047e2:	200a      	movs	r0, #10
 80047e4:	6826      	ldr	r6, [r4, #0]
 80047e6:	f7ff fbf1 	bl	8003fcc <get_reg>
 80047ea:	72b0      	strb	r0, [r6, #10]
 80047ec:	f7ff fbaa 	bl	8003f44 <get_mode>
 80047f0:	2801      	cmp	r0, #1
 80047f2:	d124      	bne.n	800483e <update_pwm_lights+0x2da>
 80047f4:	6823      	ldr	r3, [r4, #0]
 80047f6:	200b      	movs	r0, #11
 80047f8:	7adf      	ldrb	r7, [r3, #11]
 80047fa:	f7ff fbe7 	bl	8003fcc <get_reg>
 80047fe:	4e12      	ldr	r6, [pc, #72]	; (8004848 <update_pwm_lights+0x2e4>)
 8004800:	f896 3025 	ldrb.w	r3, [r6, #37]	; 0x25
 8004804:	fbb0 f0f3 	udiv	r0, r0, r3
 8004808:	b2c0      	uxtb	r0, r0
 800480a:	4287      	cmp	r7, r0
 800480c:	d100      	bne.n	8004810 <update_pwm_lights+0x2ac>
 800480e:	b1b5      	cbz	r5, 800483e <update_pwm_lights+0x2da>
 8004810:	200b      	movs	r0, #11
 8004812:	f7ff fbdb 	bl	8003fcc <get_reg>
 8004816:	f896 3025 	ldrb.w	r3, [r6, #37]	; 0x25
 800481a:	fbb0 f0f3 	udiv	r0, r0, r3
 800481e:	b2c0      	uxtb	r0, r0
 8004820:	f7ff fd70 	bl	8004304 <start_fx>
 8004824:	4601      	mov	r1, r0
 8004826:	200b      	movs	r0, #11
 8004828:	f7ff fbc2 	bl	8003fb0 <set_reg>
 800482c:	200b      	movs	r0, #11
 800482e:	f7ff fbcd 	bl	8003fcc <get_reg>
 8004832:	f896 3025 	ldrb.w	r3, [r6, #37]	; 0x25
 8004836:	6822      	ldr	r2, [r4, #0]
 8004838:	fbb0 f0f3 	udiv	r0, r0, r3
 800483c:	72d0      	strb	r0, [r2, #11]
 800483e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004840:	2000041c 	.word	0x2000041c
 8004844:	2000041a 	.word	0x2000041a
 8004848:	20000a70 	.word	0x20000a70

0800484c <init_update_lights>:
 800484c:	b510      	push	{r4, lr}
 800484e:	4c09      	ldr	r4, [pc, #36]	; (8004874 <init_update_lights+0x28>)
 8004850:	6820      	ldr	r0, [r4, #0]
 8004852:	b108      	cbz	r0, 8004858 <init_update_lights+0xc>
 8004854:	f002 fade 	bl	8006e14 <free>
 8004858:	f7ff fb7a 	bl	8003f50 <get_reg_length>
 800485c:	2101      	movs	r1, #1
 800485e:	4408      	add	r0, r1
 8004860:	f002 fa9e 	bl	8006da0 <calloc>
 8004864:	23ff      	movs	r3, #255	; 0xff
 8004866:	7003      	strb	r3, [r0, #0]
 8004868:	6020      	str	r0, [r4, #0]
 800486a:	2001      	movs	r0, #1
 800486c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004870:	f7ff be78 	b.w	8004564 <update_pwm_lights>
 8004874:	2000041c 	.word	0x2000041c

08004878 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004878:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800487a:	2410      	movs	r4, #16
{
 800487c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800487e:	4622      	mov	r2, r4
 8004880:	2100      	movs	r1, #0
 8004882:	a80c      	add	r0, sp, #48	; 0x30
 8004884:	f002 fad9 	bl	8006e3a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004888:	2214      	movs	r2, #20
 800488a:	2100      	movs	r1, #0
 800488c:	eb0d 0002 	add.w	r0, sp, r2
 8004890:	f002 fad3 	bl	8006e3a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8004894:	4622      	mov	r2, r4
 8004896:	2100      	movs	r1, #0
 8004898:	a801      	add	r0, sp, #4
 800489a:	f002 face 	bl	8006e3a <memset>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800489e:	2502      	movs	r5, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80048a0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80048a4:	2209      	movs	r2, #9
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80048a6:	e9cd 5311 	strd	r5, r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80048aa:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80048ae:	2201      	movs	r2, #1
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80048b0:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80048b4:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80048b6:	920e      	str	r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80048b8:	9210      	str	r2, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80048ba:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80048bc:	f7fd f8e8 	bl	8001a90 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80048c0:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80048c2:	2400      	movs	r4, #0
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80048c4:	e9cd 3505 	strd	r3, r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80048c8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80048cc:	4629      	mov	r1, r5
 80048ce:	a805      	add	r0, sp, #20
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80048d0:	e9cd 4307 	strd	r4, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80048d4:	9409      	str	r4, [sp, #36]	; 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80048d6:	f7fd fab3 	bl	8001e40 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_USB;
 80048da:	2312      	movs	r3, #18
 80048dc:	9301      	str	r3, [sp, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 80048de:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80048e2:	a801      	add	r0, sp, #4
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 80048e4:	e9cd 3403 	strd	r3, r4, [sp, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80048e8:	f7fd fb66 	bl	8001fb8 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80048ec:	b015      	add	sp, #84	; 0x54
 80048ee:	bd30      	pop	{r4, r5, pc}

080048f0 <main>:
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80048f0:	2400      	movs	r4, #0
{
 80048f2:	e92d 4880 	stmdb	sp!, {r7, fp, lr}

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80048f6:	4dc3      	ldr	r5, [pc, #780]	; (8004c04 <main+0x314>)
{
 80048f8:	b08b      	sub	sp, #44	; 0x2c
  HAL_Init();
 80048fa:	f7fb fed7 	bl	80006ac <HAL_Init>
  SystemClock_Config();
 80048fe:	f7ff ffbb 	bl	8004878 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004902:	9408      	str	r4, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8004904:	69ab      	ldr	r3, [r5, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  GPIO_InitStruct.Pin = RS485_DIR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004906:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004908:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800490a:	f04f 0880 	mov.w	r8, #128	; 0x80
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800490e:	f043 0310 	orr.w	r3, r3, #16
 8004912:	61ab      	str	r3, [r5, #24]
 8004914:	69ab      	ldr	r3, [r5, #24]
  HAL_GPIO_Init(RS485_DIR_GPIO_Port, &GPIO_InitStruct);
 8004916:	a906      	add	r1, sp, #24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8004918:	f003 0310 	and.w	r3, r3, #16
 800491c:	9302      	str	r3, [sp, #8]
 800491e:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004920:	69ab      	ldr	r3, [r5, #24]
  HAL_GPIO_Init(RS485_DIR_GPIO_Port, &GPIO_InitStruct);
 8004922:	48b9      	ldr	r0, [pc, #740]	; (8004c08 <main+0x318>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004924:	f043 0320 	orr.w	r3, r3, #32
 8004928:	61ab      	str	r3, [r5, #24]
 800492a:	69ab      	ldr	r3, [r5, #24]
  GPIO_InitStruct.Pin = MODE_0_Pin|MODE_1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

  GPIO_InitStruct.Pin = LED_Pin;
 800492c:	f44f 5900 	mov.w	r9, #8192	; 0x2000
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004930:	f003 0320 	and.w	r3, r3, #32
 8004934:	9303      	str	r3, [sp, #12]
 8004936:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8004938:	69ab      	ldr	r3, [r5, #24]
  /*Configure GPIO pins : CH1_R_Pin CH1_G_Pin CH1_B_Pin CH2_R_Pin 
                           CH2_G_Pin CH3_R_Pin CH3_G_Pin CH3_B_Pin */
  GPIO_InitStruct.Pin = CH1_R_Pin|CH1_G_Pin|CH1_B_Pin|CH2_R_Pin 
                          |CH2_G_Pin|CH3_R_Pin|CH3_G_Pin|CH3_B_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800493a:	f04f 0a03 	mov.w	sl, #3
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800493e:	f043 0304 	orr.w	r3, r3, #4
 8004942:	61ab      	str	r3, [r5, #24]
 8004944:	69ab      	ldr	r3, [r5, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

  /*Configure GPIO pins : BUTTON_Pin ADDR_0_Pin */
  GPIO_InitStruct.Pin = BUTTON_Pin|ADDR_0_Pin;
 8004946:	f248 0b20 	movw	fp, #32800	; 0x8020
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800494a:	f003 0304 	and.w	r3, r3, #4
 800494e:	9304      	str	r3, [sp, #16]
 8004950:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8004952:	69ab      	ldr	r3, [r5, #24]
 8004954:	f043 0308 	orr.w	r3, r3, #8
 8004958:	61ab      	str	r3, [r5, #24]
 800495a:	69ab      	ldr	r3, [r5, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800495c:	e9cd 8606 	strd	r8, r6, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8004960:	f003 0308 	and.w	r3, r3, #8
 8004964:	9305      	str	r3, [sp, #20]
 8004966:	9b05      	ldr	r3, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004968:	9709      	str	r7, [sp, #36]	; 0x24
  HAL_GPIO_Init(RS485_DIR_GPIO_Port, &GPIO_InitStruct);
 800496a:	f7fc fbdf 	bl	800112c <HAL_GPIO_Init>
  HAL_GPIO_WritePin(RS485_DIR_GPIO_Port, RS485_DIR_Pin, GPIO_PIN_RESET);
 800496e:	4622      	mov	r2, r4
 8004970:	4641      	mov	r1, r8
 8004972:	48a5      	ldr	r0, [pc, #660]	; (8004c08 <main+0x318>)
 8004974:	f7fc fcc0 	bl	80012f8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = MODE_0_Pin|MODE_1_Pin;
 8004978:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800497c:	a906      	add	r1, sp, #24
 800497e:	48a3      	ldr	r0, [pc, #652]	; (8004c0c <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004980:	e9cd 3406 	strd	r3, r4, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004984:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004986:	f7fc fbd1 	bl	800112c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800498a:	a906      	add	r1, sp, #24
 800498c:	489f      	ldr	r0, [pc, #636]	; (8004c0c <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800498e:	e9cd 9606 	strd	r9, r6, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004992:	9709      	str	r7, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004994:	f7fc fbca 	bl	800112c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = CH1_R_Pin|CH1_G_Pin|CH1_B_Pin|CH2_R_Pin 
 8004998:	f240 73ce 	movw	r3, #1998	; 0x7ce
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800499c:	a906      	add	r1, sp, #24
 800499e:	489c      	ldr	r0, [pc, #624]	; (8004c10 <main+0x320>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049a0:	e9cd 3706 	strd	r3, r7, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80049a4:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80049a8:	f7fc fbc0 	bl	800112c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049ac:	a906      	add	r1, sp, #24
 80049ae:	4896      	ldr	r0, [pc, #600]	; (8004c08 <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049b0:	e9cd a706 	strd	sl, r7, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80049b4:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049b8:	f7fc fbb8 	bl	800112c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80049bc:	a906      	add	r1, sp, #24
 80049be:	4894      	ldr	r0, [pc, #592]	; (8004c10 <main+0x320>)
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80049c0:	e9cd b406 	strd	fp, r4, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80049c4:	9608      	str	r6, [sp, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80049c6:	f7fc fbb1 	bl	800112c <HAL_GPIO_Init>

  /*Configure GPIO pins : ADDR_5_Pin ADDR_6_Pin ADDR_7_Pin ADDR_1_Pin 
                           ADDR_2_Pin ADDR_3_Pin ADDR_4_Pin */
  GPIO_InitStruct.Pin = ADDR_5_Pin|ADDR_6_Pin|ADDR_7_Pin|ADDR_1_Pin 
 80049ca:	f247 3318 	movw	r3, #29464	; 0x7318
                          |ADDR_2_Pin|ADDR_3_Pin|ADDR_4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049ce:	a906      	add	r1, sp, #24
 80049d0:	488d      	ldr	r0, [pc, #564]	; (8004c08 <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80049d2:	e9cd 3406 	strd	r3, r4, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80049d6:	9608      	str	r6, [sp, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049d8:	f7fc fba8 	bl	800112c <HAL_GPIO_Init>

  /*Configure GPIO pins : WS8212_CH2_Pin WS8212_CH1_Pin */
  GPIO_InitStruct.Pin = WS8212_CH2_Pin|WS8212_CH1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049dc:	a906      	add	r1, sp, #24
 80049de:	488a      	ldr	r0, [pc, #552]	; (8004c08 <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049e0:	e9cd b706 	strd	fp, r7, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80049e4:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80049e8:	f7fc fba0 	bl	800112c <HAL_GPIO_Init>

  /*Configure GPIO pin : RS485_DIR_Pin */
  GPIO_InitStruct.Pin = RS232_TX_Pin;
 80049ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80049f0:	f44f 2a60 	mov.w	sl, #917504	; 0xe0000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(RS485_DIR_GPIO_Port, &GPIO_InitStruct);
 80049f4:	a906      	add	r1, sp, #24
 80049f6:	4884      	ldr	r0, [pc, #528]	; (8004c08 <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80049f8:	e9cd 3606 	strd	r3, r6, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80049fc:	e9cd 4708 	strd	r4, r7, [sp, #32]
  hadc1.Instance = ADC1;
 8004a00:	4f84      	ldr	r7, [pc, #528]	; (8004c14 <main+0x324>)
  HAL_GPIO_Init(RS485_DIR_GPIO_Port, &GPIO_InitStruct);
 8004a02:	f7fc fb93 	bl	800112c <HAL_GPIO_Init>
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8004a06:	4622      	mov	r2, r4
 8004a08:	4649      	mov	r1, r9
 8004a0a:	4880      	ldr	r0, [pc, #512]	; (8004c0c <main+0x31c>)
 8004a0c:	f7fc fc74 	bl	80012f8 <HAL_GPIO_WritePin>
  hadc1.Instance = ADC1;
 8004a10:	4b81      	ldr	r3, [pc, #516]	; (8004c18 <main+0x328>)
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8004a12:	4638      	mov	r0, r7
  hadc1.Instance = ADC1;
 8004a14:	603b      	str	r3, [r7, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8004a16:	60bc      	str	r4, [r7, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8004a18:	733c      	strb	r4, [r7, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8004a1a:	753c      	strb	r4, [r7, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8004a1c:	f8c7 a01c 	str.w	sl, [r7, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8004a20:	607c      	str	r4, [r7, #4]
  ADC_ChannelConfTypeDef sConfig = {0};
 8004a22:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8004a26:	9408      	str	r4, [sp, #32]
  hadc1.Init.NbrOfConversion = 1;
 8004a28:	613e      	str	r6, [r7, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8004a2a:	f7fc f81b 	bl	8000a64 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8004a2e:	a906      	add	r1, sp, #24
 8004a30:	4638      	mov	r0, r7
  hadc2.Instance = ADC2;
 8004a32:	4f7a      	ldr	r7, [pc, #488]	; (8004c1c <main+0x32c>)
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8004a34:	e9cd 4606 	strd	r4, r6, [sp, #24]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8004a38:	9408      	str	r4, [sp, #32]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8004a3a:	f7fb fed5 	bl	80007e8 <HAL_ADC_ConfigChannel>
  hadc2.Instance = ADC2;
 8004a3e:	4b78      	ldr	r3, [pc, #480]	; (8004c20 <main+0x330>)
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8004a40:	4638      	mov	r0, r7
  hadc2.Instance = ADC2;
 8004a42:	603b      	str	r3, [r7, #0]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8004a44:	60bc      	str	r4, [r7, #8]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8004a46:	733c      	strb	r4, [r7, #12]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8004a48:	753c      	strb	r4, [r7, #20]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8004a4a:	f8c7 a01c 	str.w	sl, [r7, #28]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8004a4e:	607c      	str	r4, [r7, #4]
  ADC_ChannelConfTypeDef sConfig = {0};
 8004a50:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8004a54:	9408      	str	r4, [sp, #32]
  hadc2.Init.NbrOfConversion = 1;
 8004a56:	613e      	str	r6, [r7, #16]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8004a58:	f7fc f804 	bl	8000a64 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_4;
 8004a5c:	2304      	movs	r3, #4
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8004a5e:	4638      	mov	r0, r7
  huart1.Init.Mode = UART_MODE_TX_RX;
 8004a60:	270c      	movs	r7, #12
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8004a62:	a906      	add	r1, sp, #24
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8004a64:	e9cd 3606 	strd	r3, r6, [sp, #24]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8004a68:	9408      	str	r4, [sp, #32]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8004a6a:	f7fb febd 	bl	80007e8 <HAL_ADC_ConfigChannel>
  huart1.Instance = USART1;
 8004a6e:	486d      	ldr	r0, [pc, #436]	; (8004c24 <main+0x334>)
  huart1.Init.BaudRate = 250000;
 8004a70:	4b6d      	ldr	r3, [pc, #436]	; (8004c28 <main+0x338>)
 8004a72:	4a6e      	ldr	r2, [pc, #440]	; (8004c2c <main+0x33c>)
  huart1.Init.StopBits = UART_STOPBITS_2;
 8004a74:	e9c0 4902 	strd	r4, r9, [r0, #8]
  huart1.Init.BaudRate = 250000;
 8004a78:	e9c0 2300 	strd	r2, r3, [r0]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004a7c:	e9c0 7405 	strd	r7, r4, [r0, #20]
  huart1.Init.Parity = UART_PARITY_NONE;
 8004a80:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8004a82:	61c4      	str	r4, [r0, #28]
  if (HAL_HalfDuplex_Init(&huart1) != HAL_OK)
 8004a84:	f7fd ffd4 	bl	8002a30 <HAL_HalfDuplex_Init>
  HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8004a88:	4622      	mov	r2, r4
 8004a8a:	4621      	mov	r1, r4
 8004a8c:	2025      	movs	r0, #37	; 0x25
 8004a8e:	f7fc f87d 	bl	8000b8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART1_IRQn);
 8004a92:	2025      	movs	r0, #37	; 0x25
 8004a94:	f7fc f8ae 	bl	8000bf4 <HAL_NVIC_EnableIRQ>
  huart3.Init.BaudRate = 115200;
 8004a98:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  huart3.Instance = USART3;
 8004a9c:	4864      	ldr	r0, [pc, #400]	; (8004c30 <main+0x340>)
  huart3.Init.BaudRate = 115200;
 8004a9e:	4965      	ldr	r1, [pc, #404]	; (8004c34 <main+0x344>)
  huart3.Init.Mode = UART_MODE_TX_RX;
 8004aa0:	e9c0 4704 	strd	r4, r7, [r0, #16]
  huart3.Init.BaudRate = 115200;
 8004aa4:	e9c0 1300 	strd	r1, r3, [r0]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8004aa8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8004aac:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8004ab0:	f7fd ff90 	bl	80029d4 <HAL_UART_Init>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004ab4:	4b60      	ldr	r3, [pc, #384]	; (8004c38 <main+0x348>)
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004ab6:	f44f 7a82 	mov.w	sl, #260	; 0x104
 8004aba:	f8c3 8004 	str.w	r8, [r3, #4]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8004abe:	f44f 7900 	mov.w	r9, #512	; 0x200
 8004ac2:	f04f 0820 	mov.w	r8, #32
  hspi1.Init.CRCPolynomial = 10;
 8004ac6:	270a      	movs	r7, #10
  __HAL_RCC_SPI1_CLK_ENABLE();
 8004ac8:	69ab      	ldr	r3, [r5, #24]
  hspi1.Instance = SPI1;
 8004aca:	485c      	ldr	r0, [pc, #368]	; (8004c3c <main+0x34c>)
  __HAL_RCC_SPI1_CLK_ENABLE();
 8004acc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004ad0:	61ab      	str	r3, [r5, #24]
 8004ad2:	69ab      	ldr	r3, [r5, #24]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8004ad4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  __HAL_RCC_SPI1_CLK_ENABLE();
 8004ad8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004adc:	9306      	str	r3, [sp, #24]
 8004ade:	9b06      	ldr	r3, [sp, #24]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004ae0:	4b57      	ldr	r3, [pc, #348]	; (8004c40 <main+0x350>)
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8004ae2:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004ae6:	e9c0 3a00 	strd	r3, sl, [r0]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8004aea:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004aee:	6284      	str	r4, [r0, #40]	; 0x28
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8004af0:	e9c0 9806 	strd	r9, r8, [r0, #24]
  hspi1.Init.CRCPolynomial = 10;
 8004af4:	62c7      	str	r7, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004af6:	f7fd fb21 	bl	800213c <HAL_SPI_Init>
  __HAL_RCC_SPI2_CLK_ENABLE();
 8004afa:	69eb      	ldr	r3, [r5, #28]
  hspi2.Instance = SPI2;
 8004afc:	4851      	ldr	r0, [pc, #324]	; (8004c44 <main+0x354>)
  __HAL_RCC_SPI2_CLK_ENABLE();
 8004afe:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004b02:	61eb      	str	r3, [r5, #28]
 8004b04:	69eb      	ldr	r3, [r5, #28]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8004b06:	e9c0 4402 	strd	r4, r4, [r0, #8]
  __HAL_RCC_SPI2_CLK_ENABLE();
 8004b0a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004b0e:	9301      	str	r3, [sp, #4]
 8004b10:	9b01      	ldr	r3, [sp, #4]
  hspi2.Instance = SPI2;
 8004b12:	4b4d      	ldr	r3, [pc, #308]	; (8004c48 <main+0x358>)
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8004b14:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8004b18:	e9c0 3a00 	strd	r3, sl, [r0]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8004b1c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi2.Init.CRCPolynomial = 10;
 8004b20:	e9c0 470a 	strd	r4, r7, [r0, #40]	; 0x28
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8004b24:	e9c0 9806 	strd	r9, r8, [r0, #24]
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8004b28:	f7fd fb08 	bl	800213c <HAL_SPI_Init>
  __HAL_RCC_DMA1_CLK_ENABLE();
 8004b2c:	696b      	ldr	r3, [r5, #20]
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 8004b2e:	4622      	mov	r2, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 8004b30:	4333      	orrs	r3, r6
 8004b32:	616b      	str	r3, [r5, #20]
 8004b34:	696b      	ldr	r3, [r5, #20]
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 8004b36:	4621      	mov	r1, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 8004b38:	4033      	ands	r3, r6
 8004b3a:	9300      	str	r3, [sp, #0]
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 8004b3c:	200d      	movs	r0, #13
  __HAL_RCC_DMA1_CLK_ENABLE();
 8004b3e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 8004b40:	f7fc f824 	bl	8000b8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8004b44:	200d      	movs	r0, #13
 8004b46:	f7fc f855 	bl	8000bf4 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 8004b4a:	4622      	mov	r2, r4
 8004b4c:	4621      	mov	r1, r4
 8004b4e:	200e      	movs	r0, #14
 8004b50:	f7fc f81c 	bl	8000b8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 8004b54:	200e      	movs	r0, #14
 8004b56:	f7fc f84d 	bl	8000bf4 <HAL_NVIC_EnableIRQ>
  print("");
 8004b5a:	483c      	ldr	r0, [pc, #240]	; (8004c4c <main+0x35c>)
 8004b5c:	f000 fde4 	bl	8005728 <print>
  print("-------------");
 8004b60:	483b      	ldr	r0, [pc, #236]	; (8004c50 <main+0x360>)
 8004b62:	f000 fde1 	bl	8005728 <print>
  print("DMX CTRL V1.0");
 8004b66:	483b      	ldr	r0, [pc, #236]	; (8004c54 <main+0x364>)
 8004b68:	f000 fdde 	bl	8005728 <print>
  print("-------------");
 8004b6c:	4838      	ldr	r0, [pc, #224]	; (8004c50 <main+0x360>)
 8004b6e:	f000 fddb 	bl	8005728 <print>
  print("");
 8004b72:	4836      	ldr	r0, [pc, #216]	; (8004c4c <main+0x35c>)
 8004b74:	f000 fdd8 	bl	8005728 <print>
 if(__HAL_RCC_GET_FLAG(RCC_FLAG_IWDGRST) == SET)
 8004b78:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 dmx512_init(get_mode_from_pins(),get_addr_from_pins()*2);  //Address x2 so we can spread out the 8 Jumpers over 512 Addresses
 8004b7a:	f7ff fc61 	bl	8004440 <get_mode_from_pins>
 8004b7e:	4604      	mov	r4, r0
 8004b80:	f7ff fc74 	bl	800446c <get_addr_from_pins>
 8004b84:	fa00 f106 	lsl.w	r1, r0, r6
 8004b88:	4620      	mov	r0, r4
 8004b8a:	f7ff f9f9 	bl	8003f80 <dmx512_init>
 print("DMX512 Config complete");
 8004b8e:	4832      	ldr	r0, [pc, #200]	; (8004c58 <main+0x368>)
 8004b90:	f000 fdca 	bl	8005728 <print>
 if ((get_mode_from_pins() & 0x02) != 0)
 8004b94:	f7ff fc54 	bl	8004440 <get_mode_from_pins>
 8004b98:	0780      	lsls	r0, r0, #30
 8004b9a:	d506      	bpl.n	8004baa <main+0x2ba>
	 USB_Active = 1;
 8004b9c:	4b2f      	ldr	r3, [pc, #188]	; (8004c5c <main+0x36c>)
 8004b9e:	701e      	strb	r6, [r3, #0]
	 MX_USB_DEVICE_Init();
 8004ba0:	f001 fc00 	bl	80063a4 <MX_USB_DEVICE_Init>
	 print("USB Enabled");
 8004ba4:	482e      	ldr	r0, [pc, #184]	; (8004c60 <main+0x370>)
 8004ba6:	f000 fdbf 	bl	8005728 <print>
 if(ring_buffer_init(&rx_buff, RX_BUFF_SIZE) != RB_OK)
 8004baa:	2180      	movs	r1, #128	; 0x80
 8004bac:	482d      	ldr	r0, [pc, #180]	; (8004c64 <main+0x374>)
 8004bae:	f000 f9ef 	bl	8004f90 <ring_buffer_init>
 8004bb2:	2800      	cmp	r0, #0
 8004bb4:	f000 80bf 	beq.w	8004d36 <main+0x446>
	 print("Ring Buffer Init FAILED");
 8004bb8:	482b      	ldr	r0, [pc, #172]	; (8004c68 <main+0x378>)
	 print("Ring Buffer Init Complete");
 8004bba:	f000 fdb5 	bl	8005728 <print>
  init_timers();
 8004bbe:	f000 f99f 	bl	8004f00 <init_timers>
  print("Timer Init complete");
 8004bc2:	482a      	ldr	r0, [pc, #168]	; (8004c6c <main+0x37c>)
 8004bc4:	f000 fdb0 	bl	8005728 <print>
  init_settings();
 8004bc8:	f000 fb04 	bl	80051d4 <init_settings>
  if (0 == check_button())
 8004bcc:	f7ff fc94 	bl	80044f8 <check_button>
 8004bd0:	4d27      	ldr	r5, [pc, #156]	; (8004c70 <main+0x380>)
 8004bd2:	2800      	cmp	r0, #0
 8004bd4:	f040 80b1 	bne.w	8004d3a <main+0x44a>
	  load_settings();
 8004bd8:	f000 fba6 	bl	8005328 <load_settings>
	  UART_mode_SERIAL = settings.UART_Mode_UART;
 8004bdc:	4b25      	ldr	r3, [pc, #148]	; (8004c74 <main+0x384>)
	  print("Setting loaded");
 8004bde:	4826      	ldr	r0, [pc, #152]	; (8004c78 <main+0x388>)
	  UART_mode_SERIAL = settings.UART_Mode_UART;
 8004be0:	f893 202a 	ldrb.w	r2, [r3, #42]	; 0x2a
 8004be4:	702a      	strb	r2, [r5, #0]
	  UART_mode_USB = settings.UART_Mode_USB;
 8004be6:	f893 202b 	ldrb.w	r2, [r3, #43]	; 0x2b
 8004bea:	4b24      	ldr	r3, [pc, #144]	; (8004c7c <main+0x38c>)
 8004bec:	701a      	strb	r2, [r3, #0]
	  print("Defaults restored");
 8004bee:	f000 fd9b 	bl	8005728 <print>
  apply_settings();
 8004bf2:	f000 fb21 	bl	8005238 <apply_settings>
  print("Settings complete");
 8004bf6:	4822      	ldr	r0, [pc, #136]	; (8004c80 <main+0x390>)
 8004bf8:	f000 fd96 	bl	8005728 <print>
  dmx512_rec_init();
 8004bfc:	f7ff face 	bl	800419c <dmx512_rec_init>
 8004c00:	e040      	b.n	8004c84 <main+0x394>
 8004c02:	bf00      	nop
 8004c04:	40021000 	.word	0x40021000
 8004c08:	40010c00 	.word	0x40010c00
 8004c0c:	40011000 	.word	0x40011000
 8004c10:	40010800 	.word	0x40010800
 8004c14:	20000be0 	.word	0x20000be0
 8004c18:	40012400 	.word	0x40012400
 8004c1c:	20000b6c 	.word	0x20000b6c
 8004c20:	40012800 	.word	0x40012800
 8004c24:	20000c10 	.word	0x20000c10
 8004c28:	0003d090 	.word	0x0003d090
 8004c2c:	40013800 	.word	0x40013800
 8004c30:	20000b2c 	.word	0x20000b2c
 8004c34:	40004800 	.word	0x40004800
 8004c38:	e000e100 	.word	0xe000e100
 8004c3c:	20000c50 	.word	0x20000c50
 8004c40:	40013000 	.word	0x40013000
 8004c44:	20000abc 	.word	0x20000abc
 8004c48:	40003800 	.word	0x40003800
 8004c4c:	080080f0 	.word	0x080080f0
 8004c50:	08008132 	.word	0x08008132
 8004c54:	08007ad2 	.word	0x08007ad2
 8004c58:	08007ae0 	.word	0x08007ae0
 8004c5c:	20000422 	.word	0x20000422
 8004c60:	08007af7 	.word	0x08007af7
 8004c64:	20000b14 	.word	0x20000b14
 8004c68:	08007b03 	.word	0x08007b03
 8004c6c:	08007b35 	.word	0x08007b35
 8004c70:	20000420 	.word	0x20000420
 8004c74:	20000a70 	.word	0x20000a70
 8004c78:	08007b49 	.word	0x08007b49
 8004c7c:	20000421 	.word	0x20000421
 8004c80:	08007b6a 	.word	0x08007b6a
  print("DMX512 Init complete");
 8004c84:	4840      	ldr	r0, [pc, #256]	; (8004d88 <main+0x498>)
 8004c86:	f000 fd4f 	bl	8005728 <print>
  if (DMX_MODE2 == get_mode())
 8004c8a:	f7ff f95b 	bl	8003f44 <get_mode>
 8004c8e:	2801      	cmp	r0, #1
 8004c90:	d15f      	bne.n	8004d52 <main+0x462>
	  print("FX Installation Start");
 8004c92:	483e      	ldr	r0, [pc, #248]	; (8004d8c <main+0x49c>)
     if (WS2812B_init(CH1,settings.strip1_length))
 8004c94:	4c3e      	ldr	r4, [pc, #248]	; (8004d90 <main+0x4a0>)
	  print("FX Installation Start");
 8004c96:	f000 fd47 	bl	8005728 <print>
	  init_fx_list();
 8004c9a:	f7ff faed 	bl	8004278 <init_fx_list>
	  install_fx();
 8004c9e:	f7ff fb2f 	bl	8004300 <install_fx>
	  print("FX Installation Finished");
 8004ca2:	483c      	ldr	r0, [pc, #240]	; (8004d94 <main+0x4a4>)
 8004ca4:	f000 fd40 	bl	8005728 <print>
     if (WS2812B_init(CH1,settings.strip1_length))
 8004ca8:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8004caa:	2000      	movs	r0, #0
 8004cac:	f001 ffde 	bl	8006c6c <WS2812B_init>
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	d046      	beq.n	8004d42 <main+0x452>
	   print("WS2812B CH1 Init complete");
 8004cb4:	4838      	ldr	r0, [pc, #224]	; (8004d98 <main+0x4a8>)
 8004cb6:	f000 fd37 	bl	8005728 <print>
	   WS2812B_clear(CH1);
 8004cba:	2000      	movs	r0, #0
 8004cbc:	f001 ffba 	bl	8006c34 <WS2812B_clear>
	   WS2812B_show(CH1);
 8004cc0:	2000      	movs	r0, #0
 8004cc2:	f001 ff4b 	bl	8006b5c <WS2812B_show>
     if (WS2812B_init(CH2,settings.strip1_length))
 8004cc6:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8004cc8:	2001      	movs	r0, #1
 8004cca:	f001 ffcf 	bl	8006c6c <WS2812B_init>
 8004cce:	2800      	cmp	r0, #0
 8004cd0:	d03b      	beq.n	8004d4a <main+0x45a>
	   print("WS2812B CH2 Init complete");
 8004cd2:	4832      	ldr	r0, [pc, #200]	; (8004d9c <main+0x4ac>)
 8004cd4:	f000 fd28 	bl	8005728 <print>
	   WS2812B_clear(CH2);
 8004cd8:	2001      	movs	r0, #1
 8004cda:	f001 ffab 	bl	8006c34 <WS2812B_clear>
	   WS2812B_show(CH2);
 8004cde:	2001      	movs	r0, #1
 8004ce0:	f001 ff3c 	bl	8006b5c <WS2812B_show>
     print("DMX Mode 2 Active");
 8004ce4:	482e      	ldr	r0, [pc, #184]	; (8004da0 <main+0x4b0>)
	  print("DMX Mode 1 Active");
 8004ce6:	f000 fd1f 	bl	8005728 <print>
  init_update_lights();
 8004cea:	f7ff fdaf 	bl	800484c <init_update_lights>
  print("PWM Update Init complete");
 8004cee:	482d      	ldr	r0, [pc, #180]	; (8004da4 <main+0x4b4>)
 8004cf0:	f000 fd1a 	bl	8005728 <print>
  init_trigger();
 8004cf4:	f001 faa8 	bl	8006248 <init_trigger>
  print("Trigger Init complete");
 8004cf8:	482b      	ldr	r0, [pc, #172]	; (8004da8 <main+0x4b8>)
 8004cfa:	f000 fd15 	bl	8005728 <print>
  print("Shell Active");
 8004cfe:	482b      	ldr	r0, [pc, #172]	; (8004dac <main+0x4bc>)
 8004d00:	f000 fd12 	bl	8005728 <print>
  print_no_newline("DBG>");
 8004d04:	482a      	ldr	r0, [pc, #168]	; (8004db0 <main+0x4c0>)
 8004d06:	f000 fd2f 	bl	8005768 <print_no_newline>
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8004d0a:	2201      	movs	r2, #1
 8004d0c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004d10:	4828      	ldr	r0, [pc, #160]	; (8004db4 <main+0x4c4>)
 8004d12:	f7fc faf1 	bl	80012f8 <HAL_GPIO_WritePin>
	if (testmode)
 8004d16:	4c28      	ldr	r4, [pc, #160]	; (8004db8 <main+0x4c8>)
	if (UART_mode_SERIAL == (uint8_t)UART_MODE_SHELL)
 8004d18:	782b      	ldrb	r3, [r5, #0]
 8004d1a:	b9e3      	cbnz	r3, 8004d56 <main+0x466>
		shell_process();
 8004d1c:	f000 fd3e 	bl	800579c <shell_process>
	if (testmode)
 8004d20:	7823      	ldrb	r3, [r4, #0]
 8004d22:	b1db      	cbz	r3, 8004d5c <main+0x46c>
		testmode = process_testmode();
 8004d24:	f001 f9f6 	bl	8006114 <process_testmode>
 8004d28:	7020      	strb	r0, [r4, #0]
		if (testmode == 0)
 8004d2a:	2800      	cmp	r0, #0
 8004d2c:	d1f4      	bne.n	8004d18 <main+0x428>
			update_pwm_lights(1);
 8004d2e:	2001      	movs	r0, #1
		update_pwm_lights(0);
 8004d30:	f7ff fc18 	bl	8004564 <update_pwm_lights>
 8004d34:	e7f0      	b.n	8004d18 <main+0x428>
	 print("Ring Buffer Init Complete");
 8004d36:	4821      	ldr	r0, [pc, #132]	; (8004dbc <main+0x4cc>)
 8004d38:	e73f      	b.n	8004bba <main+0x2ca>
	  save_settings();
 8004d3a:	f000 fafd 	bl	8005338 <save_settings>
	  print("Defaults restored");
 8004d3e:	4820      	ldr	r0, [pc, #128]	; (8004dc0 <main+0x4d0>)
 8004d40:	e755      	b.n	8004bee <main+0x2fe>
	   print("WS2812B CH1 Init FAILED");
 8004d42:	4820      	ldr	r0, [pc, #128]	; (8004dc4 <main+0x4d4>)
 8004d44:	f000 fcf0 	bl	8005728 <print>
 8004d48:	e7bd      	b.n	8004cc6 <main+0x3d6>
	   print("WS2812B CH2 Init FAILED");
 8004d4a:	481f      	ldr	r0, [pc, #124]	; (8004dc8 <main+0x4d8>)
 8004d4c:	f000 fcec 	bl	8005728 <print>
 8004d50:	e7c8      	b.n	8004ce4 <main+0x3f4>
	  print("DMX Mode 1 Active");
 8004d52:	481e      	ldr	r0, [pc, #120]	; (8004dcc <main+0x4dc>)
 8004d54:	e7c7      	b.n	8004ce6 <main+0x3f6>
		dmx_serial_process();
 8004d56:	f000 f99f 	bl	8005098 <dmx_serial_process>
 8004d5a:	e7e1      	b.n	8004d20 <main+0x430>
		if (1 == check_button())
 8004d5c:	f7ff fbcc 	bl	80044f8 <check_button>
 8004d60:	2801      	cmp	r0, #1
			testmode = 1;
 8004d62:	bf08      	it	eq
 8004d64:	7020      	strbeq	r0, [r4, #0]
		process_trigger();
 8004d66:	f001 fa8f 	bl	8006288 <process_trigger>
		if (DMX_MODE2 == get_mode())
 8004d6a:	f7ff f8eb 	bl	8003f44 <get_mode>
 8004d6e:	2801      	cmp	r0, #1
 8004d70:	4606      	mov	r6, r0
 8004d72:	d107      	bne.n	8004d84 <main+0x494>
			run_fx();
 8004d74:	f7ff fb2c 	bl	80043d0 <run_fx>
			WS2812B_show(CH1);
 8004d78:	2000      	movs	r0, #0
 8004d7a:	f001 feef 	bl	8006b5c <WS2812B_show>
			WS2812B_show(CH2);
 8004d7e:	4630      	mov	r0, r6
 8004d80:	f001 feec 	bl	8006b5c <WS2812B_show>
		update_pwm_lights(0);
 8004d84:	2000      	movs	r0, #0
 8004d86:	e7d3      	b.n	8004d30 <main+0x440>
 8004d88:	08007b7c 	.word	0x08007b7c
 8004d8c:	08007b91 	.word	0x08007b91
 8004d90:	20000a70 	.word	0x20000a70
 8004d94:	08007ba7 	.word	0x08007ba7
 8004d98:	08007bc0 	.word	0x08007bc0
 8004d9c:	08007bf2 	.word	0x08007bf2
 8004da0:	08007c24 	.word	0x08007c24
 8004da4:	08007c48 	.word	0x08007c48
 8004da8:	08007c61 	.word	0x08007c61
 8004dac:	08007c77 	.word	0x08007c77
 8004db0:	08007c84 	.word	0x08007c84
 8004db4:	40011000 	.word	0x40011000
 8004db8:	20000423 	.word	0x20000423
 8004dbc:	08007b1b 	.word	0x08007b1b
 8004dc0:	08007b58 	.word	0x08007b58
 8004dc4:	08007bda 	.word	0x08007bda
 8004dc8:	08007c0c 	.word	0x08007c0c
 8004dcc:	08007c36 	.word	0x08007c36

08004dd0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8004dd0:	4770      	bx	lr
	...

08004dd4 <PWM_Timer_Init>:
 8004dd4:	221c      	movs	r2, #28
 8004dd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004dda:	b08e      	sub	sp, #56	; 0x38
 8004ddc:	4606      	mov	r6, r0
 8004dde:	2100      	movs	r1, #0
 8004de0:	eb0d 0002 	add.w	r0, sp, r2
 8004de4:	f002 f829 	bl	8006e3a <memset>
 8004de8:	2100      	movs	r1, #0
 8004dea:	2210      	movs	r2, #16
 8004dec:	a803      	add	r0, sp, #12
 8004dee:	e9cd 1101 	strd	r1, r1, [sp, #4]
 8004df2:	f002 f822 	bl	8006e3a <memset>
 8004df6:	2e01      	cmp	r6, #1
 8004df8:	4c38      	ldr	r4, [pc, #224]	; (8004edc <PWM_Timer_Init+0x108>)
 8004dfa:	d067      	beq.n	8004ecc <PWM_Timer_Init+0xf8>
 8004dfc:	d362      	bcc.n	8004ec4 <PWM_Timer_Init+0xf0>
 8004dfe:	2e02      	cmp	r6, #2
 8004e00:	d067      	beq.n	8004ed2 <PWM_Timer_Init+0xfe>
 8004e02:	2300      	movs	r3, #0
 8004e04:	f240 422a 	movw	r2, #1066	; 0x42a
 8004e08:	eb04 1486 	add.w	r4, r4, r6, lsl #6
 8004e0c:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8004e10:	e9c4 2303 	strd	r2, r3, [r4, #12]
 8004e14:	6163      	str	r3, [r4, #20]
 8004e16:	4620      	mov	r0, r4
 8004e18:	f7fd fbe0 	bl	80025dc <HAL_TIM_Base_Init>
 8004e1c:	b110      	cbz	r0, 8004e24 <PWM_Timer_Init+0x50>
 8004e1e:	4830      	ldr	r0, [pc, #192]	; (8004ee0 <PWM_Timer_Init+0x10c>)
 8004e20:	f000 fc82 	bl	8005728 <print>
 8004e24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004e28:	a903      	add	r1, sp, #12
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	9303      	str	r3, [sp, #12]
 8004e2e:	f7fd fca1 	bl	8002774 <HAL_TIM_ConfigClockSource>
 8004e32:	b110      	cbz	r0, 8004e3a <PWM_Timer_Init+0x66>
 8004e34:	482b      	ldr	r0, [pc, #172]	; (8004ee4 <PWM_Timer_Init+0x110>)
 8004e36:	f000 fc77 	bl	8005728 <print>
 8004e3a:	4620      	mov	r0, r4
 8004e3c:	f7fd fbe8 	bl	8002610 <HAL_TIM_PWM_Init>
 8004e40:	b110      	cbz	r0, 8004e48 <PWM_Timer_Init+0x74>
 8004e42:	4829      	ldr	r0, [pc, #164]	; (8004ee8 <PWM_Timer_Init+0x114>)
 8004e44:	f000 fc70 	bl	8005728 <print>
 8004e48:	f240 231a 	movw	r3, #538	; 0x21a
 8004e4c:	2260      	movs	r2, #96	; 0x60
 8004e4e:	2500      	movs	r5, #0
 8004e50:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8004e54:	2304      	movs	r3, #4
 8004e56:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
 8004e5a:	4b24      	ldr	r3, [pc, #144]	; (8004eec <PWM_Timer_Init+0x118>)
 8004e5c:	e9cd 5509 	strd	r5, r5, [sp, #36]	; 0x24
 8004e60:	eb03 1706 	add.w	r7, r3, r6, lsl #4
 8004e64:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8004ef8 <PWM_Timer_Init+0x124>
 8004e68:	b276      	sxtb	r6, r6
 8004e6a:	950d      	str	r5, [sp, #52]	; 0x34
 8004e6c:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 8004e70:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8004e74:	2bff      	cmp	r3, #255	; 0xff
 8004e76:	d009      	beq.n	8004e8c <PWM_Timer_Init+0xb8>
 8004e78:	f856 2025 	ldr.w	r2, [r6, r5, lsl #2]
 8004e7c:	a907      	add	r1, sp, #28
 8004e7e:	4620      	mov	r0, r4
 8004e80:	f7fd fc0c 	bl	800269c <HAL_TIM_PWM_ConfigChannel>
 8004e84:	b110      	cbz	r0, 8004e8c <PWM_Timer_Init+0xb8>
 8004e86:	4640      	mov	r0, r8
 8004e88:	f000 fc4e 	bl	8005728 <print>
 8004e8c:	3501      	adds	r5, #1
 8004e8e:	2d04      	cmp	r5, #4
 8004e90:	d1ee      	bne.n	8004e70 <PWM_Timer_Init+0x9c>
 8004e92:	4620      	mov	r0, r4
 8004e94:	f7fd fb57 	bl	8002546 <HAL_TIM_Base_Start>
 8004e98:	2500      	movs	r5, #0
 8004e9a:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8004efc <PWM_Timer_Init+0x128>
 8004e9e:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8004ea2:	2bff      	cmp	r3, #255	; 0xff
 8004ea4:	d008      	beq.n	8004eb8 <PWM_Timer_Init+0xe4>
 8004ea6:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8004eaa:	4620      	mov	r0, r4
 8004eac:	f7fd fd20 	bl	80028f0 <HAL_TIM_PWM_Start>
 8004eb0:	b110      	cbz	r0, 8004eb8 <PWM_Timer_Init+0xe4>
 8004eb2:	4640      	mov	r0, r8
 8004eb4:	f000 fc38 	bl	8005728 <print>
 8004eb8:	3501      	adds	r5, #1
 8004eba:	2d04      	cmp	r5, #4
 8004ebc:	d1ef      	bne.n	8004e9e <PWM_Timer_Init+0xca>
 8004ebe:	b00e      	add	sp, #56	; 0x38
 8004ec0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ec4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ec8:	6023      	str	r3, [r4, #0]
 8004eca:	e79a      	b.n	8004e02 <PWM_Timer_Init+0x2e>
 8004ecc:	4b08      	ldr	r3, [pc, #32]	; (8004ef0 <PWM_Timer_Init+0x11c>)
 8004ece:	6423      	str	r3, [r4, #64]	; 0x40
 8004ed0:	e797      	b.n	8004e02 <PWM_Timer_Init+0x2e>
 8004ed2:	4b08      	ldr	r3, [pc, #32]	; (8004ef4 <PWM_Timer_Init+0x120>)
 8004ed4:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8004ed8:	e793      	b.n	8004e02 <PWM_Timer_Init+0x2e>
 8004eda:	bf00      	nop
 8004edc:	20000d30 	.word	0x20000d30
 8004ee0:	08007c89 	.word	0x08007c89
 8004ee4:	08007c9c 	.word	0x08007c9c
 8004ee8:	08007caf 	.word	0x08007caf
 8004eec:	08007ce8 	.word	0x08007ce8
 8004ef0:	40000400 	.word	0x40000400
 8004ef4:	40012c00 	.word	0x40012c00
 8004ef8:	08007cc2 	.word	0x08007cc2
 8004efc:	08007cd5 	.word	0x08007cd5

08004f00 <init_timers>:
 8004f00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004f02:	4b14      	ldr	r3, [pc, #80]	; (8004f54 <init_timers+0x54>)
 8004f04:	2000      	movs	r0, #0
 8004f06:	699a      	ldr	r2, [r3, #24]
 8004f08:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004f0c:	619a      	str	r2, [r3, #24]
 8004f0e:	699a      	ldr	r2, [r3, #24]
 8004f10:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8004f14:	9201      	str	r2, [sp, #4]
 8004f16:	9a01      	ldr	r2, [sp, #4]
 8004f18:	69da      	ldr	r2, [r3, #28]
 8004f1a:	f042 0201 	orr.w	r2, r2, #1
 8004f1e:	61da      	str	r2, [r3, #28]
 8004f20:	69da      	ldr	r2, [r3, #28]
 8004f22:	f002 0201 	and.w	r2, r2, #1
 8004f26:	9202      	str	r2, [sp, #8]
 8004f28:	9a02      	ldr	r2, [sp, #8]
 8004f2a:	69da      	ldr	r2, [r3, #28]
 8004f2c:	f042 0202 	orr.w	r2, r2, #2
 8004f30:	61da      	str	r2, [r3, #28]
 8004f32:	69db      	ldr	r3, [r3, #28]
 8004f34:	f003 0302 	and.w	r3, r3, #2
 8004f38:	9303      	str	r3, [sp, #12]
 8004f3a:	9b03      	ldr	r3, [sp, #12]
 8004f3c:	f7ff ff4a 	bl	8004dd4 <PWM_Timer_Init>
 8004f40:	2001      	movs	r0, #1
 8004f42:	f7ff ff47 	bl	8004dd4 <PWM_Timer_Init>
 8004f46:	2002      	movs	r0, #2
 8004f48:	b005      	add	sp, #20
 8004f4a:	f85d eb04 	ldr.w	lr, [sp], #4
 8004f4e:	f7ff bf41 	b.w	8004dd4 <PWM_Timer_Init>
 8004f52:	bf00      	nop
 8004f54:	40021000 	.word	0x40021000

08004f58 <configPWM>:
 8004f58:	4b0b      	ldr	r3, [pc, #44]	; (8004f88 <configPWM+0x30>)
 8004f5a:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 8004f5e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8004f62:	29ff      	cmp	r1, #255	; 0xff
 8004f64:	d00e      	beq.n	8004f84 <configPWM+0x2c>
 8004f66:	4b09      	ldr	r3, [pc, #36]	; (8004f8c <configPWM+0x34>)
 8004f68:	0180      	lsls	r0, r0, #6
 8004f6a:	581b      	ldr	r3, [r3, r0]
 8004f6c:	b909      	cbnz	r1, 8004f72 <configPWM+0x1a>
 8004f6e:	635a      	str	r2, [r3, #52]	; 0x34
 8004f70:	4770      	bx	lr
 8004f72:	2904      	cmp	r1, #4
 8004f74:	d101      	bne.n	8004f7a <configPWM+0x22>
 8004f76:	639a      	str	r2, [r3, #56]	; 0x38
 8004f78:	4770      	bx	lr
 8004f7a:	2908      	cmp	r1, #8
 8004f7c:	d101      	bne.n	8004f82 <configPWM+0x2a>
 8004f7e:	63da      	str	r2, [r3, #60]	; 0x3c
 8004f80:	4770      	bx	lr
 8004f82:	641a      	str	r2, [r3, #64]	; 0x40
 8004f84:	4770      	bx	lr
 8004f86:	bf00      	nop
 8004f88:	08007ce8 	.word	0x08007ce8
 8004f8c:	20000d30 	.word	0x20000d30

08004f90 <ring_buffer_init>:
 8004f90:	b538      	push	{r3, r4, r5, lr}
 8004f92:	460d      	mov	r5, r1
 8004f94:	2101      	movs	r1, #1
 8004f96:	4604      	mov	r4, r0
 8004f98:	7501      	strb	r1, [r0, #20]
 8004f9a:	4628      	mov	r0, r5
 8004f9c:	f001 ff00 	bl	8006da0 <calloc>
 8004fa0:	6020      	str	r0, [r4, #0]
 8004fa2:	6823      	ldr	r3, [r4, #0]
 8004fa4:	b12b      	cbz	r3, 8004fb2 <ring_buffer_init+0x22>
 8004fa6:	2300      	movs	r3, #0
 8004fa8:	6065      	str	r5, [r4, #4]
 8004faa:	60a3      	str	r3, [r4, #8]
 8004fac:	60e3      	str	r3, [r4, #12]
 8004fae:	6123      	str	r3, [r4, #16]
 8004fb0:	7523      	strb	r3, [r4, #20]
 8004fb2:	7d20      	ldrb	r0, [r4, #20]
 8004fb4:	bd38      	pop	{r3, r4, r5, pc}

08004fb6 <ring_buffer_get>:
 8004fb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004fb8:	460b      	mov	r3, r1
 8004fba:	4615      	mov	r5, r2
 8004fbc:	4604      	mov	r4, r0
 8004fbe:	b350      	cbz	r0, 8005016 <ring_buffer_get+0x60>
 8004fc0:	6902      	ldr	r2, [r0, #16]
 8004fc2:	4295      	cmp	r5, r2
 8004fc4:	d829      	bhi.n	800501a <ring_buffer_get+0x64>
 8004fc6:	68c1      	ldr	r1, [r0, #12]
 8004fc8:	6842      	ldr	r2, [r0, #4]
 8004fca:	4291      	cmp	r1, r2
 8004fcc:	bf24      	itt	cs
 8004fce:	2200      	movcs	r2, #0
 8004fd0:	60c2      	strcs	r2, [r0, #12]
 8004fd2:	6846      	ldr	r6, [r0, #4]
 8004fd4:	68c2      	ldr	r2, [r0, #12]
 8004fd6:	6800      	ldr	r0, [r0, #0]
 8004fd8:	1ab6      	subs	r6, r6, r2
 8004fda:	42b5      	cmp	r5, r6
 8004fdc:	68e1      	ldr	r1, [r4, #12]
 8004fde:	d311      	bcc.n	8005004 <ring_buffer_get+0x4e>
 8004fe0:	4401      	add	r1, r0
 8004fe2:	4632      	mov	r2, r6
 8004fe4:	4618      	mov	r0, r3
 8004fe6:	f001 ff1d 	bl	8006e24 <memcpy>
 8004fea:	1baf      	subs	r7, r5, r6
 8004fec:	6821      	ldr	r1, [r4, #0]
 8004fee:	463a      	mov	r2, r7
 8004ff0:	4430      	add	r0, r6
 8004ff2:	f001 ff17 	bl	8006e24 <memcpy>
 8004ff6:	60e7      	str	r7, [r4, #12]
 8004ff8:	2000      	movs	r0, #0
 8004ffa:	6923      	ldr	r3, [r4, #16]
 8004ffc:	1b5d      	subs	r5, r3, r5
 8004ffe:	6125      	str	r5, [r4, #16]
 8005000:	7520      	strb	r0, [r4, #20]
 8005002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005004:	4401      	add	r1, r0
 8005006:	462a      	mov	r2, r5
 8005008:	4618      	mov	r0, r3
 800500a:	f001 ff0b 	bl	8006e24 <memcpy>
 800500e:	68e3      	ldr	r3, [r4, #12]
 8005010:	442b      	add	r3, r5
 8005012:	60e3      	str	r3, [r4, #12]
 8005014:	e7f0      	b.n	8004ff8 <ring_buffer_get+0x42>
 8005016:	2001      	movs	r0, #1
 8005018:	e7f2      	b.n	8005000 <ring_buffer_get+0x4a>
 800501a:	2005      	movs	r0, #5
 800501c:	e7f0      	b.n	8005000 <ring_buffer_get+0x4a>

0800501e <ring_buffer_free_elements>:
 800501e:	b110      	cbz	r0, 8005026 <ring_buffer_free_elements+0x8>
 8005020:	6843      	ldr	r3, [r0, #4]
 8005022:	6900      	ldr	r0, [r0, #16]
 8005024:	1a18      	subs	r0, r3, r0
 8005026:	4770      	bx	lr

08005028 <ring_buffer_put>:
 8005028:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800502c:	460f      	mov	r7, r1
 800502e:	4615      	mov	r5, r2
 8005030:	4604      	mov	r4, r0
 8005032:	b360      	cbz	r0, 800508e <ring_buffer_put+0x66>
 8005034:	f7ff fff3 	bl	800501e <ring_buffer_free_elements>
 8005038:	4290      	cmp	r0, r2
 800503a:	d32a      	bcc.n	8005092 <ring_buffer_put+0x6a>
 800503c:	68a2      	ldr	r2, [r4, #8]
 800503e:	6863      	ldr	r3, [r4, #4]
 8005040:	429a      	cmp	r2, r3
 8005042:	bf24      	itt	cs
 8005044:	2300      	movcs	r3, #0
 8005046:	60a3      	strcs	r3, [r4, #8]
 8005048:	6866      	ldr	r6, [r4, #4]
 800504a:	68a3      	ldr	r3, [r4, #8]
 800504c:	6820      	ldr	r0, [r4, #0]
 800504e:	1af6      	subs	r6, r6, r3
 8005050:	42b5      	cmp	r5, r6
 8005052:	68a3      	ldr	r3, [r4, #8]
 8005054:	d913      	bls.n	800507e <ring_buffer_put+0x56>
 8005056:	4632      	mov	r2, r6
 8005058:	4418      	add	r0, r3
 800505a:	eba5 0806 	sub.w	r8, r5, r6
 800505e:	f001 fee1 	bl	8006e24 <memcpy>
 8005062:	6820      	ldr	r0, [r4, #0]
 8005064:	4642      	mov	r2, r8
 8005066:	19b9      	adds	r1, r7, r6
 8005068:	f001 fedc 	bl	8006e24 <memcpy>
 800506c:	f8c4 8008 	str.w	r8, [r4, #8]
 8005070:	2000      	movs	r0, #0
 8005072:	6923      	ldr	r3, [r4, #16]
 8005074:	441d      	add	r5, r3
 8005076:	6125      	str	r5, [r4, #16]
 8005078:	7520      	strb	r0, [r4, #20]
 800507a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800507e:	4418      	add	r0, r3
 8005080:	462a      	mov	r2, r5
 8005082:	f001 fecf 	bl	8006e24 <memcpy>
 8005086:	68a3      	ldr	r3, [r4, #8]
 8005088:	442b      	add	r3, r5
 800508a:	60a3      	str	r3, [r4, #8]
 800508c:	e7f0      	b.n	8005070 <ring_buffer_put+0x48>
 800508e:	2001      	movs	r0, #1
 8005090:	e7f2      	b.n	8005078 <ring_buffer_put+0x50>
 8005092:	2004      	movs	r0, #4
 8005094:	e7f0      	b.n	8005078 <ring_buffer_put+0x50>
	...

08005098 <dmx_serial_process>:
uint8_t escaped = 0;

#define ESC_CHAR 0x5C

void dmx_serial_process(void)
{
 8005098:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
	uint8_t data;
	uint32_t regsize =  get_reg_length();
 800509c:	f7fe ff58 	bl	8003f50 <get_reg_length>
 80050a0:	4605      	mov	r5, r0

	while ((RB_OK == ring_buffer_get(&rx_buff, &data, 1)) && (reg_count<regsize) && (syncstart == 1))
 80050a2:	4f33      	ldr	r7, [pc, #204]	; (8005170 <dmx_serial_process+0xd8>)
 80050a4:	4e33      	ldr	r6, [pc, #204]	; (8005174 <dmx_serial_process+0xdc>)
 80050a6:	2201      	movs	r2, #1
 80050a8:	f10d 0107 	add.w	r1, sp, #7
 80050ac:	4638      	mov	r0, r7
 80050ae:	f7ff ff82 	bl	8004fb6 <ring_buffer_get>
 80050b2:	4c31      	ldr	r4, [pc, #196]	; (8005178 <dmx_serial_process+0xe0>)
 80050b4:	b990      	cbnz	r0, 80050dc <dmx_serial_process+0x44>
 80050b6:	8820      	ldrh	r0, [r4, #0]
 80050b8:	42a8      	cmp	r0, r5
 80050ba:	d20f      	bcs.n	80050dc <dmx_serial_process+0x44>
 80050bc:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 800517c <dmx_serial_process+0xe4>
 80050c0:	f898 3000 	ldrb.w	r3, [r8]
 80050c4:	2b01      	cmp	r3, #1
 80050c6:	d109      	bne.n	80050dc <dmx_serial_process+0x44>
	{
		if ((data == ESC_CHAR) && (escaped == 0))
 80050c8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80050cc:	f896 9000 	ldrb.w	r9, [r6]
 80050d0:	295c      	cmp	r1, #92	; 0x5c
 80050d2:	d11b      	bne.n	800510c <dmx_serial_process+0x74>
 80050d4:	f1b9 0f00 	cmp.w	r9, #0
 80050d8:	d12c      	bne.n	8005134 <dmx_serial_process+0x9c>
					reg_count++;
					break;
				default:			//Everything else we just ignore
					break;
			}
			escaped = 0;
 80050da:	7033      	strb	r3, [r6, #0]
			return;
		}
	}

	//If we have exceeded the number of registers or haven't synced yet just pull a byte
	if ((reg_count>=regsize) || (syncstart == 0))
 80050dc:	8823      	ldrh	r3, [r4, #0]
 80050de:	42ab      	cmp	r3, r5
 80050e0:	d202      	bcs.n	80050e8 <dmx_serial_process+0x50>
 80050e2:	4b26      	ldr	r3, [pc, #152]	; (800517c <dmx_serial_process+0xe4>)
 80050e4:	781b      	ldrb	r3, [r3, #0]
 80050e6:	bb13      	cbnz	r3, 800512e <dmx_serial_process+0x96>
	{
		if (RB_OK == ring_buffer_get(&rx_buff, &data, 1))
 80050e8:	2201      	movs	r2, #1
 80050ea:	f10d 0107 	add.w	r1, sp, #7
 80050ee:	4820      	ldr	r0, [pc, #128]	; (8005170 <dmx_serial_process+0xd8>)
 80050f0:	f7ff ff61 	bl	8004fb6 <ring_buffer_get>
 80050f4:	b9d8      	cbnz	r0, 800512e <dmx_serial_process+0x96>
		{
			//If it happens to be the escape byte we go into escape mode
			if ((data == ESC_CHAR) && (escaped == 0))
 80050f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80050fa:	4a1e      	ldr	r2, [pc, #120]	; (8005174 <dmx_serial_process+0xdc>)
 80050fc:	2b5c      	cmp	r3, #92	; 0x5c
 80050fe:	7811      	ldrb	r1, [r2, #0]
 8005100:	4610      	mov	r0, r2
 8005102:	d128      	bne.n	8005156 <dmx_serial_process+0xbe>
 8005104:	bb61      	cbnz	r1, 8005160 <dmx_serial_process+0xc8>
			{
				escaped = 1;
 8005106:	2301      	movs	r3, #1
 8005108:	7013      	strb	r3, [r2, #0]
				return;
 800510a:	e010      	b.n	800512e <dmx_serial_process+0x96>
		if (escaped)
 800510c:	f1b9 0f00 	cmp.w	r9, #0
 8005110:	d016      	beq.n	8005140 <dmx_serial_process+0xa8>
			switch (data)
 8005112:	296d      	cmp	r1, #109	; 0x6d
 8005114:	d005      	beq.n	8005122 <dmx_serial_process+0x8a>
 8005116:	b911      	cbnz	r1, 800511e <dmx_serial_process+0x86>
					reg_count = 0;
 8005118:	8021      	strh	r1, [r4, #0]
					syncstart = 1;
 800511a:	f888 3000 	strb.w	r3, [r8]
			escaped = 0;
 800511e:	2300      	movs	r3, #0
 8005120:	e7db      	b.n	80050da <dmx_serial_process+0x42>
					UART_mode_SERIAL = (int)UART_MODE_SHELL;
 8005122:	2300      	movs	r3, #0
 8005124:	4a16      	ldr	r2, [pc, #88]	; (8005180 <dmx_serial_process+0xe8>)
					reg_count = 0;
 8005126:	8023      	strh	r3, [r4, #0]
					UART_mode_SERIAL = (int)UART_MODE_SHELL;
 8005128:	6013      	str	r3, [r2, #0]
					syncstart = 0;
 800512a:	4a14      	ldr	r2, [pc, #80]	; (800517c <dmx_serial_process+0xe4>)
 800512c:	7013      	strb	r3, [r2, #0]
		else
		{
			return;
		}
	}
}
 800512e:	b003      	add	sp, #12
 8005130:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					set_reg(reg_count, ESC_CHAR);
 8005134:	f7fe ff3c 	bl	8003fb0 <set_reg>
					reg_count++;
 8005138:	8823      	ldrh	r3, [r4, #0]
 800513a:	3301      	adds	r3, #1
 800513c:	8023      	strh	r3, [r4, #0]
					break;
 800513e:	e7ee      	b.n	800511e <dmx_serial_process+0x86>
		set_reg(reg_count, data);
 8005140:	f7fe ff36 	bl	8003fb0 <set_reg>
		reg_count++;
 8005144:	8823      	ldrh	r3, [r4, #0]
 8005146:	3301      	adds	r3, #1
 8005148:	b29b      	uxth	r3, r3
		if (reg_count >=regsize)
 800514a:	42ab      	cmp	r3, r5
		reg_count++;
 800514c:	8023      	strh	r3, [r4, #0]
		if (reg_count >=regsize)
 800514e:	d3aa      	bcc.n	80050a6 <dmx_serial_process+0xe>
			syncstart = 0;
 8005150:	f888 9000 	strb.w	r9, [r8]
			return;
 8005154:	e7eb      	b.n	800512e <dmx_serial_process+0x96>
			if (escaped)
 8005156:	2900      	cmp	r1, #0
 8005158:	d0e9      	beq.n	800512e <dmx_serial_process+0x96>
				switch (data)
 800515a:	b123      	cbz	r3, 8005166 <dmx_serial_process+0xce>
 800515c:	2b6d      	cmp	r3, #109	; 0x6d
 800515e:	d0e0      	beq.n	8005122 <dmx_serial_process+0x8a>
				escaped = 0;
 8005160:	2300      	movs	r3, #0
 8005162:	7003      	strb	r3, [r0, #0]
 8005164:	e7e3      	b.n	800512e <dmx_serial_process+0x96>
						syncstart = 1;
 8005166:	2201      	movs	r2, #1
						reg_count = 0;
 8005168:	8023      	strh	r3, [r4, #0]
						syncstart = 1;
 800516a:	4b04      	ldr	r3, [pc, #16]	; (800517c <dmx_serial_process+0xe4>)
 800516c:	701a      	strb	r2, [r3, #0]
						break;
 800516e:	e7f7      	b.n	8005160 <dmx_serial_process+0xc8>
 8005170:	20000b14 	.word	0x20000b14
 8005174:	20000424 	.word	0x20000424
 8005178:	20000426 	.word	0x20000426
 800517c:	20000428 	.word	0x20000428
 8005180:	20000420 	.word	0x20000420

08005184 <tracer_puts>:
	}
	HAL_UART_Transmit(&huart3, &ch, 1, 5000);
}

void tracer_puts(uint8_t *str,const uint16_t size)
{
 8005184:	b570      	push	{r4, r5, r6, lr}
	if (USB_Active)
 8005186:	4b08      	ldr	r3, [pc, #32]	; (80051a8 <tracer_puts+0x24>)
{
 8005188:	4604      	mov	r4, r0
	if (USB_Active)
 800518a:	781b      	ldrb	r3, [r3, #0]
{
 800518c:	460d      	mov	r5, r1
	if (USB_Active)
 800518e:	b10b      	cbz	r3, 8005194 <tracer_puts+0x10>
	{
		CDC_Transmit_FS(str,size);
 8005190:	f001 f95e 	bl	8006450 <CDC_Transmit_FS>
	}
	HAL_UART_Transmit(&huart3,str,size, 5000);
 8005194:	462a      	mov	r2, r5
 8005196:	4621      	mov	r1, r4
}
 8005198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	HAL_UART_Transmit(&huart3,str,size, 5000);
 800519c:	f241 3388 	movw	r3, #5000	; 0x1388
 80051a0:	4802      	ldr	r0, [pc, #8]	; (80051ac <tracer_puts+0x28>)
 80051a2:	f7fd bc77 	b.w	8002a94 <HAL_UART_Transmit>
 80051a6:	bf00      	nop
 80051a8:	20000422 	.word	0x20000422
 80051ac:	20000b2c 	.word	0x20000b2c

080051b0 <tracer_getchar>:

#ifdef USE_UART_IRQ
uint8_t tracer_getchar(void)
{
 80051b0:	b507      	push	{r0, r1, r2, lr}
	uint8_t data;
	if (RB_OK == ring_buffer_get(&rx_buff, &data, 1))
 80051b2:	2201      	movs	r2, #1
 80051b4:	f10d 0107 	add.w	r1, sp, #7
 80051b8:	4805      	ldr	r0, [pc, #20]	; (80051d0 <tracer_getchar+0x20>)
 80051ba:	f7ff fefc 	bl	8004fb6 <ring_buffer_get>
 80051be:	b920      	cbnz	r0, 80051ca <tracer_getchar+0x1a>
		return data;
 80051c0:	f89d 0007 	ldrb.w	r0, [sp, #7]
	else
		return 0;
}
 80051c4:	b003      	add	sp, #12
 80051c6:	f85d fb04 	ldr.w	pc, [sp], #4
		return 0;
 80051ca:	2000      	movs	r0, #0
 80051cc:	e7fa      	b.n	80051c4 <tracer_getchar+0x14>
 80051ce:	bf00      	nop
 80051d0:	20000b14 	.word	0x20000b14

080051d4 <init_settings>:
#define PAGE_SETTING_START 123
#define PAGE_SETTING_COUNT 4


void init_settings(void)
{
 80051d4:	b510      	push	{r4, lr}
	//Set everything to 0....
	memset(&settings,0,sizeof(settings_s));
 80051d6:	4c17      	ldr	r4, [pc, #92]	; (8005234 <init_settings+0x60>)
 80051d8:	2238      	movs	r2, #56	; 0x38
 80051da:	2100      	movs	r1, #0
 80051dc:	4620      	mov	r0, r4
 80051de:	f001 fe2c 	bl	8006e3a <memset>

	//Set deviations from 0...
	settings.max_brightness = 255;
 80051e2:	22ff      	movs	r2, #255	; 0xff
 80051e4:	f824 2c02 	strh.w	r2, [r4, #-2]
	settings.strip1_speed = 10;
 80051e8:	f640 220a 	movw	r2, #2570	; 0xa0a
	settings.max_brightness = 255;
 80051ec:	1ea3      	subs	r3, r4, #2
	settings.strip1_speed = 10;
 80051ee:	831a      	strh	r2, [r3, #24]
	settings.strip1_size = 10;
 80051f0:	220a      	movs	r2, #10
 80051f2:	769a      	strb	r2, [r3, #26]
	settings.strip1_complexity = 10;
	settings.strip2_speed = 10;
 80051f4:	77da      	strb	r2, [r3, #31]
	settings.strip2_size = 10;
 80051f6:	f883 2020 	strb.w	r2, [r3, #32]
	settings.strip2_complexity = 10;
 80051fa:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21


	settings.strip1_length = 100;
 80051fe:	2264      	movs	r2, #100	; 0x64
	settings.strip2_length = 100;

	settings.offset_red = -100;
 8005200:	f64f 719c 	movw	r1, #65436	; 0xff9c
	settings.strip1_length = 100;
 8005204:	84da      	strh	r2, [r3, #38]	; 0x26
	settings.strip2_length = 100;
 8005206:	851a      	strh	r2, [r3, #40]	; 0x28
	settings.gain_red = 100;    //Gain * 100
 8005208:	879a      	strh	r2, [r3, #60]	; 0x3c
	settings.gamma_red = 220;   //Gamma * 100
	settings.offset_green = -80;
	settings.gain_green =100;    //Gain * 100
 800520a:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
	settings.gamma_green = 220;   //Gamma * 100
	settings.offset_blue = -80;
	settings.gain_blue = 100;    //Gain * 100
 800520e:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
	settings.gamma_blue = 220;   //Gamma * 100

	settings.fx_multiplier = 4;
 8005212:	2204      	movs	r2, #4
	settings.offset_green = -80;
 8005214:	f64f 70b0 	movw	r0, #65456	; 0xffb0
	settings.offset_red = -100;
 8005218:	8759      	strh	r1, [r3, #58]	; 0x3a
	settings.gamma_red = 220;   //Gamma * 100
 800521a:	21dc      	movs	r1, #220	; 0xdc
	settings.fx_multiplier = 4;
 800521c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
	settings.gamma_red = 220;   //Gamma * 100
 8005220:	87d9      	strh	r1, [r3, #62]	; 0x3e
	settings.offset_green = -80;
 8005222:	f8a3 0040 	strh.w	r0, [r3, #64]	; 0x40
	settings.gamma_green = 220;   //Gamma * 100
 8005226:	f8a3 1044 	strh.w	r1, [r3, #68]	; 0x44
	settings.offset_blue = -80;
 800522a:	f8a3 0046 	strh.w	r0, [r3, #70]	; 0x46
	settings.gamma_blue = 220;   //Gamma * 100
 800522e:	f8a3 104a 	strh.w	r1, [r3, #74]	; 0x4a
	settings.UART_Mode_UART = (uint8_t)UART_MODE_SHELL;
	settings.UART_Mode_USB = (uint8_t)UART_MODE_SHELL;
}
 8005232:	bd10      	pop	{r4, pc}
 8005234:	20000a72 	.word	0x20000a72

08005238 <apply_settings>:

void apply_settings(void)
{
 8005238:	b510      	push	{r4, lr}
	//Apply settings to registers
	set_reg(MAX_BRIGHTNESS,settings.max_brightness);
 800523a:	4c3a      	ldr	r4, [pc, #232]	; (8005324 <apply_settings+0xec>)
 800523c:	2000      	movs	r0, #0
 800523e:	7821      	ldrb	r1, [r4, #0]
 8005240:	f7fe feb6 	bl	8003fb0 <set_reg>
	set_reg(CH1_RED,settings.pwm_ch1_r);
 8005244:	78a1      	ldrb	r1, [r4, #2]
 8005246:	2001      	movs	r0, #1
 8005248:	f7fe feb2 	bl	8003fb0 <set_reg>
	set_reg(CH1_GREEN,settings.pwm_ch1_g);
 800524c:	7921      	ldrb	r1, [r4, #4]
 800524e:	2002      	movs	r0, #2
 8005250:	f7fe feae 	bl	8003fb0 <set_reg>
	set_reg(CH1_BLUE,settings.pwm_ch1_b);
 8005254:	79a1      	ldrb	r1, [r4, #6]
 8005256:	2003      	movs	r0, #3
 8005258:	f7fe feaa 	bl	8003fb0 <set_reg>
	set_reg(CH2_RED,settings.pwm_ch2_r);
 800525c:	7a21      	ldrb	r1, [r4, #8]
 800525e:	2004      	movs	r0, #4
 8005260:	f7fe fea6 	bl	8003fb0 <set_reg>
	set_reg(CH2_GREEN,settings.pwm_ch2_g);
 8005264:	7aa1      	ldrb	r1, [r4, #10]
 8005266:	2005      	movs	r0, #5
 8005268:	f7fe fea2 	bl	8003fb0 <set_reg>
	set_reg(CH2_BLUE,settings.pwm_ch2_b);
 800526c:	7b21      	ldrb	r1, [r4, #12]
 800526e:	2006      	movs	r0, #6
 8005270:	f7fe fe9e 	bl	8003fb0 <set_reg>
	set_reg(CH3_RED,settings.pwm_ch3_r);
 8005274:	7ba1      	ldrb	r1, [r4, #14]
 8005276:	2007      	movs	r0, #7
 8005278:	f7fe fe9a 	bl	8003fb0 <set_reg>
	set_reg(CH3_GREEN,settings.pwm_ch3_g);
 800527c:	7c21      	ldrb	r1, [r4, #16]
 800527e:	2008      	movs	r0, #8
 8005280:	f7fe fe96 	bl	8003fb0 <set_reg>
	set_reg(CH3_BLUE,settings.pwm_ch3_b);
 8005284:	7ca1      	ldrb	r1, [r4, #18]
 8005286:	2009      	movs	r0, #9
 8005288:	f7fe fe92 	bl	8003fb0 <set_reg>
	set_reg(CH3_WHITE,settings.pwm_ch3_w);
 800528c:	7d21      	ldrb	r1, [r4, #20]
 800528e:	200a      	movs	r0, #10
 8005290:	f7fe fe8e 	bl	8003fb0 <set_reg>

	//Deal with LED Strip Registers
	if (DMX_MODE2 == get_mode())
 8005294:	f7fe fe56 	bl	8003f44 <get_mode>
 8005298:	2801      	cmp	r0, #1
 800529a:	d142      	bne.n	8005322 <apply_settings+0xea>
	{
		set_reg(FX_SELECT,settings.fx_select);
 800529c:	7da1      	ldrb	r1, [r4, #22]
 800529e:	200b      	movs	r0, #11
 80052a0:	f7fe fe86 	bl	8003fb0 <set_reg>

		set_reg(STRIP1_PATTERN,settings.strip1_pattern);
 80052a4:	7de1      	ldrb	r1, [r4, #23]
 80052a6:	200c      	movs	r0, #12
 80052a8:	f7fe fe82 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_SPEED,settings.strip1_speed);
 80052ac:	7e21      	ldrb	r1, [r4, #24]
 80052ae:	200d      	movs	r0, #13
 80052b0:	f7fe fe7e 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_SIZE,settings.strip1_size);
 80052b4:	7e61      	ldrb	r1, [r4, #25]
 80052b6:	200e      	movs	r0, #14
 80052b8:	f7fe fe7a 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_COMPLEXITY,settings.strip1_complexity);
 80052bc:	7ea1      	ldrb	r1, [r4, #26]
 80052be:	200f      	movs	r0, #15
 80052c0:	f7fe fe76 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_V1,settings.strip1_v1);
 80052c4:	7ee1      	ldrb	r1, [r4, #27]
 80052c6:	2010      	movs	r0, #16
 80052c8:	f7fe fe72 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_V2,settings.strip1_v2);
 80052cc:	7f21      	ldrb	r1, [r4, #28]
 80052ce:	2011      	movs	r0, #17
 80052d0:	f7fe fe6e 	bl	8003fb0 <set_reg>
		set_reg(STRIP1_V3,settings.strip1_v3);
 80052d4:	7f61      	ldrb	r1, [r4, #29]
 80052d6:	2012      	movs	r0, #18
 80052d8:	f7fe fe6a 	bl	8003fb0 <set_reg>

		set_reg(STRIP2_PATTERN,settings.strip2_pattern);
 80052dc:	7fa1      	ldrb	r1, [r4, #30]
 80052de:	2013      	movs	r0, #19
 80052e0:	f7fe fe66 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_SPEED,settings.strip2_speed);
 80052e4:	7fe1      	ldrb	r1, [r4, #31]
 80052e6:	2014      	movs	r0, #20
 80052e8:	f7fe fe62 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_SIZE,settings.strip2_size);
 80052ec:	f894 1020 	ldrb.w	r1, [r4, #32]
 80052f0:	2015      	movs	r0, #21
 80052f2:	f7fe fe5d 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_COMPLEXITY,settings.strip2_complexity);
 80052f6:	f894 1021 	ldrb.w	r1, [r4, #33]	; 0x21
 80052fa:	2016      	movs	r0, #22
 80052fc:	f7fe fe58 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_V1,settings.strip2_v1);
 8005300:	f894 1022 	ldrb.w	r1, [r4, #34]	; 0x22
 8005304:	2017      	movs	r0, #23
 8005306:	f7fe fe53 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_V2,settings.strip2_v2);
 800530a:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
 800530e:	2018      	movs	r0, #24
 8005310:	f7fe fe4e 	bl	8003fb0 <set_reg>
		set_reg(STRIP2_V3,settings.strip2_v3);
 8005314:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 8005318:	2019      	movs	r0, #25
	}
}
 800531a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		set_reg(STRIP2_V3,settings.strip2_v3);
 800531e:	f7fe be47 	b.w	8003fb0 <set_reg>
}
 8005322:	bd10      	pop	{r4, pc}
 8005324:	20000a70 	.word	0x20000a70

08005328 <load_settings>:

void load_settings(void)
{
	EE_Reads(0,sizeof(settings_s),(uint32_t*)&settings);
 8005328:	4a02      	ldr	r2, [pc, #8]	; (8005334 <load_settings+0xc>)
 800532a:	214c      	movs	r1, #76	; 0x4c
 800532c:	2000      	movs	r0, #0
 800532e:	f7fe bf67 	b.w	8004200 <EE_Reads>
 8005332:	bf00      	nop
 8005334:	20000a70 	.word	0x20000a70

08005338 <save_settings>:
}

void save_settings(void)
{
	EE_Writes(0,256,(uint32_t*)&settings);
 8005338:	4a02      	ldr	r2, [pc, #8]	; (8005344 <save_settings+0xc>)
 800533a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800533e:	2000      	movs	r0, #0
 8005340:	f7fe bf72 	b.w	8004228 <EE_Writes>
 8005344:	20000a70 	.word	0x20000a70

08005348 <print_settings>:
}

void print_settings(void)
{
 8005348:	b538      	push	{r3, r4, r5, lr}
	print("Defaults");
	print("-------");
 800534a:	4d89      	ldr	r5, [pc, #548]	; (8005570 <print_settings+0x228>)
	print("MAX_BRIGHTN: %d",settings.max_brightness);
 800534c:	4c89      	ldr	r4, [pc, #548]	; (8005574 <print_settings+0x22c>)
	print("Defaults");
 800534e:	488a      	ldr	r0, [pc, #552]	; (8005578 <print_settings+0x230>)
 8005350:	f000 f9ea 	bl	8005728 <print>
	print("-------");
 8005354:	4628      	mov	r0, r5
 8005356:	f000 f9e7 	bl	8005728 <print>
	print("MAX_BRIGHTN: %d",settings.max_brightness);
 800535a:	8821      	ldrh	r1, [r4, #0]
 800535c:	4887      	ldr	r0, [pc, #540]	; (800557c <print_settings+0x234>)
 800535e:	f000 f9e3 	bl	8005728 <print>
	print("CH1_RED: %d",settings.pwm_ch1_r);
 8005362:	8861      	ldrh	r1, [r4, #2]
 8005364:	4886      	ldr	r0, [pc, #536]	; (8005580 <print_settings+0x238>)
 8005366:	f000 f9df 	bl	8005728 <print>
	print("CH1_GREEN: %d",settings.pwm_ch1_g);
 800536a:	88a1      	ldrh	r1, [r4, #4]
 800536c:	4885      	ldr	r0, [pc, #532]	; (8005584 <print_settings+0x23c>)
 800536e:	f000 f9db 	bl	8005728 <print>
	print("CH1_BLUE: %d",settings.pwm_ch1_b);
 8005372:	88e1      	ldrh	r1, [r4, #6]
 8005374:	4884      	ldr	r0, [pc, #528]	; (8005588 <print_settings+0x240>)
 8005376:	f000 f9d7 	bl	8005728 <print>
	print("CH2_RED: %d",settings.pwm_ch2_r);
 800537a:	8921      	ldrh	r1, [r4, #8]
 800537c:	4883      	ldr	r0, [pc, #524]	; (800558c <print_settings+0x244>)
 800537e:	f000 f9d3 	bl	8005728 <print>
	print("CH2_GREEN: %d",settings.pwm_ch2_g);
 8005382:	8961      	ldrh	r1, [r4, #10]
 8005384:	4882      	ldr	r0, [pc, #520]	; (8005590 <print_settings+0x248>)
 8005386:	f000 f9cf 	bl	8005728 <print>
	print("CH2_BLUE: %d",settings.pwm_ch2_b);
 800538a:	89a1      	ldrh	r1, [r4, #12]
 800538c:	4881      	ldr	r0, [pc, #516]	; (8005594 <print_settings+0x24c>)
 800538e:	f000 f9cb 	bl	8005728 <print>
	print("CH3_RED: %d",settings.pwm_ch3_r);
 8005392:	89e1      	ldrh	r1, [r4, #14]
 8005394:	4880      	ldr	r0, [pc, #512]	; (8005598 <print_settings+0x250>)
 8005396:	f000 f9c7 	bl	8005728 <print>
	print("CH3_GREEN: %d",settings.pwm_ch3_g);
 800539a:	8a21      	ldrh	r1, [r4, #16]
 800539c:	487f      	ldr	r0, [pc, #508]	; (800559c <print_settings+0x254>)
 800539e:	f000 f9c3 	bl	8005728 <print>
	print("CH3_BLUE: %d",settings.pwm_ch3_b);
 80053a2:	8a61      	ldrh	r1, [r4, #18]
 80053a4:	487e      	ldr	r0, [pc, #504]	; (80055a0 <print_settings+0x258>)
 80053a6:	f000 f9bf 	bl	8005728 <print>
	print("CH3_WHITE: %d",settings.pwm_ch3_w);
 80053aa:	8aa1      	ldrh	r1, [r4, #20]
 80053ac:	487d      	ldr	r0, [pc, #500]	; (80055a4 <print_settings+0x25c>)
 80053ae:	f000 f9bb 	bl	8005728 <print>
	print("FX_SELECT: %d",settings.fx_select);
 80053b2:	7da1      	ldrb	r1, [r4, #22]
 80053b4:	487c      	ldr	r0, [pc, #496]	; (80055a8 <print_settings+0x260>)
 80053b6:	f000 f9b7 	bl	8005728 <print>

	print("STRIP1_PATTERN: %d",settings.strip1_pattern);
 80053ba:	7de1      	ldrb	r1, [r4, #23]
 80053bc:	487b      	ldr	r0, [pc, #492]	; (80055ac <print_settings+0x264>)
 80053be:	f000 f9b3 	bl	8005728 <print>
	print("STRIP1_SPEED: %d",settings.strip1_speed);
 80053c2:	7e21      	ldrb	r1, [r4, #24]
 80053c4:	487a      	ldr	r0, [pc, #488]	; (80055b0 <print_settings+0x268>)
 80053c6:	f000 f9af 	bl	8005728 <print>
	print("STRIP1_SIZE: %d",settings.strip1_size);
 80053ca:	7e61      	ldrb	r1, [r4, #25]
 80053cc:	4879      	ldr	r0, [pc, #484]	; (80055b4 <print_settings+0x26c>)
 80053ce:	f000 f9ab 	bl	8005728 <print>
	print("STRIP1_COMPLEX: %d",settings.strip1_complexity);
 80053d2:	7ea1      	ldrb	r1, [r4, #26]
 80053d4:	4878      	ldr	r0, [pc, #480]	; (80055b8 <print_settings+0x270>)
 80053d6:	f000 f9a7 	bl	8005728 <print>
	print("STRIP1_V1: %d",settings.strip1_v1);
 80053da:	7ee1      	ldrb	r1, [r4, #27]
 80053dc:	4877      	ldr	r0, [pc, #476]	; (80055bc <print_settings+0x274>)
 80053de:	f000 f9a3 	bl	8005728 <print>
	print("STRIP1_V2: %d",settings.strip1_v2);
 80053e2:	7f21      	ldrb	r1, [r4, #28]
 80053e4:	4876      	ldr	r0, [pc, #472]	; (80055c0 <print_settings+0x278>)
 80053e6:	f000 f99f 	bl	8005728 <print>
	print("STRIP1_V3: %d",settings.strip1_v3);
 80053ea:	7f61      	ldrb	r1, [r4, #29]
 80053ec:	4875      	ldr	r0, [pc, #468]	; (80055c4 <print_settings+0x27c>)
 80053ee:	f000 f99b 	bl	8005728 <print>

	print("STRIP2_PATTERN: %d",settings.strip2_pattern);
 80053f2:	7fa1      	ldrb	r1, [r4, #30]
 80053f4:	4874      	ldr	r0, [pc, #464]	; (80055c8 <print_settings+0x280>)
 80053f6:	f000 f997 	bl	8005728 <print>
	print("STRIP2_SPEED: %d",settings.strip2_speed);
 80053fa:	7fe1      	ldrb	r1, [r4, #31]
 80053fc:	4873      	ldr	r0, [pc, #460]	; (80055cc <print_settings+0x284>)
 80053fe:	f000 f993 	bl	8005728 <print>
	print("STRIP2_SIZE: %d",settings.strip2_size);
 8005402:	f894 1020 	ldrb.w	r1, [r4, #32]
 8005406:	4872      	ldr	r0, [pc, #456]	; (80055d0 <print_settings+0x288>)
 8005408:	f000 f98e 	bl	8005728 <print>
	print("STRIP2_COMPLEX: %d",settings.strip2_complexity);
 800540c:	f894 1021 	ldrb.w	r1, [r4, #33]	; 0x21
 8005410:	4870      	ldr	r0, [pc, #448]	; (80055d4 <print_settings+0x28c>)
 8005412:	f000 f989 	bl	8005728 <print>
	print("STRIP2_V1: %d",settings.strip2_v1);
 8005416:	f894 1022 	ldrb.w	r1, [r4, #34]	; 0x22
 800541a:	486f      	ldr	r0, [pc, #444]	; (80055d8 <print_settings+0x290>)
 800541c:	f000 f984 	bl	8005728 <print>
	print("STRIP2_V2: %d",settings.strip2_v2);
 8005420:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
 8005424:	486d      	ldr	r0, [pc, #436]	; (80055dc <print_settings+0x294>)
 8005426:	f000 f97f 	bl	8005728 <print>
	print("STRIP2_V3: %d",settings.strip2_v3);
 800542a:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 800542e:	486c      	ldr	r0, [pc, #432]	; (80055e0 <print_settings+0x298>)
 8005430:	f000 f97a 	bl	8005728 <print>

	print("Settings");
 8005434:	486b      	ldr	r0, [pc, #428]	; (80055e4 <print_settings+0x29c>)
 8005436:	f000 f977 	bl	8005728 <print>
	print("-------");
 800543a:	4628      	mov	r0, r5
 800543c:	f000 f974 	bl	8005728 <print>
	//FX Multiplier
	print("FX Multiplier: %d",settings.fx_multiplier);
 8005440:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8005444:	4868      	ldr	r0, [pc, #416]	; (80055e8 <print_settings+0x2a0>)
 8005446:	f000 f96f 	bl	8005728 <print>
	//Strips
	print("Strip 1 Length: %d",settings.strip1_length);
 800544a:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 800544c:	4867      	ldr	r0, [pc, #412]	; (80055ec <print_settings+0x2a4>)
 800544e:	f000 f96b 	bl	8005728 <print>
	print("Strip 2 Length: %d",settings.strip2_length);
 8005452:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 8005454:	4866      	ldr	r0, [pc, #408]	; (80055f0 <print_settings+0x2a8>)
 8005456:	f000 f967 	bl	8005728 <print>

	print("UART Mode Serial: %d",settings.UART_Mode_UART);
 800545a:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800545e:	4865      	ldr	r0, [pc, #404]	; (80055f4 <print_settings+0x2ac>)
 8005460:	f000 f962 	bl	8005728 <print>
	print("UART Mode USB: %d",settings.UART_Mode_USB);
 8005464:	f894 102b 	ldrb.w	r1, [r4, #43]	; 0x2b
 8005468:	4863      	ldr	r0, [pc, #396]	; (80055f8 <print_settings+0x2b0>)
 800546a:	f000 f95d 	bl	8005728 <print>

	//Triggers
	print("Triggers");
 800546e:	4863      	ldr	r0, [pc, #396]	; (80055fc <print_settings+0x2b4>)
 8005470:	f000 f95a 	bl	8005728 <print>
	print("--------");
 8005474:	4862      	ldr	r0, [pc, #392]	; (8005600 <print_settings+0x2b8>)
 8005476:	f000 f957 	bl	8005728 <print>
	print("Trigger A0 Mode",settings.trigger_mode_A0);
 800547a:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800547e:	4861      	ldr	r0, [pc, #388]	; (8005604 <print_settings+0x2bc>)
 8005480:	f000 f952 	bl	8005728 <print>
	print("Trigger A0 Reg: %d",settings.trigger_reg_A0);
 8005484:	f894 102d 	ldrb.w	r1, [r4, #45]	; 0x2d
 8005488:	485f      	ldr	r0, [pc, #380]	; (8005608 <print_settings+0x2c0>)
 800548a:	f000 f94d 	bl	8005728 <print>
	print("Trigger A0 Reg Low->Hi: %d",settings.trigger_reg_lohi_A0);
 800548e:	f894 102e 	ldrb.w	r1, [r4, #46]	; 0x2e
 8005492:	485e      	ldr	r0, [pc, #376]	; (800560c <print_settings+0x2c4>)
 8005494:	f000 f948 	bl	8005728 <print>
	print("Trigger A0 Val Low->Hi: %d",settings.trigger_val_lohi_A0);
 8005498:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800549c:	485c      	ldr	r0, [pc, #368]	; (8005610 <print_settings+0x2c8>)
 800549e:	f000 f943 	bl	8005728 <print>
	print("Trigger A0 Reg Hi->Low: %d",settings.trigger_reg_hilo_A0);
 80054a2:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 80054a6:	485b      	ldr	r0, [pc, #364]	; (8005614 <print_settings+0x2cc>)
 80054a8:	f000 f93e 	bl	8005728 <print>
	print("Trigger A0 Val Hi-Low: %d",settings.trigger_val_hilo_A0);
 80054ac:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 80054b0:	4859      	ldr	r0, [pc, #356]	; (8005618 <print_settings+0x2d0>)
 80054b2:	f000 f939 	bl	8005728 <print>
	print("Trigger A0 Level: %d",settings.trigger_level_A0);
 80054b6:	f894 1032 	ldrb.w	r1, [r4, #50]	; 0x32
 80054ba:	4858      	ldr	r0, [pc, #352]	; (800561c <print_settings+0x2d4>)
 80054bc:	f000 f934 	bl	8005728 <print>

	print("Trigger A1 Mode",settings.trigger_mode_A1);
 80054c0:	f894 1033 	ldrb.w	r1, [r4, #51]	; 0x33
 80054c4:	4856      	ldr	r0, [pc, #344]	; (8005620 <print_settings+0x2d8>)
 80054c6:	f000 f92f 	bl	8005728 <print>
	print("Trigger A1 Reg: %d",settings.trigger_reg_A1);
 80054ca:	f894 1034 	ldrb.w	r1, [r4, #52]	; 0x34
 80054ce:	4855      	ldr	r0, [pc, #340]	; (8005624 <print_settings+0x2dc>)
 80054d0:	f000 f92a 	bl	8005728 <print>
	print("Trigger A1 Reg Low->Hi: %d",settings.trigger_reg_lohi_A1);
 80054d4:	f894 1035 	ldrb.w	r1, [r4, #53]	; 0x35
 80054d8:	4853      	ldr	r0, [pc, #332]	; (8005628 <print_settings+0x2e0>)
 80054da:	f000 f925 	bl	8005728 <print>
	print("Trigger A1 Val Low->Hi: %d",settings.trigger_val_lohi_A1);
 80054de:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
 80054e2:	4852      	ldr	r0, [pc, #328]	; (800562c <print_settings+0x2e4>)
 80054e4:	f000 f920 	bl	8005728 <print>
	print("Trigger A1 Reg Hi->Low: %d",settings.trigger_reg_hilo_A1);
 80054e8:	f894 1037 	ldrb.w	r1, [r4, #55]	; 0x37
 80054ec:	4850      	ldr	r0, [pc, #320]	; (8005630 <print_settings+0x2e8>)
 80054ee:	f000 f91b 	bl	8005728 <print>
	print("Trigger A1 Val Hi-Low: %d",settings.trigger_val_hilo_A1);
 80054f2:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 80054f6:	484f      	ldr	r0, [pc, #316]	; (8005634 <print_settings+0x2ec>)
 80054f8:	f000 f916 	bl	8005728 <print>
	print("Trigger A1 Level: %d",settings.trigger_level_A1);
 80054fc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8005500:	484d      	ldr	r0, [pc, #308]	; (8005638 <print_settings+0x2f0>)
 8005502:	f000 f911 	bl	8005728 <print>

    //Calibration
	print("Calibration");
 8005506:	484d      	ldr	r0, [pc, #308]	; (800563c <print_settings+0x2f4>)
 8005508:	f000 f90e 	bl	8005728 <print>
	print("-----------");
 800550c:	484c      	ldr	r0, [pc, #304]	; (8005640 <print_settings+0x2f8>)
 800550e:	f000 f90b 	bl	8005728 <print>
	print("Offset Red: %d",settings.offset_red);
 8005512:	f9b4 103a 	ldrsh.w	r1, [r4, #58]	; 0x3a
 8005516:	484b      	ldr	r0, [pc, #300]	; (8005644 <print_settings+0x2fc>)
 8005518:	f000 f906 	bl	8005728 <print>
	print("Gain Red: %d",settings.gain_red);
 800551c:	f9b4 103c 	ldrsh.w	r1, [r4, #60]	; 0x3c
 8005520:	4849      	ldr	r0, [pc, #292]	; (8005648 <print_settings+0x300>)
 8005522:	f000 f901 	bl	8005728 <print>
	print("Gamma Red: %d",settings.gamma_red);
 8005526:	f9b4 103e 	ldrsh.w	r1, [r4, #62]	; 0x3e
 800552a:	4848      	ldr	r0, [pc, #288]	; (800564c <print_settings+0x304>)
 800552c:	f000 f8fc 	bl	8005728 <print>
	print("Offset Green: %d",settings.offset_green);
 8005530:	f9b4 1040 	ldrsh.w	r1, [r4, #64]	; 0x40
 8005534:	4846      	ldr	r0, [pc, #280]	; (8005650 <print_settings+0x308>)
 8005536:	f000 f8f7 	bl	8005728 <print>
	print("Gain Green: %d",settings.gain_green);
 800553a:	f9b4 1042 	ldrsh.w	r1, [r4, #66]	; 0x42
 800553e:	4845      	ldr	r0, [pc, #276]	; (8005654 <print_settings+0x30c>)
 8005540:	f000 f8f2 	bl	8005728 <print>
	print("Gamma Green: %d",settings.gamma_green);
 8005544:	f9b4 1044 	ldrsh.w	r1, [r4, #68]	; 0x44
 8005548:	4843      	ldr	r0, [pc, #268]	; (8005658 <print_settings+0x310>)
 800554a:	f000 f8ed 	bl	8005728 <print>
	print("Offset Blue: %d",settings.offset_blue);
 800554e:	f9b4 1046 	ldrsh.w	r1, [r4, #70]	; 0x46
 8005552:	4842      	ldr	r0, [pc, #264]	; (800565c <print_settings+0x314>)
 8005554:	f000 f8e8 	bl	8005728 <print>
	print("Gain Blue: %d",settings.gain_blue);
 8005558:	f9b4 1048 	ldrsh.w	r1, [r4, #72]	; 0x48
 800555c:	4840      	ldr	r0, [pc, #256]	; (8005660 <print_settings+0x318>)
 800555e:	f000 f8e3 	bl	8005728 <print>
	print("Gamma Blue: %d",settings.gamma_blue);
 8005562:	f9b4 104a 	ldrsh.w	r1, [r4, #74]	; 0x4a
 8005566:	483f      	ldr	r0, [pc, #252]	; (8005664 <print_settings+0x31c>)
}
 8005568:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	print("Gamma Blue: %d",settings.gamma_blue);
 800556c:	f000 b8dc 	b.w	8005728 <print>
 8005570:	08008138 	.word	0x08008138
 8005574:	20000a70 	.word	0x20000a70
 8005578:	08007d18 	.word	0x08007d18
 800557c:	08007d21 	.word	0x08007d21
 8005580:	08007d31 	.word	0x08007d31
 8005584:	08007d3d 	.word	0x08007d3d
 8005588:	08007d4b 	.word	0x08007d4b
 800558c:	08007d58 	.word	0x08007d58
 8005590:	08007d64 	.word	0x08007d64
 8005594:	08007d72 	.word	0x08007d72
 8005598:	08007d7f 	.word	0x08007d7f
 800559c:	08007d8b 	.word	0x08007d8b
 80055a0:	08007d99 	.word	0x08007d99
 80055a4:	08007da6 	.word	0x08007da6
 80055a8:	08007db4 	.word	0x08007db4
 80055ac:	08007dc2 	.word	0x08007dc2
 80055b0:	08007dd5 	.word	0x08007dd5
 80055b4:	08007de6 	.word	0x08007de6
 80055b8:	08007df6 	.word	0x08007df6
 80055bc:	08007e09 	.word	0x08007e09
 80055c0:	08007e17 	.word	0x08007e17
 80055c4:	08007e25 	.word	0x08007e25
 80055c8:	08007e33 	.word	0x08007e33
 80055cc:	08007e46 	.word	0x08007e46
 80055d0:	08007e57 	.word	0x08007e57
 80055d4:	08007e67 	.word	0x08007e67
 80055d8:	08007e7a 	.word	0x08007e7a
 80055dc:	08007e88 	.word	0x08007e88
 80055e0:	08007e96 	.word	0x08007e96
 80055e4:	08007ea4 	.word	0x08007ea4
 80055e8:	08007ead 	.word	0x08007ead
 80055ec:	08007ebf 	.word	0x08007ebf
 80055f0:	08007ed2 	.word	0x08007ed2
 80055f4:	08007ee5 	.word	0x08007ee5
 80055f8:	08007efa 	.word	0x08007efa
 80055fc:	08007f0c 	.word	0x08007f0c
 8005600:	08008137 	.word	0x08008137
 8005604:	08007f15 	.word	0x08007f15
 8005608:	08007f25 	.word	0x08007f25
 800560c:	08007f38 	.word	0x08007f38
 8005610:	08007f53 	.word	0x08007f53
 8005614:	08007f6e 	.word	0x08007f6e
 8005618:	08007f89 	.word	0x08007f89
 800561c:	08007fa3 	.word	0x08007fa3
 8005620:	08007fb8 	.word	0x08007fb8
 8005624:	08007fc8 	.word	0x08007fc8
 8005628:	08007fdb 	.word	0x08007fdb
 800562c:	08007ff6 	.word	0x08007ff6
 8005630:	08008011 	.word	0x08008011
 8005634:	0800802c 	.word	0x0800802c
 8005638:	08008046 	.word	0x08008046
 800563c:	0800805b 	.word	0x0800805b
 8005640:	08008134 	.word	0x08008134
 8005644:	08008067 	.word	0x08008067
 8005648:	08008076 	.word	0x08008076
 800564c:	08008083 	.word	0x08008083
 8005650:	08008091 	.word	0x08008091
 8005654:	080080a2 	.word	0x080080a2
 8005658:	080080b1 	.word	0x080080b1
 800565c:	080080c1 	.word	0x080080c1
 8005660:	080080d1 	.word	0x080080d1
 8005664:	080080df 	.word	0x080080df

08005668 <cmd_buf_reset>:
    }
}

static void cmd_buf_reset(void)
{
    cmd_buf_idx = 0;
 8005668:	2100      	movs	r1, #0
 800566a:	4b03      	ldr	r3, [pc, #12]	; (8005678 <cmd_buf_reset+0x10>)
    memset(cmd_buf, 0, sizeof(cmd_buf));
 800566c:	2240      	movs	r2, #64	; 0x40
 800566e:	4803      	ldr	r0, [pc, #12]	; (800567c <cmd_buf_reset+0x14>)
    cmd_buf_idx = 0;
 8005670:	6019      	str	r1, [r3, #0]
    memset(cmd_buf, 0, sizeof(cmd_buf));
 8005672:	f001 bbe2 	b.w	8006e3a <memset>
 8005676:	bf00      	nop
 8005678:	2000046c 	.word	0x2000046c
 800567c:	20000429 	.word	0x20000429

08005680 <send_vt100_key>:
    strncpy(cmd_buf, cmd_hist[cmd_hist_get_idx], sizeof(cmd_buf));
    cmd_buf_idx = strlen(cmd_buf);
}

static void send_vt100_key(vt100_key_t key)
{
 8005680:	b508      	push	{r3, lr}
    vt100_keycode_t * keycode = vt100_get_keycode(key);
 8005682:	f001 f8e5 	bl	8006850 <vt100_get_keycode>
    if (NULL != keycode)
 8005686:	b128      	cbz	r0, 8005694 <send_vt100_key+0x14>
    {
        uart_send( keycode->code, keycode->code_len);
    }
}
 8005688:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	tracer_puts(bytes,size);
 800568c:	7a01      	ldrb	r1, [r0, #8]
 800568e:	6840      	ldr	r0, [r0, #4]
 8005690:	f7ff bd78 	b.w	8005184 <tracer_puts>
}
 8005694:	bd08      	pop	{r3, pc}
	...

08005698 <load_command_from_command_history>:
{
 8005698:	4919      	ldr	r1, [pc, #100]	; (8005700 <load_command_from_command_history+0x68>)
 800569a:	4a1a      	ldr	r2, [pc, #104]	; (8005704 <load_command_from_command_history+0x6c>)
 800569c:	b510      	push	{r4, lr}
 800569e:	680b      	ldr	r3, [r1, #0]
 80056a0:	6812      	ldr	r2, [r2, #0]
 80056a2:	460c      	mov	r4, r1
    if (0 == dir)
 80056a4:	b9c0      	cbnz	r0, 80056d8 <load_command_from_command_history+0x40>
        if (0 == cmd_hist_get_idx)
 80056a6:	b99b      	cbnz	r3, 80056d0 <load_command_from_command_history+0x38>
            if (SHELL_CMD_HISTORY_LEN - 1 == cmd_hist_put_idx)
 80056a8:	2a07      	cmp	r2, #7
 80056aa:	d014      	beq.n	80056d6 <load_command_from_command_history+0x3e>
            cmd_hist_get_idx = SHELL_CMD_HISTORY_LEN - 1;
 80056ac:	2307      	movs	r3, #7
            cmd_hist_get_idx = 0;
 80056ae:	6023      	str	r3, [r4, #0]
    cmd_buf_reset();
 80056b0:	f7ff ffda 	bl	8005668 <cmd_buf_reset>
    strncpy(cmd_buf, cmd_hist[cmd_hist_get_idx], sizeof(cmd_buf));
 80056b4:	4b14      	ldr	r3, [pc, #80]	; (8005708 <load_command_from_command_history+0x70>)
 80056b6:	6821      	ldr	r1, [r4, #0]
 80056b8:	2240      	movs	r2, #64	; 0x40
 80056ba:	eb03 1181 	add.w	r1, r3, r1, lsl #6
 80056be:	4813      	ldr	r0, [pc, #76]	; (800570c <load_command_from_command_history+0x74>)
 80056c0:	f001 fca9 	bl	8007016 <strncpy>
    cmd_buf_idx = strlen(cmd_buf);
 80056c4:	4811      	ldr	r0, [pc, #68]	; (800570c <load_command_from_command_history+0x74>)
 80056c6:	f7fa fd41 	bl	800014c <strlen>
 80056ca:	4b11      	ldr	r3, [pc, #68]	; (8005710 <load_command_from_command_history+0x78>)
 80056cc:	6018      	str	r0, [r3, #0]
 80056ce:	e002      	b.n	80056d6 <load_command_from_command_history+0x3e>
            if (cmd_hist_get_idx - 1 == cmd_hist_put_idx)
 80056d0:	3b01      	subs	r3, #1
 80056d2:	4293      	cmp	r3, r2
 80056d4:	d1eb      	bne.n	80056ae <load_command_from_command_history+0x16>
}
 80056d6:	bd10      	pop	{r4, pc}
        if (cmd_hist_get_idx == cmd_hist_put_idx)
 80056d8:	4293      	cmp	r3, r2
 80056da:	d0fc      	beq.n	80056d6 <load_command_from_command_history+0x3e>
        if (SHELL_CMD_HISTORY_LEN - 1 == cmd_hist_get_idx)
 80056dc:	2b07      	cmp	r3, #7
 80056de:	d105      	bne.n	80056ec <load_command_from_command_history+0x54>
            if (0 == cmd_hist_put_idx)
 80056e0:	b94a      	cbnz	r2, 80056f6 <load_command_from_command_history+0x5e>
                cmd_hist_get_idx = 0;
 80056e2:	600a      	str	r2, [r1, #0]
}
 80056e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                cmd_buf_reset();
 80056e8:	f7ff bfbe 	b.w	8005668 <cmd_buf_reset>
            if (cmd_hist_get_idx + 1 == cmd_hist_put_idx)
 80056ec:	1c58      	adds	r0, r3, #1
 80056ee:	4290      	cmp	r0, r2
 80056f0:	d101      	bne.n	80056f6 <load_command_from_command_history+0x5e>
                cmd_hist_get_idx++;
 80056f2:	6008      	str	r0, [r1, #0]
 80056f4:	e7f6      	b.n	80056e4 <load_command_from_command_history+0x4c>
        cmd_hist_get_idx++;
 80056f6:	3301      	adds	r3, #1
        if (SHELL_CMD_HISTORY_LEN == cmd_hist_get_idx)
 80056f8:	2b08      	cmp	r3, #8
            cmd_hist_get_idx = 0;
 80056fa:	bf08      	it	eq
 80056fc:	2300      	moveq	r3, #0
 80056fe:	e7d6      	b.n	80056ae <load_command_from_command_history+0x16>
 8005700:	20000670 	.word	0x20000670
 8005704:	20000674 	.word	0x20000674
 8005708:	20000470 	.word	0x20000470
 800570c:	20000429 	.word	0x20000429
 8005710:	2000046c 	.word	0x2000046c

08005714 <uart_receive_byte>:
{
 8005714:	b510      	push	{r4, lr}
 8005716:	4604      	mov	r4, r0
	unsigned char data = tracer_getchar();
 8005718:	f7ff fd4a 	bl	80051b0 <tracer_getchar>
		*byte = 0;
 800571c:	7020      	strb	r0, [r4, #0]
	if (data == 0)
 800571e:	b900      	cbnz	r0, 8005722 <uart_receive_byte+0xe>
}
 8005720:	bd10      	pop	{r4, pc}
		return 1;
 8005722:	2001      	movs	r0, #1
 8005724:	e7fc      	b.n	8005720 <uart_receive_byte+0xc>
	...

08005728 <print>:
{	
 8005728:	b40f      	push	{r0, r1, r2, r3}
 800572a:	b513      	push	{r0, r1, r4, lr}
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 800572c:	4c0c      	ldr	r4, [pc, #48]	; (8005760 <print+0x38>)
{	
 800572e:	ab04      	add	r3, sp, #16
 8005730:	f853 2b04 	ldr.w	r2, [r3], #4
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 8005734:	217c      	movs	r1, #124	; 0x7c
 8005736:	4620      	mov	r0, r4
    va_start(args, fmt);
 8005738:	9301      	str	r3, [sp, #4]
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 800573a:	f001 fd93 	bl	8007264 <vsniprintf>
    strcat(dbgMsg, "\r\n");
 800573e:	4909      	ldr	r1, [pc, #36]	; (8005764 <print+0x3c>)
 8005740:	4620      	mov	r0, r4
 8005742:	f001 fc47 	bl	8006fd4 <strcat>
    len = strlen(dbgMsg);
 8005746:	4620      	mov	r0, r4
 8005748:	f7fa fd00 	bl	800014c <strlen>
	tracer_puts(bytes,size);
 800574c:	b281      	uxth	r1, r0
 800574e:	4620      	mov	r0, r4
 8005750:	f7ff fd18 	bl	8005184 <tracer_puts>
}
 8005754:	b002      	add	sp, #8
 8005756:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800575a:	b004      	add	sp, #16
 800575c:	4770      	bx	lr
 800575e:	bf00      	nop
 8005760:	20000678 	.word	0x20000678
 8005764:	080080ee 	.word	0x080080ee

08005768 <print_no_newline>:
{	
 8005768:	b40f      	push	{r0, r1, r2, r3}
 800576a:	b513      	push	{r0, r1, r4, lr}
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 800576c:	4c0a      	ldr	r4, [pc, #40]	; (8005798 <print_no_newline+0x30>)
{	
 800576e:	ab04      	add	r3, sp, #16
 8005770:	f853 2b04 	ldr.w	r2, [r3], #4
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 8005774:	217c      	movs	r1, #124	; 0x7c
 8005776:	4620      	mov	r0, r4
    va_start(args, fmt);
 8005778:	9301      	str	r3, [sp, #4]
    (void) vsnprintf(dbgMsg, sizeof(dbgMsg)-4, fmt, args);
 800577a:	f001 fd73 	bl	8007264 <vsniprintf>
    (void) uart_send((uint8_t *)dbgMsg, (uint16_t) strlen(dbgMsg));		
 800577e:	4620      	mov	r0, r4
 8005780:	f7fa fce4 	bl	800014c <strlen>
	tracer_puts(bytes,size);
 8005784:	b281      	uxth	r1, r0
 8005786:	4620      	mov	r0, r4
 8005788:	f7ff fcfc 	bl	8005184 <tracer_puts>
}
 800578c:	b002      	add	sp, #8
 800578e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005792:	b004      	add	sp, #16
 8005794:	4770      	bx	lr
 8005796:	bf00      	nop
 8005798:	20000678 	.word	0x20000678

0800579c <shell_process>:
    
    cmd_buf_reset();
}

void shell_process(void)
{
 800579c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	char byte;
	const char prompt[] = "DBG>";
 80057a0:	4b72      	ldr	r3, [pc, #456]	; (800596c <shell_process+0x1d0>)
{
 80057a2:	b08f      	sub	sp, #60	; 0x3c
	const char prompt[] = "DBG>";
 80057a4:	6818      	ldr	r0, [r3, #0]
 80057a6:	791b      	ldrb	r3, [r3, #4]
            print_no_newline(cmd_buf);
        }
        else if (VT100_KEY_CURSOR_DOWN == key)
        {
            send_vt100_key(VT100_KEY_CLEAR_ENTIRE_LINE);
            for (int ii = 0; ii < cmd_buf_idx; ++ii)
 80057a8:	4c71      	ldr	r4, [pc, #452]	; (8005970 <shell_process+0x1d4>)
            print(shell_cmd_list[i].cmd);
 80057aa:	4e72      	ldr	r6, [pc, #456]	; (8005974 <shell_process+0x1d8>)
	const char prompt[] = "DBG>";
 80057ac:	9003      	str	r0, [sp, #12]
 80057ae:	f88d 3010 	strb.w	r3, [sp, #16]
	while (1 == uart_receive_byte((uint8_t*)&byte))
 80057b2:	f10d 000b 	add.w	r0, sp, #11
 80057b6:	f7ff ffad 	bl	8005714 <uart_receive_byte>
 80057ba:	2801      	cmp	r0, #1
 80057bc:	d002      	beq.n	80057c4 <shell_process+0x28>
            }
            load_command_from_command_history(1);
            print_no_newline(cmd_buf);
        }
	}
}
 80057be:	b00f      	add	sp, #60	; 0x3c
 80057c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        vt100_key_t key = vt100_process_byte(byte);
 80057c4:	f89d 000b 	ldrb.w	r0, [sp, #11]
 80057c8:	f001 f800 	bl	80067cc <vt100_process_byte>
        if (VT100_KEY_PRINTABLE == key)
 80057cc:	2801      	cmp	r0, #1
 80057ce:	d10e      	bne.n	80057ee <shell_process+0x52>
    if ((unsigned int)cmd_buf_idx < sizeof(cmd_buf))
 80057d0:	6823      	ldr	r3, [r4, #0]
 80057d2:	2b3f      	cmp	r3, #63	; 0x3f
 80057d4:	d805      	bhi.n	80057e2 <shell_process+0x46>
        cmd_buf[cmd_buf_idx++] = c;
 80057d6:	1c5a      	adds	r2, r3, #1
            cmd_buf_add_char(byte);
 80057d8:	f89d 100b 	ldrb.w	r1, [sp, #11]
        cmd_buf[cmd_buf_idx++] = c;
 80057dc:	6022      	str	r2, [r4, #0]
 80057de:	4a66      	ldr	r2, [pc, #408]	; (8005978 <shell_process+0x1dc>)
 80057e0:	54d1      	strb	r1, [r2, r3]
	tracer_puts(bytes,size);
 80057e2:	2101      	movs	r1, #1
 80057e4:	f10d 000b 	add.w	r0, sp, #11
 80057e8:	f7ff fccc 	bl	8005184 <tracer_puts>
 80057ec:	e7e1      	b.n	80057b2 <shell_process+0x16>
        else if (VT100_KEY_ENTER == key)
 80057ee:	2808      	cmp	r0, #8
 80057f0:	d17e      	bne.n	80058f0 <shell_process+0x154>
			print("");
 80057f2:	4862      	ldr	r0, [pc, #392]	; (800597c <shell_process+0x1e0>)
 80057f4:	f7ff ff98 	bl	8005728 <print>
	if (0 != strlen(cmd_buf))
 80057f8:	495f      	ldr	r1, [pc, #380]	; (8005978 <shell_process+0x1dc>)
 80057fa:	780b      	ldrb	r3, [r1, #0]
 80057fc:	b183      	cbz	r3, 8005820 <shell_process+0x84>
    strncpy(cmd_hist[cmd_hist_put_idx], cmd_buf, sizeof(cmd_buf));
 80057fe:	4f60      	ldr	r7, [pc, #384]	; (8005980 <shell_process+0x1e4>)
 8005800:	4860      	ldr	r0, [pc, #384]	; (8005984 <shell_process+0x1e8>)
 8005802:	683d      	ldr	r5, [r7, #0]
 8005804:	2240      	movs	r2, #64	; 0x40
 8005806:	eb00 1085 	add.w	r0, r0, r5, lsl #6
    cmd_hist_put_idx++;
 800580a:	3501      	adds	r5, #1
    strncpy(cmd_hist[cmd_hist_put_idx], cmd_buf, sizeof(cmd_buf));
 800580c:	f001 fc03 	bl	8007016 <strncpy>
    if (cmd_hist_put_idx >= SHELL_CMD_HISTORY_LEN)
 8005810:	2d07      	cmp	r5, #7
        cmd_hist_put_idx = 0;
 8005812:	bfca      	itet	gt
 8005814:	2300      	movgt	r3, #0
    cmd_hist_put_idx++;
 8005816:	603d      	strle	r5, [r7, #0]
        cmd_hist_put_idx = 0;
 8005818:	603b      	strgt	r3, [r7, #0]
    cmd_hist_get_idx = cmd_hist_put_idx;
 800581a:	683a      	ldr	r2, [r7, #0]
 800581c:	4b5a      	ldr	r3, [pc, #360]	; (8005988 <shell_process+0x1ec>)
 800581e:	601a      	str	r2, [r3, #0]
	tokens[arg_num] = strtok(buffer, " ");
 8005820:	495a      	ldr	r1, [pc, #360]	; (800598c <shell_process+0x1f0>)
 8005822:	4855      	ldr	r0, [pc, #340]	; (8005978 <shell_process+0x1dc>)
 8005824:	f001 fc0c 	bl	8007040 <strtok>
	int arg_num = 0;
 8005828:	2500      	movs	r5, #0
	tokens[arg_num] = strtok(buffer, " ");
 800582a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
		tokens[++arg_num] = strtok(NULL, " ");
 800582e:	4f57      	ldr	r7, [pc, #348]	; (800598c <shell_process+0x1f0>)
	tokens[arg_num] = strtok(buffer, " ");
 8005830:	f848 0d24 	str.w	r0, [r8, #-36]!
	while(NULL != tokens[arg_num] && arg_num < (MAX_ARGUMENT_NUM-1))
 8005834:	f858 3025 	ldr.w	r3, [r8, r5, lsl #2]
 8005838:	b10b      	cbz	r3, 800583e <shell_process+0xa2>
 800583a:	2d07      	cmp	r5, #7
 800583c:	d12c      	bne.n	8005898 <shell_process+0xfc>
    if (0 == strncmp(argv[0], "help", SHELL_CMD_BUF_LEN))
 800583e:	2240      	movs	r2, #64	; 0x40
 8005840:	4953      	ldr	r1, [pc, #332]	; (8005990 <shell_process+0x1f4>)
 8005842:	9805      	ldr	r0, [sp, #20]
 8005844:	f001 fbd5 	bl	8006ff2 <strncmp>
 8005848:	4607      	mov	r7, r0
 800584a:	b368      	cbz	r0, 80058a8 <shell_process+0x10c>
    if (0 == strncmp(argv[0], "cls", SHELL_CMD_BUF_LEN))
 800584c:	2240      	movs	r2, #64	; 0x40
 800584e:	4951      	ldr	r1, [pc, #324]	; (8005994 <shell_process+0x1f8>)
 8005850:	9805      	ldr	r0, [sp, #20]
 8005852:	f001 fbce 	bl	8006ff2 <strncmp>
 8005856:	2800      	cmp	r0, #0
 8005858:	d038      	beq.n	80058cc <shell_process+0x130>
        for(int i = 0; i < SHELL_CMD_NUM; ++i)
 800585a:	f04f 0900 	mov.w	r9, #0
 800585e:	f04f 0b0c 	mov.w	fp, #12
 8005862:	4b4d      	ldr	r3, [pc, #308]	; (8005998 <shell_process+0x1fc>)
 8005864:	681f      	ldr	r7, [r3, #0]
 8005866:	45b9      	cmp	r9, r7
 8005868:	da36      	bge.n	80058d8 <shell_process+0x13c>
 800586a:	fb0b f309 	mul.w	r3, fp, r9
            if(0 == strncmp(argv[0], shell_cmd_list[i].cmd, SHELL_CMD_BUF_LEN))
 800586e:	2240      	movs	r2, #64	; 0x40
 8005870:	5999      	ldr	r1, [r3, r6]
 8005872:	9805      	ldr	r0, [sp, #20]
 8005874:	eb03 0a06 	add.w	sl, r3, r6
 8005878:	f001 fbbb 	bl	8006ff2 <strncmp>
 800587c:	b948      	cbnz	r0, 8005892 <shell_process+0xf6>
                if(0 == shell_cmd_list[i].handler(argc, argv))
 800587e:	f8da 3008 	ldr.w	r3, [sl, #8]
 8005882:	4641      	mov	r1, r8
 8005884:	1e68      	subs	r0, r5, #1
 8005886:	4798      	blx	r3
 8005888:	b918      	cbnz	r0, 8005892 <shell_process+0xf6>
                    print(shell_cmd_list[i].desc);
 800588a:	f8da 0004 	ldr.w	r0, [sl, #4]
 800588e:	f7ff ff4b 	bl	8005728 <print>
        for(int i = 0; i < SHELL_CMD_NUM; ++i)
 8005892:	f109 0901 	add.w	r9, r9, #1
 8005896:	e7e6      	b.n	8005866 <shell_process+0xca>
		tokens[++arg_num] = strtok(NULL, " ");
 8005898:	4639      	mov	r1, r7
 800589a:	2000      	movs	r0, #0
 800589c:	f001 fbd0 	bl	8007040 <strtok>
 80058a0:	3501      	adds	r5, #1
 80058a2:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 80058a6:	e7c5      	b.n	8005834 <shell_process+0x98>
            print(shell_cmd_list[i].cmd);
 80058a8:	f04f 0a0c 	mov.w	sl, #12
        print("");
 80058ac:	4833      	ldr	r0, [pc, #204]	; (800597c <shell_process+0x1e0>)
 80058ae:	f7ff ff3b 	bl	8005728 <print>
        for(int i = 0; i < SHELL_CMD_NUM; ++i)
 80058b2:	4b39      	ldr	r3, [pc, #228]	; (8005998 <shell_process+0x1fc>)
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	9301      	str	r3, [sp, #4]
 80058b8:	9b01      	ldr	r3, [sp, #4]
 80058ba:	429f      	cmp	r7, r3
 80058bc:	dac6      	bge.n	800584c <shell_process+0xb0>
            print(shell_cmd_list[i].cmd);
 80058be:	fb0a f307 	mul.w	r3, sl, r7
 80058c2:	5998      	ldr	r0, [r3, r6]
 80058c4:	f7ff ff30 	bl	8005728 <print>
        for(int i = 0; i < SHELL_CMD_NUM; ++i)
 80058c8:	3701      	adds	r7, #1
 80058ca:	e7f5      	b.n	80058b8 <shell_process+0x11c>
        send_vt100_key(VT100_KEY_CLEAR_SCREEN);
 80058cc:	200d      	movs	r0, #13
 80058ce:	f7ff fed7 	bl	8005680 <send_vt100_key>
        send_vt100_key(VT100_KEY_MOVE_CURSOR_HOME);
 80058d2:	200e      	movs	r0, #14
 80058d4:	f7ff fed4 	bl	8005680 <send_vt100_key>
    cmd_buf_reset();
 80058d8:	f7ff fec6 	bl	8005668 <cmd_buf_reset>
	tracer_puts(bytes,size);
 80058dc:	f10d 000b 	add.w	r0, sp, #11
 80058e0:	2101      	movs	r1, #1
 80058e2:	f7ff fc4f 	bl	8005184 <tracer_puts>
			print_no_newline("\n%s", prompt);
 80058e6:	a903      	add	r1, sp, #12
 80058e8:	482c      	ldr	r0, [pc, #176]	; (800599c <shell_process+0x200>)
 80058ea:	f7ff ff3d 	bl	8005768 <print_no_newline>
 80058ee:	e760      	b.n	80057b2 <shell_process+0x16>
        else if (VT100_KEY_INVALID == key)
 80058f0:	2800      	cmp	r0, #0
 80058f2:	f43f af5e 	beq.w	80057b2 <shell_process+0x16>
        else if (VT100_KEY_BACKSPACE == key)
 80058f6:	2807      	cmp	r0, #7
 80058f8:	d10e      	bne.n	8005918 <shell_process+0x17c>
    if (cmd_buf_idx > 0)
 80058fa:	6823      	ldr	r3, [r4, #0]
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	dd04      	ble.n	800590a <shell_process+0x16e>
        cmd_buf[--cmd_buf_idx] = 0;
 8005900:	2100      	movs	r1, #0
 8005902:	4a1d      	ldr	r2, [pc, #116]	; (8005978 <shell_process+0x1dc>)
 8005904:	3b01      	subs	r3, #1
 8005906:	6023      	str	r3, [r4, #0]
 8005908:	54d1      	strb	r1, [r2, r3]
            send_vt100_key(VT100_KEY_BACKSPACE);
 800590a:	2007      	movs	r0, #7
 800590c:	f7ff feb8 	bl	8005680 <send_vt100_key>
            send_vt100_key(VT100_KEY_CLEAR_EOL);
 8005910:	200a      	movs	r0, #10
 8005912:	f7ff feb5 	bl	8005680 <send_vt100_key>
 8005916:	e74c      	b.n	80057b2 <shell_process+0x16>
        else if (VT100_KEY_CURSOR_UP == key)
 8005918:	2802      	cmp	r0, #2
 800591a:	d116      	bne.n	800594a <shell_process+0x1ae>
            send_vt100_key(VT100_KEY_CLEAR_ENTIRE_LINE);
 800591c:	200b      	movs	r0, #11
 800591e:	f7ff feaf 	bl	8005680 <send_vt100_key>
            for (unsigned int ii = 0; ii < cmd_buf_idx + sizeof(prompt) - 1; ++ii)
 8005922:	2500      	movs	r5, #0
 8005924:	6823      	ldr	r3, [r4, #0]
 8005926:	3304      	adds	r3, #4
 8005928:	42ab      	cmp	r3, r5
 800592a:	d809      	bhi.n	8005940 <shell_process+0x1a4>
			print_no_newline(prompt);
 800592c:	a803      	add	r0, sp, #12
 800592e:	f7ff ff1b 	bl	8005768 <print_no_newline>
            load_command_from_command_history(0);
 8005932:	2000      	movs	r0, #0
            load_command_from_command_history(1);
 8005934:	f7ff feb0 	bl	8005698 <load_command_from_command_history>
            print_no_newline(cmd_buf);
 8005938:	480f      	ldr	r0, [pc, #60]	; (8005978 <shell_process+0x1dc>)
 800593a:	f7ff ff15 	bl	8005768 <print_no_newline>
 800593e:	e738      	b.n	80057b2 <shell_process+0x16>
                send_vt100_key(VT100_KEY_MOVE_CURSOR_LEFT);
 8005940:	200c      	movs	r0, #12
 8005942:	f7ff fe9d 	bl	8005680 <send_vt100_key>
            for (unsigned int ii = 0; ii < cmd_buf_idx + sizeof(prompt) - 1; ++ii)
 8005946:	3501      	adds	r5, #1
 8005948:	e7ec      	b.n	8005924 <shell_process+0x188>
        else if (VT100_KEY_CURSOR_DOWN == key)
 800594a:	2803      	cmp	r0, #3
 800594c:	f47f af31 	bne.w	80057b2 <shell_process+0x16>
            send_vt100_key(VT100_KEY_CLEAR_ENTIRE_LINE);
 8005950:	200b      	movs	r0, #11
 8005952:	f7ff fe95 	bl	8005680 <send_vt100_key>
            for (int ii = 0; ii < cmd_buf_idx; ++ii)
 8005956:	2500      	movs	r5, #0
 8005958:	6823      	ldr	r3, [r4, #0]
 800595a:	42ab      	cmp	r3, r5
 800595c:	dc01      	bgt.n	8005962 <shell_process+0x1c6>
            load_command_from_command_history(1);
 800595e:	2001      	movs	r0, #1
 8005960:	e7e8      	b.n	8005934 <shell_process+0x198>
                send_vt100_key(VT100_KEY_MOVE_CURSOR_LEFT);
 8005962:	200c      	movs	r0, #12
 8005964:	f7ff fe8c 	bl	8005680 <send_vt100_key>
            for (int ii = 0; ii < cmd_buf_idx; ++ii)
 8005968:	3501      	adds	r5, #1
 800596a:	e7f5      	b.n	8005958 <shell_process+0x1bc>
 800596c:	08007c84 	.word	0x08007c84
 8005970:	2000046c 	.word	0x2000046c
 8005974:	08008198 	.word	0x08008198
 8005978:	20000429 	.word	0x20000429
 800597c:	080080f0 	.word	0x080080f0
 8005980:	20000674 	.word	0x20000674
 8005984:	20000470 	.word	0x20000470
 8005988:	20000670 	.word	0x20000670
 800598c:	08008b54 	.word	0x08008b54
 8005990:	080080f1 	.word	0x080080f1
 8005994:	080080f6 	.word	0x080080f6
 8005998:	08008100 	.word	0x08008100
 800599c:	080080fa 	.word	0x080080fa

080059a0 <shell_cmd_dumpadc>:
}


//dumpconfig
static int shell_cmd_dumpadc(int argc, char ** argv)
{
 80059a0:	b508      	push	{r3, lr}
	print_adc_data();
 80059a2:	f000 fcc9 	bl	8006338 <print_adc_data>
	return 1;
}
 80059a6:	2001      	movs	r0, #1
 80059a8:	bd08      	pop	{r3, pc}
	...

080059ac <shell_cmd_storedefaultregs>:
	return 1;
}


static int shell_cmd_storedefaultregs(int argc, char ** argv)
{
 80059ac:	b510      	push	{r4, lr}
	//Store the current register values to default settings
	settings.max_brightness = get_reg(MAX_BRIGHTNESS);
 80059ae:	2000      	movs	r0, #0
 80059b0:	f7fe fb0c 	bl	8003fcc <get_reg>
 80059b4:	4c38      	ldr	r4, [pc, #224]	; (8005a98 <shell_cmd_storedefaultregs+0xec>)
 80059b6:	8020      	strh	r0, [r4, #0]
	settings.pwm_ch1_r = get_reg(CH1_RED);
 80059b8:	2001      	movs	r0, #1
 80059ba:	f7fe fb07 	bl	8003fcc <get_reg>
 80059be:	8060      	strh	r0, [r4, #2]
	settings.pwm_ch1_g = get_reg(CH1_GREEN);
 80059c0:	2002      	movs	r0, #2
 80059c2:	f7fe fb03 	bl	8003fcc <get_reg>
 80059c6:	80a0      	strh	r0, [r4, #4]
	settings.pwm_ch1_b = get_reg(CH1_BLUE);
 80059c8:	2003      	movs	r0, #3
 80059ca:	f7fe faff 	bl	8003fcc <get_reg>
 80059ce:	80e0      	strh	r0, [r4, #6]
	settings.pwm_ch2_r = get_reg(CH2_RED);
 80059d0:	2004      	movs	r0, #4
 80059d2:	f7fe fafb 	bl	8003fcc <get_reg>
 80059d6:	8120      	strh	r0, [r4, #8]
	settings.pwm_ch2_g = get_reg(CH2_GREEN);
 80059d8:	2005      	movs	r0, #5
 80059da:	f7fe faf7 	bl	8003fcc <get_reg>
 80059de:	8160      	strh	r0, [r4, #10]
	settings.pwm_ch2_b = get_reg(CH2_BLUE);
 80059e0:	2006      	movs	r0, #6
 80059e2:	f7fe faf3 	bl	8003fcc <get_reg>
 80059e6:	81a0      	strh	r0, [r4, #12]
	settings.pwm_ch3_r = get_reg(CH3_RED);
 80059e8:	2007      	movs	r0, #7
 80059ea:	f7fe faef 	bl	8003fcc <get_reg>
 80059ee:	81e0      	strh	r0, [r4, #14]
	settings.pwm_ch3_g = get_reg(CH3_GREEN);
 80059f0:	2008      	movs	r0, #8
 80059f2:	f7fe faeb 	bl	8003fcc <get_reg>
 80059f6:	8220      	strh	r0, [r4, #16]
	settings.pwm_ch3_b = get_reg(CH3_BLUE);
 80059f8:	2009      	movs	r0, #9
 80059fa:	f7fe fae7 	bl	8003fcc <get_reg>
 80059fe:	8260      	strh	r0, [r4, #18]
	settings.pwm_ch3_w = get_reg(CH3_WHITE);
 8005a00:	200a      	movs	r0, #10
 8005a02:	f7fe fae3 	bl	8003fcc <get_reg>
 8005a06:	82a0      	strh	r0, [r4, #20]

	//Deal with LED Strip Registers
	if (DMX_MODE2 == get_mode())
 8005a08:	f7fe fa9c 	bl	8003f44 <get_mode>
 8005a0c:	2801      	cmp	r0, #1
 8005a0e:	d140      	bne.n	8005a92 <shell_cmd_storedefaultregs+0xe6>
	{
		settings.fx_select = get_reg(FX_SELECT);
 8005a10:	200b      	movs	r0, #11
 8005a12:	f7fe fadb 	bl	8003fcc <get_reg>
 8005a16:	75a0      	strb	r0, [r4, #22]
		settings.strip1_pattern = get_reg(STRIP1_PATTERN);
 8005a18:	200c      	movs	r0, #12
 8005a1a:	f7fe fad7 	bl	8003fcc <get_reg>
 8005a1e:	75e0      	strb	r0, [r4, #23]
		settings.strip1_speed = get_reg(STRIP1_SPEED);
 8005a20:	200d      	movs	r0, #13
 8005a22:	f7fe fad3 	bl	8003fcc <get_reg>
 8005a26:	7620      	strb	r0, [r4, #24]
		settings.strip1_size = get_reg(STRIP1_SIZE);
 8005a28:	200e      	movs	r0, #14
 8005a2a:	f7fe facf 	bl	8003fcc <get_reg>
 8005a2e:	7660      	strb	r0, [r4, #25]
		settings.strip1_complexity = get_reg(STRIP1_COMPLEXITY);
 8005a30:	200f      	movs	r0, #15
 8005a32:	f7fe facb 	bl	8003fcc <get_reg>
 8005a36:	76a0      	strb	r0, [r4, #26]
		settings.strip1_v1 = get_reg(STRIP1_V1);
 8005a38:	2010      	movs	r0, #16
 8005a3a:	f7fe fac7 	bl	8003fcc <get_reg>
 8005a3e:	76e0      	strb	r0, [r4, #27]
		settings.strip1_v2 = get_reg(STRIP1_V2);
 8005a40:	2011      	movs	r0, #17
 8005a42:	f7fe fac3 	bl	8003fcc <get_reg>
 8005a46:	7720      	strb	r0, [r4, #28]
		settings.strip1_v3 = get_reg(STRIP1_V3);
 8005a48:	2012      	movs	r0, #18
 8005a4a:	f7fe fabf 	bl	8003fcc <get_reg>
 8005a4e:	7760      	strb	r0, [r4, #29]
		settings.strip2_pattern = get_reg(STRIP2_PATTERN);
 8005a50:	2013      	movs	r0, #19
 8005a52:	f7fe fabb 	bl	8003fcc <get_reg>
 8005a56:	77a0      	strb	r0, [r4, #30]
		settings.strip2_speed = get_reg(STRIP2_SPEED);
 8005a58:	2014      	movs	r0, #20
 8005a5a:	f7fe fab7 	bl	8003fcc <get_reg>
 8005a5e:	77e0      	strb	r0, [r4, #31]
		settings.strip2_size = get_reg(STRIP2_SIZE);
 8005a60:	2015      	movs	r0, #21
 8005a62:	f7fe fab3 	bl	8003fcc <get_reg>
 8005a66:	f884 0020 	strb.w	r0, [r4, #32]
		settings.strip2_complexity = get_reg(STRIP2_COMPLEXITY);
 8005a6a:	2016      	movs	r0, #22
 8005a6c:	f7fe faae 	bl	8003fcc <get_reg>
 8005a70:	f884 0021 	strb.w	r0, [r4, #33]	; 0x21
		settings.strip2_v1 = get_reg(STRIP2_V1);
 8005a74:	2017      	movs	r0, #23
 8005a76:	f7fe faa9 	bl	8003fcc <get_reg>
 8005a7a:	f884 0022 	strb.w	r0, [r4, #34]	; 0x22
		settings.strip2_v2 = get_reg(STRIP2_V2);
 8005a7e:	2018      	movs	r0, #24
 8005a80:	f7fe faa4 	bl	8003fcc <get_reg>
 8005a84:	f884 0023 	strb.w	r0, [r4, #35]	; 0x23
		settings.strip2_v3 = get_reg(STRIP2_V3);
 8005a88:	2019      	movs	r0, #25
 8005a8a:	f7fe fa9f 	bl	8003fcc <get_reg>
 8005a8e:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
	}
	return 1;
}
 8005a92:	2001      	movs	r0, #1
 8005a94:	bd10      	pop	{r4, pc}
 8005a96:	bf00      	nop
 8005a98:	20000a70 	.word	0x20000a70

08005a9c <shell_cmd_getmode>:
{
 8005a9c:	b508      	push	{r3, lr}
	switch (get_mode())
 8005a9e:	f7fe fa51 	bl	8003f44 <get_mode>
 8005aa2:	b118      	cbz	r0, 8005aac <shell_cmd_getmode+0x10>
 8005aa4:	2801      	cmp	r0, #1
 8005aa6:	d005      	beq.n	8005ab4 <shell_cmd_getmode+0x18>
}
 8005aa8:	2001      	movs	r0, #1
 8005aaa:	bd08      	pop	{r3, pc}
		print("Mode 1 (PWM)");
 8005aac:	4802      	ldr	r0, [pc, #8]	; (8005ab8 <shell_cmd_getmode+0x1c>)
		print("Mode 2 (PWM + Strip)");
 8005aae:	f7ff fe3b 	bl	8005728 <print>
		break;
 8005ab2:	e7f9      	b.n	8005aa8 <shell_cmd_getmode+0xc>
		print("Mode 2 (PWM + Strip)");
 8005ab4:	4801      	ldr	r0, [pc, #4]	; (8005abc <shell_cmd_getmode+0x20>)
 8005ab6:	e7fa      	b.n	8005aae <shell_cmd_getmode+0x12>
 8005ab8:	08008175 	.word	0x08008175
 8005abc:	08008182 	.word	0x08008182

08005ac0 <shell_cmd_savesettings>:
{
 8005ac0:	b508      	push	{r3, lr}
		save_settings();
 8005ac2:	f7ff fc39 	bl	8005338 <save_settings>
}
 8005ac6:	2001      	movs	r0, #1
 8005ac8:	bd08      	pop	{r3, pc}

08005aca <shell_cmd_dumpsettings>:
{
 8005aca:	b508      	push	{r3, lr}
		print_settings();
 8005acc:	f7ff fc3c 	bl	8005348 <print_settings>
}
 8005ad0:	2001      	movs	r0, #1
 8005ad2:	bd08      	pop	{r3, pc}

08005ad4 <shell_cmd_getaddr>:
{
 8005ad4:	b508      	push	{r3, lr}
		print("DMX512 Address: %d",get_addr());
 8005ad6:	f7fe fa2f 	bl	8003f38 <get_addr>
 8005ada:	4601      	mov	r1, r0
 8005adc:	4802      	ldr	r0, [pc, #8]	; (8005ae8 <shell_cmd_getaddr+0x14>)
 8005ade:	f7ff fe23 	bl	8005728 <print>
}
 8005ae2:	2001      	movs	r0, #1
 8005ae4:	bd08      	pop	{r3, pc}
 8005ae6:	bf00      	nop
 8005ae8:	08008162 	.word	0x08008162

08005aec <shell_cmd_dumpregs>:
{
 8005aec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
		print("DMX512 Address: %d",get_addr());
 8005aee:	f7fe fa23 	bl	8003f38 <get_addr>
 8005af2:	4601      	mov	r1, r0
 8005af4:	4816      	ldr	r0, [pc, #88]	; (8005b50 <shell_cmd_dumpregs+0x64>)
 8005af6:	f7ff fe17 	bl	8005728 <print>
		print("DMX512 Blocklength: %d",get_reg_length());
 8005afa:	f7fe fa29 	bl	8003f50 <get_reg_length>
 8005afe:	4601      	mov	r1, r0
 8005b00:	4814      	ldr	r0, [pc, #80]	; (8005b54 <shell_cmd_dumpregs+0x68>)
 8005b02:	f7ff fe11 	bl	8005728 <print>
		print("Mode: %d",(uint8_t)get_mode());
 8005b06:	f7fe fa1d 	bl	8003f44 <get_mode>
 8005b0a:	4601      	mov	r1, r0
 8005b0c:	4812      	ldr	r0, [pc, #72]	; (8005b58 <shell_cmd_dumpregs+0x6c>)
 8005b0e:	f7ff fe0b 	bl	8005728 <print>
		print("---------------------------");
 8005b12:	4812      	ldr	r0, [pc, #72]	; (8005b5c <shell_cmd_dumpregs+0x70>)
 8005b14:	f7ff fe08 	bl	8005728 <print>
		for(int ii=0;ii< get_reg_length();ii++)
 8005b18:	2400      	movs	r4, #0
			print("Reg: %d\t Addr:%d  \t (%s)\t Val: %d",ii,get_addr()+ii,get_reg_name(ii),get_reg(ii));
 8005b1a:	4d11      	ldr	r5, [pc, #68]	; (8005b60 <shell_cmd_dumpregs+0x74>)
		for(int ii=0;ii< get_reg_length();ii++)
 8005b1c:	f7fe fa18 	bl	8003f50 <get_reg_length>
 8005b20:	42a0      	cmp	r0, r4
 8005b22:	d802      	bhi.n	8005b2a <shell_cmd_dumpregs+0x3e>
}
 8005b24:	2001      	movs	r0, #1
 8005b26:	b003      	add	sp, #12
 8005b28:	bdf0      	pop	{r4, r5, r6, r7, pc}
			print("Reg: %d\t Addr:%d  \t (%s)\t Val: %d",ii,get_addr()+ii,get_reg_name(ii),get_reg(ii));
 8005b2a:	f7fe fa05 	bl	8003f38 <get_addr>
 8005b2e:	1906      	adds	r6, r0, r4
 8005b30:	4620      	mov	r0, r4
 8005b32:	f7fe fa5b 	bl	8003fec <get_reg_name>
 8005b36:	4607      	mov	r7, r0
 8005b38:	4620      	mov	r0, r4
 8005b3a:	f7fe fa47 	bl	8003fcc <get_reg>
 8005b3e:	4621      	mov	r1, r4
 8005b40:	9000      	str	r0, [sp, #0]
 8005b42:	463b      	mov	r3, r7
 8005b44:	4632      	mov	r2, r6
 8005b46:	4628      	mov	r0, r5
 8005b48:	f7ff fdee 	bl	8005728 <print>
		for(int ii=0;ii< get_reg_length();ii++)
 8005b4c:	3401      	adds	r4, #1
 8005b4e:	e7e5      	b.n	8005b1c <shell_cmd_dumpregs+0x30>
 8005b50:	08008162 	.word	0x08008162
 8005b54:	08008104 	.word	0x08008104
 8005b58:	0800811b 	.word	0x0800811b
 8005b5c:	08008124 	.word	0x08008124
 8005b60:	08008140 	.word	0x08008140

08005b64 <shell_cmd_switchuartmode>:


//Set UART Mode
static int shell_cmd_switchuartmode(int argc, char ** argv)
{
	if (argc == 2)
 8005b64:	2802      	cmp	r0, #2
{
 8005b66:	b508      	push	{r3, lr}
	if (argc == 2)
 8005b68:	d10d      	bne.n	8005b86 <shell_cmd_switchuartmode+0x22>
	{
		switch (atoi(argv[1]))
 8005b6a:	6848      	ldr	r0, [r1, #4]
 8005b6c:	f001 f913 	bl	8006d96 <atoi>
 8005b70:	b118      	cbz	r0, 8005b7a <shell_cmd_switchuartmode+0x16>
 8005b72:	2801      	cmp	r0, #1
 8005b74:	d005      	beq.n	8005b82 <shell_cmd_switchuartmode+0x1e>
 8005b76:	2001      	movs	r0, #1
 8005b78:	e002      	b.n	8005b80 <shell_cmd_switchuartmode+0x1c>
		{
		case 0:
			UART_mode_SERIAL = (uint8_t)UART_MODE_DMX;
 8005b7a:	2001      	movs	r0, #1
 8005b7c:	4b03      	ldr	r3, [pc, #12]	; (8005b8c <shell_cmd_switchuartmode+0x28>)
			break;
		case 1:
			UART_mode_USB = (uint8_t)UART_MODE_DMX;
 8005b7e:	6018      	str	r0, [r3, #0]
	else
	{
		return 0;
	}
	return 1;
}
 8005b80:	bd08      	pop	{r3, pc}
			UART_mode_USB = (uint8_t)UART_MODE_DMX;
 8005b82:	4b03      	ldr	r3, [pc, #12]	; (8005b90 <shell_cmd_switchuartmode+0x2c>)
 8005b84:	e7fb      	b.n	8005b7e <shell_cmd_switchuartmode+0x1a>
		return 0;
 8005b86:	2000      	movs	r0, #0
 8005b88:	e7fa      	b.n	8005b80 <shell_cmd_switchuartmode+0x1c>
 8005b8a:	bf00      	nop
 8005b8c:	20000420 	.word	0x20000420
 8005b90:	20000421 	.word	0x20000421

08005b94 <shell_cmd_setuartmode>:
	if (argc == 2)
 8005b94:	2802      	cmp	r0, #2
{
 8005b96:	b538      	push	{r3, r4, r5, lr}
 8005b98:	460d      	mov	r5, r1
	if (argc == 2)
 8005b9a:	d117      	bne.n	8005bcc <shell_cmd_setuartmode+0x38>
		switch (atoi(argv[1]))
 8005b9c:	6848      	ldr	r0, [r1, #4]
 8005b9e:	f001 f8fa 	bl	8006d96 <atoi>
 8005ba2:	4604      	mov	r4, r0
 8005ba4:	b118      	cbz	r0, 8005bae <shell_cmd_setuartmode+0x1a>
 8005ba6:	2801      	cmp	r0, #1
 8005ba8:	d008      	beq.n	8005bbc <shell_cmd_setuartmode+0x28>
	return 1;
 8005baa:	2401      	movs	r4, #1
 8005bac:	e00c      	b.n	8005bc8 <shell_cmd_setuartmode+0x34>
			settings.UART_Mode_UART = atoi(argv[2]);
 8005bae:	68a8      	ldr	r0, [r5, #8]
 8005bb0:	f001 f8f1 	bl	8006d96 <atoi>
 8005bb4:	4b06      	ldr	r3, [pc, #24]	; (8005bd0 <shell_cmd_setuartmode+0x3c>)
 8005bb6:	f883 002a 	strb.w	r0, [r3, #42]	; 0x2a
 8005bba:	e7f6      	b.n	8005baa <shell_cmd_setuartmode+0x16>
			settings.UART_Mode_USB = atoi(argv[2]);
 8005bbc:	68a8      	ldr	r0, [r5, #8]
 8005bbe:	f001 f8ea 	bl	8006d96 <atoi>
 8005bc2:	4b03      	ldr	r3, [pc, #12]	; (8005bd0 <shell_cmd_setuartmode+0x3c>)
 8005bc4:	f883 002b 	strb.w	r0, [r3, #43]	; 0x2b
}
 8005bc8:	4620      	mov	r0, r4
 8005bca:	bd38      	pop	{r3, r4, r5, pc}
		return 0;
 8005bcc:	2400      	movs	r4, #0
 8005bce:	e7fb      	b.n	8005bc8 <shell_cmd_setuartmode+0x34>
 8005bd0:	20000a70 	.word	0x20000a70

08005bd4 <shell_cmd_setstriplength>:
	if (argc == 2)
 8005bd4:	2802      	cmp	r0, #2
{
 8005bd6:	b538      	push	{r3, r4, r5, lr}
 8005bd8:	460d      	mov	r5, r1
	if (argc == 2)
 8005bda:	d115      	bne.n	8005c08 <shell_cmd_setstriplength+0x34>
		switch (atoi(argv[1]))
 8005bdc:	6848      	ldr	r0, [r1, #4]
 8005bde:	f001 f8da 	bl	8006d96 <atoi>
 8005be2:	4604      	mov	r4, r0
 8005be4:	b118      	cbz	r0, 8005bee <shell_cmd_setstriplength+0x1a>
 8005be6:	2801      	cmp	r0, #1
 8005be8:	d007      	beq.n	8005bfa <shell_cmd_setstriplength+0x26>
	return 1;
 8005bea:	2401      	movs	r4, #1
 8005bec:	e00a      	b.n	8005c04 <shell_cmd_setstriplength+0x30>
			settings.strip1_length = atoi(argv[2]);
 8005bee:	68a8      	ldr	r0, [r5, #8]
 8005bf0:	f001 f8d1 	bl	8006d96 <atoi>
 8005bf4:	4b05      	ldr	r3, [pc, #20]	; (8005c0c <shell_cmd_setstriplength+0x38>)
 8005bf6:	84d8      	strh	r0, [r3, #38]	; 0x26
 8005bf8:	e7f7      	b.n	8005bea <shell_cmd_setstriplength+0x16>
			settings.strip2_length = atoi(argv[2]);
 8005bfa:	68a8      	ldr	r0, [r5, #8]
 8005bfc:	f001 f8cb 	bl	8006d96 <atoi>
 8005c00:	4b02      	ldr	r3, [pc, #8]	; (8005c0c <shell_cmd_setstriplength+0x38>)
 8005c02:	8518      	strh	r0, [r3, #40]	; 0x28
}
 8005c04:	4620      	mov	r0, r4
 8005c06:	bd38      	pop	{r3, r4, r5, pc}
		return 0;
 8005c08:	2400      	movs	r4, #0
 8005c0a:	e7fb      	b.n	8005c04 <shell_cmd_setstriplength+0x30>
 8005c0c:	20000a70 	.word	0x20000a70

08005c10 <shell_cmd_settriggerctrl>:
	if (argc == 5)
 8005c10:	2805      	cmp	r0, #5
{
 8005c12:	b570      	push	{r4, r5, r6, lr}
 8005c14:	460c      	mov	r4, r1
	if (argc == 5)
 8005c16:	d135      	bne.n	8005c84 <shell_cmd_settriggerctrl+0x74>
		switch (atoi(argv[1]))
 8005c18:	6848      	ldr	r0, [r1, #4]
 8005c1a:	f001 f8bc 	bl	8006d96 <atoi>
 8005c1e:	4605      	mov	r5, r0
 8005c20:	b118      	cbz	r0, 8005c2a <shell_cmd_settriggerctrl+0x1a>
 8005c22:	2801      	cmp	r0, #1
 8005c24:	d017      	beq.n	8005c56 <shell_cmd_settriggerctrl+0x46>
	return 1;
 8005c26:	2501      	movs	r5, #1
 8005c28:	e02a      	b.n	8005c80 <shell_cmd_settriggerctrl+0x70>
			settings.trigger_reg_hilo_A0 = atoi(argv[2]);
 8005c2a:	68a0      	ldr	r0, [r4, #8]
 8005c2c:	f001 f8b3 	bl	8006d96 <atoi>
 8005c30:	4d15      	ldr	r5, [pc, #84]	; (8005c88 <shell_cmd_settriggerctrl+0x78>)
 8005c32:	f885 0030 	strb.w	r0, [r5, #48]	; 0x30
			settings.trigger_val_hilo_A0 = atoi(argv[3]);
 8005c36:	68e0      	ldr	r0, [r4, #12]
 8005c38:	f001 f8ad 	bl	8006d96 <atoi>
 8005c3c:	f885 0031 	strb.w	r0, [r5, #49]	; 0x31
			settings.trigger_reg_lohi_A0 = atoi(argv[4]);
 8005c40:	6920      	ldr	r0, [r4, #16]
 8005c42:	f001 f8a8 	bl	8006d96 <atoi>
 8005c46:	f885 002e 	strb.w	r0, [r5, #46]	; 0x2e
			settings.trigger_val_lohi_A0 = atoi(argv[5]);
 8005c4a:	6960      	ldr	r0, [r4, #20]
 8005c4c:	f001 f8a3 	bl	8006d96 <atoi>
 8005c50:	f885 002f 	strb.w	r0, [r5, #47]	; 0x2f
 8005c54:	e7e7      	b.n	8005c26 <shell_cmd_settriggerctrl+0x16>
			settings.trigger_reg_hilo_A1 = atoi(argv[2]);
 8005c56:	68a0      	ldr	r0, [r4, #8]
 8005c58:	f001 f89d 	bl	8006d96 <atoi>
 8005c5c:	4e0a      	ldr	r6, [pc, #40]	; (8005c88 <shell_cmd_settriggerctrl+0x78>)
 8005c5e:	f886 0037 	strb.w	r0, [r6, #55]	; 0x37
			settings.trigger_val_hilo_A1 = atoi(argv[3]);
 8005c62:	68e0      	ldr	r0, [r4, #12]
 8005c64:	f001 f897 	bl	8006d96 <atoi>
 8005c68:	f886 0038 	strb.w	r0, [r6, #56]	; 0x38
			settings.trigger_reg_lohi_A1 = atoi(argv[4]);
 8005c6c:	6920      	ldr	r0, [r4, #16]
 8005c6e:	f001 f892 	bl	8006d96 <atoi>
 8005c72:	f886 0035 	strb.w	r0, [r6, #53]	; 0x35
			settings.trigger_val_lohi_A1 = atoi(argv[5]);
 8005c76:	6960      	ldr	r0, [r4, #20]
 8005c78:	f001 f88d 	bl	8006d96 <atoi>
 8005c7c:	f886 0036 	strb.w	r0, [r6, #54]	; 0x36
}
 8005c80:	4628      	mov	r0, r5
 8005c82:	bd70      	pop	{r4, r5, r6, pc}
		return 0;
 8005c84:	2500      	movs	r5, #0
 8005c86:	e7fb      	b.n	8005c80 <shell_cmd_settriggerctrl+0x70>
 8005c88:	20000a70 	.word	0x20000a70

08005c8c <shell_cmd_settriggerconfig>:
	if (argc == 4)
 8005c8c:	2804      	cmp	r0, #4
{
 8005c8e:	b570      	push	{r4, r5, r6, lr}
 8005c90:	460c      	mov	r4, r1
	if (argc == 4)
 8005c92:	d12b      	bne.n	8005cec <shell_cmd_settriggerconfig+0x60>
		switch (atoi(argv[1]))
 8005c94:	6848      	ldr	r0, [r1, #4]
 8005c96:	f001 f87e 	bl	8006d96 <atoi>
 8005c9a:	4605      	mov	r5, r0
 8005c9c:	b118      	cbz	r0, 8005ca6 <shell_cmd_settriggerconfig+0x1a>
 8005c9e:	2801      	cmp	r0, #1
 8005ca0:	d012      	beq.n	8005cc8 <shell_cmd_settriggerconfig+0x3c>
	return 1;
 8005ca2:	2501      	movs	r5, #1
 8005ca4:	e020      	b.n	8005ce8 <shell_cmd_settriggerconfig+0x5c>
			settings.trigger_mode_A0 = atoi(argv[2]);
 8005ca6:	68a0      	ldr	r0, [r4, #8]
 8005ca8:	f001 f875 	bl	8006d96 <atoi>
 8005cac:	4d10      	ldr	r5, [pc, #64]	; (8005cf0 <shell_cmd_settriggerconfig+0x64>)
 8005cae:	f885 002c 	strb.w	r0, [r5, #44]	; 0x2c
			settings.trigger_reg_A0 = atoi(argv[3]);
 8005cb2:	68e0      	ldr	r0, [r4, #12]
 8005cb4:	f001 f86f 	bl	8006d96 <atoi>
 8005cb8:	f885 002d 	strb.w	r0, [r5, #45]	; 0x2d
			settings.trigger_level_A0 = atoi(argv[4]);
 8005cbc:	6920      	ldr	r0, [r4, #16]
 8005cbe:	f001 f86a 	bl	8006d96 <atoi>
 8005cc2:	f885 0032 	strb.w	r0, [r5, #50]	; 0x32
 8005cc6:	e7ec      	b.n	8005ca2 <shell_cmd_settriggerconfig+0x16>
			settings.trigger_mode_A1 = atoi(argv[2]);
 8005cc8:	68a0      	ldr	r0, [r4, #8]
 8005cca:	f001 f864 	bl	8006d96 <atoi>
 8005cce:	4e08      	ldr	r6, [pc, #32]	; (8005cf0 <shell_cmd_settriggerconfig+0x64>)
 8005cd0:	f886 0033 	strb.w	r0, [r6, #51]	; 0x33
			settings.trigger_reg_A1 = atoi(argv[3]);
 8005cd4:	68e0      	ldr	r0, [r4, #12]
 8005cd6:	f001 f85e 	bl	8006d96 <atoi>
 8005cda:	f886 0034 	strb.w	r0, [r6, #52]	; 0x34
			settings.trigger_level_A1 = atoi(argv[4]);
 8005cde:	6920      	ldr	r0, [r4, #16]
 8005ce0:	f001 f859 	bl	8006d96 <atoi>
 8005ce4:	f886 0039 	strb.w	r0, [r6, #57]	; 0x39
}
 8005ce8:	4628      	mov	r0, r5
 8005cea:	bd70      	pop	{r4, r5, r6, pc}
		return 0;
 8005cec:	2500      	movs	r5, #0
 8005cee:	e7fb      	b.n	8005ce8 <shell_cmd_settriggerconfig+0x5c>
 8005cf0:	20000a70 	.word	0x20000a70

08005cf4 <shell_cmd_setgamma>:
	if (argc == 2)
 8005cf4:	2802      	cmp	r0, #2
{
 8005cf6:	b538      	push	{r3, r4, r5, lr}
 8005cf8:	460c      	mov	r4, r1
	if (argc == 2)
 8005cfa:	d118      	bne.n	8005d2e <shell_cmd_setgamma+0x3a>
		switch (atoi(argv[1]))
 8005cfc:	6848      	ldr	r0, [r1, #4]
 8005cfe:	f001 f84a 	bl	8006d96 <atoi>
 8005d02:	4d0c      	ldr	r5, [pc, #48]	; (8005d34 <shell_cmd_setgamma+0x40>)
 8005d04:	b138      	cbz	r0, 8005d16 <shell_cmd_setgamma+0x22>
 8005d06:	2802      	cmp	r0, #2
 8005d08:	d00b      	beq.n	8005d22 <shell_cmd_setgamma+0x2e>
			settings.gamma_green = atoi(argv[2]);
 8005d0a:	68a0      	ldr	r0, [r4, #8]
 8005d0c:	f001 f843 	bl	8006d96 <atoi>
 8005d10:	f8a5 0044 	strh.w	r0, [r5, #68]	; 0x44
 8005d14:	e003      	b.n	8005d1e <shell_cmd_setgamma+0x2a>
			settings.gamma_red = atoi(argv[2]);
 8005d16:	68a0      	ldr	r0, [r4, #8]
 8005d18:	f001 f83d 	bl	8006d96 <atoi>
 8005d1c:	87e8      	strh	r0, [r5, #62]	; 0x3e
	return 1;
 8005d1e:	2001      	movs	r0, #1
}
 8005d20:	bd38      	pop	{r3, r4, r5, pc}
			settings.gamma_blue = atoi(argv[2]);
 8005d22:	68a0      	ldr	r0, [r4, #8]
 8005d24:	f001 f837 	bl	8006d96 <atoi>
 8005d28:	f8a5 004a 	strh.w	r0, [r5, #74]	; 0x4a
 8005d2c:	e7f7      	b.n	8005d1e <shell_cmd_setgamma+0x2a>
		return 0;
 8005d2e:	2000      	movs	r0, #0
 8005d30:	e7f6      	b.n	8005d20 <shell_cmd_setgamma+0x2c>
 8005d32:	bf00      	nop
 8005d34:	20000a70 	.word	0x20000a70

08005d38 <shell_cmd_setoffset>:
	if (argc == 2)
 8005d38:	2802      	cmp	r0, #2
{
 8005d3a:	b538      	push	{r3, r4, r5, lr}
 8005d3c:	460c      	mov	r4, r1
	if (argc == 2)
 8005d3e:	d118      	bne.n	8005d72 <shell_cmd_setoffset+0x3a>
		switch (atoi(argv[1]))
 8005d40:	6848      	ldr	r0, [r1, #4]
 8005d42:	f001 f828 	bl	8006d96 <atoi>
 8005d46:	4d0c      	ldr	r5, [pc, #48]	; (8005d78 <shell_cmd_setoffset+0x40>)
 8005d48:	b138      	cbz	r0, 8005d5a <shell_cmd_setoffset+0x22>
 8005d4a:	2802      	cmp	r0, #2
 8005d4c:	d00b      	beq.n	8005d66 <shell_cmd_setoffset+0x2e>
			settings.offset_green = atoi(argv[2]);
 8005d4e:	68a0      	ldr	r0, [r4, #8]
 8005d50:	f001 f821 	bl	8006d96 <atoi>
 8005d54:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
 8005d58:	e003      	b.n	8005d62 <shell_cmd_setoffset+0x2a>
			settings.offset_red = atoi(argv[2]);
 8005d5a:	68a0      	ldr	r0, [r4, #8]
 8005d5c:	f001 f81b 	bl	8006d96 <atoi>
 8005d60:	8768      	strh	r0, [r5, #58]	; 0x3a
	return 1;
 8005d62:	2001      	movs	r0, #1
}
 8005d64:	bd38      	pop	{r3, r4, r5, pc}
			settings.offset_blue = atoi(argv[2]);
 8005d66:	68a0      	ldr	r0, [r4, #8]
 8005d68:	f001 f815 	bl	8006d96 <atoi>
 8005d6c:	f8a5 0046 	strh.w	r0, [r5, #70]	; 0x46
 8005d70:	e7f7      	b.n	8005d62 <shell_cmd_setoffset+0x2a>
		return 0;
 8005d72:	2000      	movs	r0, #0
 8005d74:	e7f6      	b.n	8005d64 <shell_cmd_setoffset+0x2c>
 8005d76:	bf00      	nop
 8005d78:	20000a70 	.word	0x20000a70

08005d7c <shell_cmd_setgain>:
	if (argc == 2)
 8005d7c:	2802      	cmp	r0, #2
{
 8005d7e:	b538      	push	{r3, r4, r5, lr}
 8005d80:	460c      	mov	r4, r1
	if (argc == 2)
 8005d82:	d118      	bne.n	8005db6 <shell_cmd_setgain+0x3a>
		switch (atoi(argv[1]))
 8005d84:	6848      	ldr	r0, [r1, #4]
 8005d86:	f001 f806 	bl	8006d96 <atoi>
 8005d8a:	4d0c      	ldr	r5, [pc, #48]	; (8005dbc <shell_cmd_setgain+0x40>)
 8005d8c:	b138      	cbz	r0, 8005d9e <shell_cmd_setgain+0x22>
 8005d8e:	2802      	cmp	r0, #2
 8005d90:	d00b      	beq.n	8005daa <shell_cmd_setgain+0x2e>
			settings.gain_green = atoi(argv[2]);
 8005d92:	68a0      	ldr	r0, [r4, #8]
 8005d94:	f000 ffff 	bl	8006d96 <atoi>
 8005d98:	f8a5 0042 	strh.w	r0, [r5, #66]	; 0x42
 8005d9c:	e003      	b.n	8005da6 <shell_cmd_setgain+0x2a>
			settings.gain_red = atoi(argv[2]);
 8005d9e:	68a0      	ldr	r0, [r4, #8]
 8005da0:	f000 fff9 	bl	8006d96 <atoi>
 8005da4:	87a8      	strh	r0, [r5, #60]	; 0x3c
	return 1;
 8005da6:	2001      	movs	r0, #1
}
 8005da8:	bd38      	pop	{r3, r4, r5, pc}
			settings.gain_blue = atoi(argv[2]);
 8005daa:	68a0      	ldr	r0, [r4, #8]
 8005dac:	f000 fff3 	bl	8006d96 <atoi>
 8005db0:	f8a5 0048 	strh.w	r0, [r5, #72]	; 0x48
 8005db4:	e7f7      	b.n	8005da6 <shell_cmd_setgain+0x2a>
		return 0;
 8005db6:	2000      	movs	r0, #0
 8005db8:	e7f6      	b.n	8005da8 <shell_cmd_setgain+0x2c>
 8005dba:	bf00      	nop
 8005dbc:	20000a70 	.word	0x20000a70

08005dc0 <shell_cmd_setfxmultiplier>:
{
 8005dc0:	b510      	push	{r4, lr}
	uint8_t val = atoi(argv[1]);
 8005dc2:	6848      	ldr	r0, [r1, #4]
 8005dc4:	f000 ffe7 	bl	8006d96 <atoi>
 8005dc8:	b2c0      	uxtb	r0, r0
	if ((val == 4) || (val == 2) || (val == 1))
 8005dca:	2804      	cmp	r0, #4
 8005dcc:	4c07      	ldr	r4, [pc, #28]	; (8005dec <shell_cmd_setfxmultiplier+0x2c>)
 8005dce:	d002      	beq.n	8005dd6 <shell_cmd_setfxmultiplier+0x16>
 8005dd0:	1e43      	subs	r3, r0, #1
 8005dd2:	2b01      	cmp	r3, #1
 8005dd4:	d803      	bhi.n	8005dde <shell_cmd_setfxmultiplier+0x1e>
		settings.fx_multiplier = val;
 8005dd6:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
}
 8005dda:	2001      	movs	r0, #1
 8005ddc:	bd10      	pop	{r4, pc}
		print("Invalid Multiplier");
 8005dde:	4804      	ldr	r0, [pc, #16]	; (8005df0 <shell_cmd_setfxmultiplier+0x30>)
 8005de0:	f7ff fca2 	bl	8005728 <print>
		settings.fx_multiplier = 4;
 8005de4:	2304      	movs	r3, #4
 8005de6:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8005dea:	e7f6      	b.n	8005dda <shell_cmd_setfxmultiplier+0x1a>
 8005dec:	20000a70 	.word	0x20000a70
 8005df0:	08008288 	.word	0x08008288

08005df4 <shell_cmd_test>:
	if (argc == 1)
 8005df4:	2801      	cmp	r0, #1
{
 8005df6:	b510      	push	{r4, lr}
 8005df8:	4604      	mov	r4, r0
	if (argc == 1)
 8005dfa:	d105      	bne.n	8005e08 <shell_cmd_test+0x14>
		print("Loopback Data: %s",argv[1]);
 8005dfc:	6849      	ldr	r1, [r1, #4]
 8005dfe:	4803      	ldr	r0, [pc, #12]	; (8005e0c <shell_cmd_test+0x18>)
 8005e00:	f7ff fc92 	bl	8005728 <print>
}
 8005e04:	4620      	mov	r0, r4
 8005e06:	bd10      	pop	{r4, pc}
	return 0;
 8005e08:	2400      	movs	r4, #0
 8005e0a:	e7fb      	b.n	8005e04 <shell_cmd_test+0x10>
 8005e0c:	0800829b 	.word	0x0800829b

08005e10 <shell_cmd_setreg>:
	if (argc == 2)
 8005e10:	2802      	cmp	r0, #2
{
 8005e12:	b538      	push	{r3, r4, r5, lr}
 8005e14:	460c      	mov	r4, r1
	if (argc == 2)
 8005e16:	d10c      	bne.n	8005e32 <shell_cmd_setreg+0x22>
		set_reg(atoi(argv[1]),atoi(argv[2]));
 8005e18:	6848      	ldr	r0, [r1, #4]
 8005e1a:	f000 ffbc 	bl	8006d96 <atoi>
 8005e1e:	4605      	mov	r5, r0
 8005e20:	68a0      	ldr	r0, [r4, #8]
 8005e22:	f000 ffb8 	bl	8006d96 <atoi>
 8005e26:	b2c1      	uxtb	r1, r0
 8005e28:	4628      	mov	r0, r5
 8005e2a:	f7fe f8c1 	bl	8003fb0 <set_reg>
 8005e2e:	2001      	movs	r0, #1
}
 8005e30:	bd38      	pop	{r3, r4, r5, pc}
		return 0;
 8005e32:	2000      	movs	r0, #0
 8005e34:	e7fc      	b.n	8005e30 <shell_cmd_setreg+0x20>

08005e36 <shell_cmd_setbrightness>:
	if (argc == 1)
 8005e36:	2801      	cmp	r0, #1
{
 8005e38:	b510      	push	{r4, lr}
 8005e3a:	4604      	mov	r4, r0
	if (argc == 1)
 8005e3c:	d108      	bne.n	8005e50 <shell_cmd_setbrightness+0x1a>
		set_reg(MAX_BRIGHTNESS,(uint8_t) atoi(argv[1]));
 8005e3e:	6848      	ldr	r0, [r1, #4]
 8005e40:	f000 ffa9 	bl	8006d96 <atoi>
 8005e44:	b2c1      	uxtb	r1, r0
 8005e46:	2000      	movs	r0, #0
 8005e48:	f7fe f8b2 	bl	8003fb0 <set_reg>
}
 8005e4c:	4620      	mov	r0, r4
 8005e4e:	bd10      	pop	{r4, pc}
		return 0;
 8005e50:	2400      	movs	r4, #0
 8005e52:	e7fb      	b.n	8005e4c <shell_cmd_setbrightness+0x16>

08005e54 <shell_cmd_setpwm>:
	if (argc == 3)
 8005e54:	2803      	cmp	r0, #3
{
 8005e56:	b570      	push	{r4, r5, r6, lr}
 8005e58:	460c      	mov	r4, r1
	if (argc == 3)
 8005e5a:	d111      	bne.n	8005e80 <shell_cmd_setpwm+0x2c>
		configPWM((pwmtimerid_t)atoi(argv[1]),(pwmchid_t)atoi(argv[2]), (uint16_t)atoi(argv[3]));
 8005e5c:	6848      	ldr	r0, [r1, #4]
 8005e5e:	f000 ff9a 	bl	8006d96 <atoi>
 8005e62:	4605      	mov	r5, r0
 8005e64:	68a0      	ldr	r0, [r4, #8]
 8005e66:	f000 ff96 	bl	8006d96 <atoi>
 8005e6a:	4606      	mov	r6, r0
 8005e6c:	68e0      	ldr	r0, [r4, #12]
 8005e6e:	f000 ff92 	bl	8006d96 <atoi>
 8005e72:	b2f1      	uxtb	r1, r6
 8005e74:	b282      	uxth	r2, r0
 8005e76:	b2e8      	uxtb	r0, r5
 8005e78:	f7ff f86e 	bl	8004f58 <configPWM>
 8005e7c:	2001      	movs	r0, #1
}
 8005e7e:	bd70      	pop	{r4, r5, r6, pc}
		return 0;
 8005e80:	2000      	movs	r0, #0
 8005e82:	e7fc      	b.n	8005e7e <shell_cmd_setpwm+0x2a>

08005e84 <HAL_MspInit>:
 8005e84:	4b0e      	ldr	r3, [pc, #56]	; (8005ec0 <HAL_MspInit+0x3c>)
 8005e86:	b082      	sub	sp, #8
 8005e88:	699a      	ldr	r2, [r3, #24]
 8005e8a:	f042 0201 	orr.w	r2, r2, #1
 8005e8e:	619a      	str	r2, [r3, #24]
 8005e90:	699a      	ldr	r2, [r3, #24]
 8005e92:	f002 0201 	and.w	r2, r2, #1
 8005e96:	9200      	str	r2, [sp, #0]
 8005e98:	9a00      	ldr	r2, [sp, #0]
 8005e9a:	69da      	ldr	r2, [r3, #28]
 8005e9c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005ea0:	61da      	str	r2, [r3, #28]
 8005ea2:	69db      	ldr	r3, [r3, #28]
 8005ea4:	4a07      	ldr	r2, [pc, #28]	; (8005ec4 <HAL_MspInit+0x40>)
 8005ea6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005eaa:	9301      	str	r3, [sp, #4]
 8005eac:	9b01      	ldr	r3, [sp, #4]
 8005eae:	6853      	ldr	r3, [r2, #4]
 8005eb0:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8005eb4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8005eb8:	6053      	str	r3, [r2, #4]
 8005eba:	b002      	add	sp, #8
 8005ebc:	4770      	bx	lr
 8005ebe:	bf00      	nop
 8005ec0:	40021000 	.word	0x40021000
 8005ec4:	40010000 	.word	0x40010000

08005ec8 <HAL_ADC_MspInit>:
 8005ec8:	b530      	push	{r4, r5, lr}
 8005eca:	2410      	movs	r4, #16
 8005ecc:	4605      	mov	r5, r0
 8005ece:	b089      	sub	sp, #36	; 0x24
 8005ed0:	4622      	mov	r2, r4
 8005ed2:	2100      	movs	r1, #0
 8005ed4:	eb0d 0004 	add.w	r0, sp, r4
 8005ed8:	f000 ffaf 	bl	8006e3a <memset>
 8005edc:	682b      	ldr	r3, [r5, #0]
 8005ede:	4a1e      	ldr	r2, [pc, #120]	; (8005f58 <HAL_ADC_MspInit+0x90>)
 8005ee0:	4293      	cmp	r3, r2
 8005ee2:	d11d      	bne.n	8005f20 <HAL_ADC_MspInit+0x58>
 8005ee4:	4b1d      	ldr	r3, [pc, #116]	; (8005f5c <HAL_ADC_MspInit+0x94>)
 8005ee6:	eb0d 0104 	add.w	r1, sp, r4
 8005eea:	699a      	ldr	r2, [r3, #24]
 8005eec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ef0:	619a      	str	r2, [r3, #24]
 8005ef2:	699a      	ldr	r2, [r3, #24]
 8005ef4:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8005ef8:	9200      	str	r2, [sp, #0]
 8005efa:	9a00      	ldr	r2, [sp, #0]
 8005efc:	699a      	ldr	r2, [r3, #24]
 8005efe:	f042 0204 	orr.w	r2, r2, #4
 8005f02:	619a      	str	r2, [r3, #24]
 8005f04:	699b      	ldr	r3, [r3, #24]
 8005f06:	2201      	movs	r2, #1
 8005f08:	f003 0304 	and.w	r3, r3, #4
 8005f0c:	9301      	str	r3, [sp, #4]
 8005f0e:	9b01      	ldr	r3, [sp, #4]
 8005f10:	2303      	movs	r3, #3
 8005f12:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005f16:	4812      	ldr	r0, [pc, #72]	; (8005f60 <HAL_ADC_MspInit+0x98>)
 8005f18:	f7fb f908 	bl	800112c <HAL_GPIO_Init>
 8005f1c:	b009      	add	sp, #36	; 0x24
 8005f1e:	bd30      	pop	{r4, r5, pc}
 8005f20:	4a10      	ldr	r2, [pc, #64]	; (8005f64 <HAL_ADC_MspInit+0x9c>)
 8005f22:	4293      	cmp	r3, r2
 8005f24:	d1fa      	bne.n	8005f1c <HAL_ADC_MspInit+0x54>
 8005f26:	4b0d      	ldr	r3, [pc, #52]	; (8005f5c <HAL_ADC_MspInit+0x94>)
 8005f28:	a904      	add	r1, sp, #16
 8005f2a:	699a      	ldr	r2, [r3, #24]
 8005f2c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005f30:	619a      	str	r2, [r3, #24]
 8005f32:	699a      	ldr	r2, [r3, #24]
 8005f34:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8005f38:	9202      	str	r2, [sp, #8]
 8005f3a:	9a02      	ldr	r2, [sp, #8]
 8005f3c:	699a      	ldr	r2, [r3, #24]
 8005f3e:	f042 0204 	orr.w	r2, r2, #4
 8005f42:	619a      	str	r2, [r3, #24]
 8005f44:	699b      	ldr	r3, [r3, #24]
 8005f46:	9404      	str	r4, [sp, #16]
 8005f48:	f003 0304 	and.w	r3, r3, #4
 8005f4c:	9303      	str	r3, [sp, #12]
 8005f4e:	9b03      	ldr	r3, [sp, #12]
 8005f50:	2303      	movs	r3, #3
 8005f52:	9305      	str	r3, [sp, #20]
 8005f54:	e7df      	b.n	8005f16 <HAL_ADC_MspInit+0x4e>
 8005f56:	bf00      	nop
 8005f58:	40012400 	.word	0x40012400
 8005f5c:	40021000 	.word	0x40021000
 8005f60:	40010800 	.word	0x40010800
 8005f64:	40012800 	.word	0x40012800

08005f68 <HAL_UART_MspInit>:
 8005f68:	2210      	movs	r2, #16
 8005f6a:	b510      	push	{r4, lr}
 8005f6c:	4604      	mov	r4, r0
 8005f6e:	b088      	sub	sp, #32
 8005f70:	eb0d 0002 	add.w	r0, sp, r2
 8005f74:	2100      	movs	r1, #0
 8005f76:	f000 ff60 	bl	8006e3a <memset>
 8005f7a:	6823      	ldr	r3, [r4, #0]
 8005f7c:	4a2a      	ldr	r2, [pc, #168]	; (8006028 <HAL_UART_MspInit+0xc0>)
 8005f7e:	4293      	cmp	r3, r2
 8005f80:	d125      	bne.n	8005fce <HAL_UART_MspInit+0x66>
 8005f82:	4b2a      	ldr	r3, [pc, #168]	; (800602c <HAL_UART_MspInit+0xc4>)
 8005f84:	2040      	movs	r0, #64	; 0x40
 8005f86:	699a      	ldr	r2, [r3, #24]
 8005f88:	a904      	add	r1, sp, #16
 8005f8a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005f8e:	619a      	str	r2, [r3, #24]
 8005f90:	699a      	ldr	r2, [r3, #24]
 8005f92:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8005f96:	9200      	str	r2, [sp, #0]
 8005f98:	9a00      	ldr	r2, [sp, #0]
 8005f9a:	699a      	ldr	r2, [r3, #24]
 8005f9c:	f042 0208 	orr.w	r2, r2, #8
 8005fa0:	619a      	str	r2, [r3, #24]
 8005fa2:	699b      	ldr	r3, [r3, #24]
 8005fa4:	f003 0308 	and.w	r3, r3, #8
 8005fa8:	9301      	str	r3, [sp, #4]
 8005faa:	9b01      	ldr	r3, [sp, #4]
 8005fac:	2312      	movs	r3, #18
 8005fae:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8005fb2:	2303      	movs	r3, #3
 8005fb4:	481e      	ldr	r0, [pc, #120]	; (8006030 <HAL_UART_MspInit+0xc8>)
 8005fb6:	9307      	str	r3, [sp, #28]
 8005fb8:	f7fb f8b8 	bl	800112c <HAL_GPIO_Init>
 8005fbc:	4a1d      	ldr	r2, [pc, #116]	; (8006034 <HAL_UART_MspInit+0xcc>)
 8005fbe:	6853      	ldr	r3, [r2, #4]
 8005fc0:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8005fc4:	f043 0304 	orr.w	r3, r3, #4
 8005fc8:	6053      	str	r3, [r2, #4]
 8005fca:	b008      	add	sp, #32
 8005fcc:	bd10      	pop	{r4, pc}
 8005fce:	4a1a      	ldr	r2, [pc, #104]	; (8006038 <HAL_UART_MspInit+0xd0>)
 8005fd0:	4293      	cmp	r3, r2
 8005fd2:	d1fa      	bne.n	8005fca <HAL_UART_MspInit+0x62>
 8005fd4:	4b15      	ldr	r3, [pc, #84]	; (800602c <HAL_UART_MspInit+0xc4>)
 8005fd6:	a904      	add	r1, sp, #16
 8005fd8:	69da      	ldr	r2, [r3, #28]
 8005fda:	4815      	ldr	r0, [pc, #84]	; (8006030 <HAL_UART_MspInit+0xc8>)
 8005fdc:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8005fe0:	61da      	str	r2, [r3, #28]
 8005fe2:	69da      	ldr	r2, [r3, #28]
 8005fe4:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
 8005fe8:	9202      	str	r2, [sp, #8]
 8005fea:	9a02      	ldr	r2, [sp, #8]
 8005fec:	699a      	ldr	r2, [r3, #24]
 8005fee:	f042 0208 	orr.w	r2, r2, #8
 8005ff2:	619a      	str	r2, [r3, #24]
 8005ff4:	699b      	ldr	r3, [r3, #24]
 8005ff6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005ffa:	f003 0308 	and.w	r3, r3, #8
 8005ffe:	9303      	str	r3, [sp, #12]
 8006000:	9b03      	ldr	r3, [sp, #12]
 8006002:	2302      	movs	r3, #2
 8006004:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8006008:	2303      	movs	r3, #3
 800600a:	9307      	str	r3, [sp, #28]
 800600c:	f7fb f88e 	bl	800112c <HAL_GPIO_Init>
 8006010:	2300      	movs	r3, #0
 8006012:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8006016:	4806      	ldr	r0, [pc, #24]	; (8006030 <HAL_UART_MspInit+0xc8>)
 8006018:	e9cd 1304 	strd	r1, r3, [sp, #16]
 800601c:	a904      	add	r1, sp, #16
 800601e:	9306      	str	r3, [sp, #24]
 8006020:	f7fb f884 	bl	800112c <HAL_GPIO_Init>
 8006024:	e7d1      	b.n	8005fca <HAL_UART_MspInit+0x62>
 8006026:	bf00      	nop
 8006028:	40013800 	.word	0x40013800
 800602c:	40021000 	.word	0x40021000
 8006030:	40010c00 	.word	0x40010c00
 8006034:	40010000 	.word	0x40010000
 8006038:	40004800 	.word	0x40004800

0800603c <NMI_Handler>:
 800603c:	4770      	bx	lr

0800603e <HardFault_Handler>:
 800603e:	e7fe      	b.n	800603e <HardFault_Handler>

08006040 <MemManage_Handler>:
 8006040:	e7fe      	b.n	8006040 <MemManage_Handler>

08006042 <BusFault_Handler>:
 8006042:	e7fe      	b.n	8006042 <BusFault_Handler>

08006044 <UsageFault_Handler>:
 8006044:	e7fe      	b.n	8006044 <UsageFault_Handler>

08006046 <SVC_Handler>:
 8006046:	4770      	bx	lr

08006048 <DebugMon_Handler>:
 8006048:	4770      	bx	lr

0800604a <PendSV_Handler>:
 800604a:	4770      	bx	lr

0800604c <SysTick_Handler>:
 800604c:	f7fa bb40 	b.w	80006d0 <HAL_IncTick>

08006050 <DMA1_Channel3_IRQHandler>:
 8006050:	4801      	ldr	r0, [pc, #4]	; (8006058 <DMA1_Channel3_IRQHandler+0x8>)
 8006052:	f7fa bea9 	b.w	8000da8 <HAL_DMA_IRQHandler>
 8006056:	bf00      	nop
 8006058:	20000cec 	.word	0x20000cec

0800605c <DMA1_Channel4_IRQHandler>:
 800605c:	4801      	ldr	r0, [pc, #4]	; (8006064 <DMA1_Channel4_IRQHandler+0x8>)
 800605e:	f7fa bea3 	b.w	8000da8 <HAL_DMA_IRQHandler>
 8006062:	bf00      	nop
 8006064:	20000ca8 	.word	0x20000ca8

08006068 <USB_LP_CAN1_RX0_IRQHandler>:
 8006068:	4801      	ldr	r0, [pc, #4]	; (8006070 <USB_LP_CAN1_RX0_IRQHandler+0x8>)
 800606a:	f7fb ba7b 	b.w	8001564 <HAL_PCD_IRQHandler>
 800606e:	bf00      	nop
 8006070:	200014bc 	.word	0x200014bc

08006074 <_sbrk>:
 8006074:	b508      	push	{r3, lr}
 8006076:	4b0a      	ldr	r3, [pc, #40]	; (80060a0 <_sbrk+0x2c>)
 8006078:	4602      	mov	r2, r0
 800607a:	6819      	ldr	r1, [r3, #0]
 800607c:	b909      	cbnz	r1, 8006082 <_sbrk+0xe>
 800607e:	4909      	ldr	r1, [pc, #36]	; (80060a4 <_sbrk+0x30>)
 8006080:	6019      	str	r1, [r3, #0]
 8006082:	4669      	mov	r1, sp
 8006084:	6818      	ldr	r0, [r3, #0]
 8006086:	4402      	add	r2, r0
 8006088:	428a      	cmp	r2, r1
 800608a:	d906      	bls.n	800609a <_sbrk+0x26>
 800608c:	f000 fe90 	bl	8006db0 <__errno>
 8006090:	230c      	movs	r3, #12
 8006092:	6003      	str	r3, [r0, #0]
 8006094:	f04f 30ff 	mov.w	r0, #4294967295
 8006098:	bd08      	pop	{r3, pc}
 800609a:	601a      	str	r2, [r3, #0]
 800609c:	e7fc      	b.n	8006098 <_sbrk+0x24>
 800609e:	bf00      	nop
 80060a0:	200006f8 	.word	0x200006f8
 80060a4:	20001930 	.word	0x20001930

080060a8 <SystemInit>:
 80060a8:	4b0f      	ldr	r3, [pc, #60]	; (80060e8 <SystemInit+0x40>)
 80060aa:	681a      	ldr	r2, [r3, #0]
 80060ac:	f042 0201 	orr.w	r2, r2, #1
 80060b0:	601a      	str	r2, [r3, #0]
 80060b2:	6859      	ldr	r1, [r3, #4]
 80060b4:	4a0d      	ldr	r2, [pc, #52]	; (80060ec <SystemInit+0x44>)
 80060b6:	400a      	ands	r2, r1
 80060b8:	605a      	str	r2, [r3, #4]
 80060ba:	681a      	ldr	r2, [r3, #0]
 80060bc:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80060c0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80060c4:	601a      	str	r2, [r3, #0]
 80060c6:	681a      	ldr	r2, [r3, #0]
 80060c8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80060cc:	601a      	str	r2, [r3, #0]
 80060ce:	685a      	ldr	r2, [r3, #4]
 80060d0:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 80060d4:	605a      	str	r2, [r3, #4]
 80060d6:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 80060da:	609a      	str	r2, [r3, #8]
 80060dc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80060e0:	4b03      	ldr	r3, [pc, #12]	; (80060f0 <SystemInit+0x48>)
 80060e2:	609a      	str	r2, [r3, #8]
 80060e4:	4770      	bx	lr
 80060e6:	bf00      	nop
 80060e8:	40021000 	.word	0x40021000
 80060ec:	f8ff0000 	.word	0xf8ff0000
 80060f0:	e000ed00 	.word	0xe000ed00

080060f4 <lights_off>:
 80060f4:	b538      	push	{r3, r4, r5, lr}
 80060f6:	2400      	movs	r4, #0
 80060f8:	4d05      	ldr	r5, [pc, #20]	; (8006110 <lights_off+0x1c>)
 80060fa:	192b      	adds	r3, r5, r4
 80060fc:	5d28      	ldrb	r0, [r5, r4]
 80060fe:	2200      	movs	r2, #0
 8006100:	7859      	ldrb	r1, [r3, #1]
 8006102:	3402      	adds	r4, #2
 8006104:	f7fe ff28 	bl	8004f58 <configPWM>
 8006108:	2c14      	cmp	r4, #20
 800610a:	d1f6      	bne.n	80060fa <lights_off+0x6>
 800610c:	bd38      	pop	{r3, r4, r5, pc}
 800610e:	bf00      	nop
 8006110:	20000189 	.word	0x20000189

08006114 <process_testmode>:
 8006114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006118:	4a21      	ldr	r2, [pc, #132]	; (80061a0 <process_testmode+0x8c>)
 800611a:	4b22      	ldr	r3, [pc, #136]	; (80061a4 <process_testmode+0x90>)
 800611c:	7811      	ldrb	r1, [r2, #0]
 800611e:	881c      	ldrh	r4, [r3, #0]
 8006120:	461d      	mov	r5, r3
 8006122:	4616      	mov	r6, r2
 8006124:	b141      	cbz	r1, 8006138 <process_testmode+0x24>
 8006126:	b91c      	cbnz	r4, 8006130 <process_testmode+0x1c>
 8006128:	4620      	mov	r0, r4
 800612a:	7014      	strb	r4, [r2, #0]
 800612c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006130:	3c01      	subs	r4, #1
 8006132:	801c      	strh	r4, [r3, #0]
 8006134:	2001      	movs	r0, #1
 8006136:	e7f9      	b.n	800612c <process_testmode+0x18>
 8006138:	b9bc      	cbnz	r4, 800616a <process_testmode+0x56>
 800613a:	f64e 2360 	movw	r3, #60000	; 0xea60
 800613e:	4f1a      	ldr	r7, [pc, #104]	; (80061a8 <process_testmode+0x94>)
 8006140:	802b      	strh	r3, [r5, #0]
 8006142:	f7ff ffd7 	bl	80060f4 <lights_off>
 8006146:	4b19      	ldr	r3, [pc, #100]	; (80061ac <process_testmode+0x98>)
 8006148:	7838      	ldrb	r0, [r7, #0]
 800614a:	f240 4234 	movw	r2, #1076	; 0x434
 800614e:	eb03 0140 	add.w	r1, r3, r0, lsl #1
 8006152:	7849      	ldrb	r1, [r1, #1]
 8006154:	f813 0010 	ldrb.w	r0, [r3, r0, lsl #1]
 8006158:	f7fe fefe 	bl	8004f58 <configPWM>
 800615c:	783b      	ldrb	r3, [r7, #0]
 800615e:	3301      	adds	r3, #1
 8006160:	b2db      	uxtb	r3, r3
 8006162:	2b0a      	cmp	r3, #10
 8006164:	bf14      	ite	ne
 8006166:	703b      	strbne	r3, [r7, #0]
 8006168:	703c      	strbeq	r4, [r7, #0]
 800616a:	882b      	ldrh	r3, [r5, #0]
 800616c:	4c10      	ldr	r4, [pc, #64]	; (80061b0 <process_testmode+0x9c>)
 800616e:	3b01      	subs	r3, #1
 8006170:	802b      	strh	r3, [r5, #0]
 8006172:	f7fe f9c1 	bl	80044f8 <check_button>
 8006176:	f894 8000 	ldrb.w	r8, [r4]
 800617a:	4607      	mov	r7, r0
 800617c:	f1b8 0f00 	cmp.w	r8, #0
 8006180:	d10b      	bne.n	800619a <process_testmode+0x86>
 8006182:	2801      	cmp	r0, #1
 8006184:	d109      	bne.n	800619a <process_testmode+0x86>
 8006186:	7020      	strb	r0, [r4, #0]
 8006188:	f7ff ffb4 	bl	80060f4 <lights_off>
 800618c:	f64e 2360 	movw	r3, #60000	; 0xea60
 8006190:	802b      	strh	r3, [r5, #0]
 8006192:	4b05      	ldr	r3, [pc, #20]	; (80061a8 <process_testmode+0x94>)
 8006194:	7037      	strb	r7, [r6, #0]
 8006196:	f883 8000 	strb.w	r8, [r3]
 800619a:	7027      	strb	r7, [r4, #0]
 800619c:	e7ca      	b.n	8006134 <process_testmode+0x20>
 800619e:	bf00      	nop
 80061a0:	200006fe 	.word	0x200006fe
 80061a4:	200006fc 	.word	0x200006fc
 80061a8:	200006ff 	.word	0x200006ff
 80061ac:	20000189 	.word	0x20000189
 80061b0:	20000188 	.word	0x20000188

080061b4 <ADC1_2_IRQHandler>:
 80061b4:	4b01      	ldr	r3, [pc, #4]	; (80061bc <ADC1_2_IRQHandler+0x8>)
 80061b6:	6818      	ldr	r0, [r3, #0]
 80061b8:	f7fa baa0 	b.w	80006fc <HAL_ADC_IRQHandler>
 80061bc:	200001a0 	.word	0x200001a0

080061c0 <HAL_ADC_ConvCpltCallback>:
 80061c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061c2:	6804      	ldr	r4, [r0, #0]
 80061c4:	4b1a      	ldr	r3, [pc, #104]	; (8006230 <HAL_ADC_ConvCpltCallback+0x70>)
 80061c6:	4605      	mov	r5, r0
 80061c8:	1ae3      	subs	r3, r4, r3
 80061ca:	425c      	negs	r4, r3
 80061cc:	415c      	adcs	r4, r3
 80061ce:	f7fa fa91 	bl	80006f4 <HAL_ADC_GetValue>
 80061d2:	4a18      	ldr	r2, [pc, #96]	; (8006234 <HAL_ADC_ConvCpltCallback+0x74>)
 80061d4:	0121      	lsls	r1, r4, #4
 80061d6:	1857      	adds	r7, r2, r1
 80061d8:	7bbb      	ldrb	r3, [r7, #14]
 80061da:	00e4      	lsls	r4, r4, #3
 80061dc:	18e6      	adds	r6, r4, r3
 80061de:	3301      	adds	r3, #1
 80061e0:	b2db      	uxtb	r3, r3
 80061e2:	eb02 0646 	add.w	r6, r2, r6, lsl #1
 80061e6:	0900      	lsrs	r0, r0, #4
 80061e8:	2b05      	cmp	r3, #5
 80061ea:	80b0      	strh	r0, [r6, #4]
 80061ec:	73bb      	strb	r3, [r7, #14]
 80061ee:	d111      	bne.n	8006214 <HAL_ADC_ConvCpltCallback+0x54>
 80061f0:	2000      	movs	r0, #0
 80061f2:	3406      	adds	r4, #6
 80061f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80061f8:	3402      	adds	r4, #2
 80061fa:	3b01      	subs	r3, #1
 80061fc:	f834 6d02 	ldrh.w	r6, [r4, #-2]!
 8006200:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8006204:	4430      	add	r0, r6
 8006206:	d1f8      	bne.n	80061fa <HAL_ADC_ConvCpltCallback+0x3a>
 8006208:	1854      	adds	r4, r2, r1
 800620a:	73a3      	strb	r3, [r4, #14]
 800620c:	2305      	movs	r3, #5
 800620e:	fbb0 f0f3 	udiv	r0, r0, r3
 8006212:	5250      	strh	r0, [r2, r1]
 8006214:	682a      	ldr	r2, [r5, #0]
 8006216:	4b08      	ldr	r3, [pc, #32]	; (8006238 <HAL_ADC_ConvCpltCallback+0x78>)
 8006218:	429a      	cmp	r2, r3
 800621a:	bf08      	it	eq
 800621c:	4a07      	ldreq	r2, [pc, #28]	; (800623c <HAL_ADC_ConvCpltCallback+0x7c>)
 800621e:	4b08      	ldr	r3, [pc, #32]	; (8006240 <HAL_ADC_ConvCpltCallback+0x80>)
 8006220:	bf18      	it	ne
 8006222:	4a08      	ldrne	r2, [pc, #32]	; (8006244 <HAL_ADC_ConvCpltCallback+0x84>)
 8006224:	601a      	str	r2, [r3, #0]
 8006226:	6818      	ldr	r0, [r3, #0]
 8006228:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800622c:	f7fa bb92 	b.w	8000954 <HAL_ADC_Start_IT>
 8006230:	40012800 	.word	0x40012800
 8006234:	20000df0 	.word	0x20000df0
 8006238:	40012400 	.word	0x40012400
 800623c:	20000b6c 	.word	0x20000b6c
 8006240:	200001a0 	.word	0x200001a0
 8006244:	20000be0 	.word	0x20000be0

08006248 <init_trigger>:
 8006248:	b510      	push	{r4, lr}
 800624a:	2410      	movs	r4, #16
 800624c:	4b0c      	ldr	r3, [pc, #48]	; (8006280 <init_trigger+0x38>)
 800624e:	4622      	mov	r2, r4
 8006250:	4618      	mov	r0, r3
 8006252:	2100      	movs	r1, #0
 8006254:	f000 fdf1 	bl	8006e3a <memset>
 8006258:	4622      	mov	r2, r4
 800625a:	2100      	movs	r1, #0
 800625c:	4420      	add	r0, r4
 800625e:	f000 fdec 	bl	8006e3a <memset>
 8006262:	2200      	movs	r2, #0
 8006264:	2012      	movs	r0, #18
 8006266:	4611      	mov	r1, r2
 8006268:	f7fa fc90 	bl	8000b8c <HAL_NVIC_SetPriority>
 800626c:	2012      	movs	r0, #18
 800626e:	f7fa fcc1 	bl	8000bf4 <HAL_NVIC_EnableIRQ>
 8006272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006276:	4b03      	ldr	r3, [pc, #12]	; (8006284 <init_trigger+0x3c>)
 8006278:	6818      	ldr	r0, [r3, #0]
 800627a:	f7fa bb6b 	b.w	8000954 <HAL_ADC_Start_IT>
 800627e:	bf00      	nop
 8006280:	20000df0 	.word	0x20000df0
 8006284:	200001a0 	.word	0x200001a0

08006288 <process_trigger>:
 8006288:	b538      	push	{r3, r4, r5, lr}
 800628a:	4c29      	ldr	r4, [pc, #164]	; (8006330 <process_trigger+0xa8>)
 800628c:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
 8006290:	b150      	cbz	r0, 80062a8 <process_trigger+0x20>
 8006292:	4d28      	ldr	r5, [pc, #160]	; (8006334 <process_trigger+0xac>)
 8006294:	8829      	ldrh	r1, [r5, #0]
 8006296:	886a      	ldrh	r2, [r5, #2]
 8006298:	4291      	cmp	r1, r2
 800629a:	d005      	beq.n	80062a8 <process_trigger+0x20>
 800629c:	2801      	cmp	r0, #1
 800629e:	d012      	beq.n	80062c6 <process_trigger+0x3e>
 80062a0:	2802      	cmp	r0, #2
 80062a2:	d016      	beq.n	80062d2 <process_trigger+0x4a>
 80062a4:	882b      	ldrh	r3, [r5, #0]
 80062a6:	806b      	strh	r3, [r5, #2]
 80062a8:	f894 0033 	ldrb.w	r0, [r4, #51]	; 0x33
 80062ac:	b150      	cbz	r0, 80062c4 <process_trigger+0x3c>
 80062ae:	4d21      	ldr	r5, [pc, #132]	; (8006334 <process_trigger+0xac>)
 80062b0:	8a29      	ldrh	r1, [r5, #16]
 80062b2:	8a6a      	ldrh	r2, [r5, #18]
 80062b4:	4291      	cmp	r1, r2
 80062b6:	d005      	beq.n	80062c4 <process_trigger+0x3c>
 80062b8:	2801      	cmp	r0, #1
 80062ba:	d01e      	beq.n	80062fa <process_trigger+0x72>
 80062bc:	2802      	cmp	r0, #2
 80062be:	d022      	beq.n	8006306 <process_trigger+0x7e>
 80062c0:	8a2b      	ldrh	r3, [r5, #16]
 80062c2:	826b      	strh	r3, [r5, #18]
 80062c4:	bd38      	pop	{r3, r4, r5, pc}
 80062c6:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 80062ca:	b2c9      	uxtb	r1, r1
 80062cc:	f7fd fe70 	bl	8003fb0 <set_reg>
 80062d0:	e7e8      	b.n	80062a4 <process_trigger+0x1c>
 80062d2:	f894 3032 	ldrb.w	r3, [r4, #50]	; 0x32
 80062d6:	4299      	cmp	r1, r3
 80062d8:	d906      	bls.n	80062e8 <process_trigger+0x60>
 80062da:	429a      	cmp	r2, r3
 80062dc:	d204      	bcs.n	80062e8 <process_trigger+0x60>
 80062de:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 80062e2:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 80062e6:	e7f1      	b.n	80062cc <process_trigger+0x44>
 80062e8:	4299      	cmp	r1, r3
 80062ea:	d2db      	bcs.n	80062a4 <process_trigger+0x1c>
 80062ec:	429a      	cmp	r2, r3
 80062ee:	d9d9      	bls.n	80062a4 <process_trigger+0x1c>
 80062f0:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 80062f4:	f894 0030 	ldrb.w	r0, [r4, #48]	; 0x30
 80062f8:	e7e8      	b.n	80062cc <process_trigger+0x44>
 80062fa:	f894 0034 	ldrb.w	r0, [r4, #52]	; 0x34
 80062fe:	b2c9      	uxtb	r1, r1
 8006300:	f7fd fe56 	bl	8003fb0 <set_reg>
 8006304:	e7dc      	b.n	80062c0 <process_trigger+0x38>
 8006306:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800630a:	4299      	cmp	r1, r3
 800630c:	d906      	bls.n	800631c <process_trigger+0x94>
 800630e:	429a      	cmp	r2, r3
 8006310:	d204      	bcs.n	800631c <process_trigger+0x94>
 8006312:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
 8006316:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
 800631a:	e7f1      	b.n	8006300 <process_trigger+0x78>
 800631c:	4299      	cmp	r1, r3
 800631e:	d2cf      	bcs.n	80062c0 <process_trigger+0x38>
 8006320:	429a      	cmp	r2, r3
 8006322:	d9cd      	bls.n	80062c0 <process_trigger+0x38>
 8006324:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 8006328:	f894 0037 	ldrb.w	r0, [r4, #55]	; 0x37
 800632c:	e7e8      	b.n	8006300 <process_trigger+0x78>
 800632e:	bf00      	nop
 8006330:	20000a70 	.word	0x20000a70
 8006334:	20000df0 	.word	0x20000df0

08006338 <print_adc_data>:
 8006338:	2300      	movs	r3, #0
 800633a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800633e:	4c12      	ldr	r4, [pc, #72]	; (8006388 <print_adc_data+0x50>)
 8006340:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80063a0 <print_adc_data+0x68>
 8006344:	4f11      	ldr	r7, [pc, #68]	; (800638c <print_adc_data+0x54>)
 8006346:	4e12      	ldr	r6, [pc, #72]	; (8006390 <print_adc_data+0x58>)
 8006348:	1c5d      	adds	r5, r3, #1
 800634a:	4629      	mov	r1, r5
 800634c:	4640      	mov	r0, r8
 800634e:	f7ff f9eb 	bl	8005728 <print>
 8006352:	4638      	mov	r0, r7
 8006354:	f7ff f9e8 	bl	8005728 <print>
 8006358:	8821      	ldrh	r1, [r4, #0]
 800635a:	4630      	mov	r0, r6
 800635c:	f7ff f9e4 	bl	8005728 <print>
 8006360:	8861      	ldrh	r1, [r4, #2]
 8006362:	480c      	ldr	r0, [pc, #48]	; (8006394 <print_adc_data+0x5c>)
 8006364:	f7ff f9e0 	bl	8005728 <print>
 8006368:	7ba1      	ldrb	r1, [r4, #14]
 800636a:	480b      	ldr	r0, [pc, #44]	; (8006398 <print_adc_data+0x60>)
 800636c:	f7ff f9dc 	bl	8005728 <print>
 8006370:	480a      	ldr	r0, [pc, #40]	; (800639c <print_adc_data+0x64>)
 8006372:	f7ff f9d9 	bl	8005728 <print>
 8006376:	2d02      	cmp	r5, #2
 8006378:	f104 0410 	add.w	r4, r4, #16
 800637c:	f04f 0301 	mov.w	r3, #1
 8006380:	d1e2      	bne.n	8006348 <print_adc_data+0x10>
 8006382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006386:	bf00      	nop
 8006388:	20000df0 	.word	0x20000df0
 800638c:	08008138 	.word	0x08008138
 8006390:	08008695 	.word	0x08008695
 8006394:	080086a1 	.word	0x080086a1
 8006398:	080086b2 	.word	0x080086b2
 800639c:	080080f0 	.word	0x080080f0
 80063a0:	0800868e 	.word	0x0800868e

080063a4 <MX_USB_DEVICE_Init>:
 80063a4:	b508      	push	{r3, lr}
 80063a6:	2200      	movs	r2, #0
 80063a8:	490e      	ldr	r1, [pc, #56]	; (80063e4 <MX_USB_DEVICE_Init+0x40>)
 80063aa:	480f      	ldr	r0, [pc, #60]	; (80063e8 <MX_USB_DEVICE_Init+0x44>)
 80063ac:	f7fd fa2a 	bl	8003804 <USBD_Init>
 80063b0:	b108      	cbz	r0, 80063b6 <MX_USB_DEVICE_Init+0x12>
 80063b2:	f7fe fd0d 	bl	8004dd0 <Error_Handler>
 80063b6:	490d      	ldr	r1, [pc, #52]	; (80063ec <MX_USB_DEVICE_Init+0x48>)
 80063b8:	480b      	ldr	r0, [pc, #44]	; (80063e8 <MX_USB_DEVICE_Init+0x44>)
 80063ba:	f7fd fa38 	bl	800382e <USBD_RegisterClass>
 80063be:	b108      	cbz	r0, 80063c4 <MX_USB_DEVICE_Init+0x20>
 80063c0:	f7fe fd06 	bl	8004dd0 <Error_Handler>
 80063c4:	490a      	ldr	r1, [pc, #40]	; (80063f0 <MX_USB_DEVICE_Init+0x4c>)
 80063c6:	4808      	ldr	r0, [pc, #32]	; (80063e8 <MX_USB_DEVICE_Init+0x44>)
 80063c8:	f7fd f9db 	bl	8003782 <USBD_CDC_RegisterInterface>
 80063cc:	b108      	cbz	r0, 80063d2 <MX_USB_DEVICE_Init+0x2e>
 80063ce:	f7fe fcff 	bl	8004dd0 <Error_Handler>
 80063d2:	4805      	ldr	r0, [pc, #20]	; (80063e8 <MX_USB_DEVICE_Init+0x44>)
 80063d4:	f7fd fa32 	bl	800383c <USBD_Start>
 80063d8:	b118      	cbz	r0, 80063e2 <MX_USB_DEVICE_Init+0x3e>
 80063da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80063de:	f7fe bcf7 	b.w	8004dd0 <Error_Handler>
 80063e2:	bd08      	pop	{r3, pc}
 80063e4:	200001b4 	.word	0x200001b4
 80063e8:	20000e10 	.word	0x20000e10
 80063ec:	20000008 	.word	0x20000008
 80063f0:	200001a4 	.word	0x200001a4

080063f4 <CDC_DeInit_FS>:
static int8_t CDC_DeInit_FS(void)
{
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
  /* USER CODE END 4 */
}
 80063f4:	2000      	movs	r0, #0
 80063f6:	4770      	bx	lr

080063f8 <CDC_Control_FS>:
    break;
  }

  return (USBD_OK);
  /* USER CODE END 5 */
}
 80063f8:	2000      	movs	r0, #0
 80063fa:	4770      	bx	lr

080063fc <CDC_Receive_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
{
 80063fc:	b538      	push	{r3, r4, r5, lr}
 80063fe:	4605      	mov	r5, r0
  //Loopback Test
  //CDC_Transmit_FS(Buf, *Len); // ADD THIS LINE to echo back all incoming data
  //Send Data to ring buffer
  ring_buffer_put(&rx_buff, Buf, *Len);

  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 8006400:	4c07      	ldr	r4, [pc, #28]	; (8006420 <CDC_Receive_FS+0x24>)
  ring_buffer_put(&rx_buff, Buf, *Len);
 8006402:	680a      	ldr	r2, [r1, #0]
 8006404:	4601      	mov	r1, r0
 8006406:	4807      	ldr	r0, [pc, #28]	; (8006424 <CDC_Receive_FS+0x28>)
 8006408:	f7fe fe0e 	bl	8005028 <ring_buffer_put>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 800640c:	4629      	mov	r1, r5
 800640e:	4620      	mov	r0, r4
 8006410:	f7fd f9c6 	bl	80037a0 <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 8006414:	4620      	mov	r0, r4
 8006416:	f7fd f9e2 	bl	80037de <USBD_CDC_ReceivePacket>
  return (USBD_OK);
  /* USER CODE END 6 */
}
 800641a:	2000      	movs	r0, #0
 800641c:	bd38      	pop	{r3, r4, r5, pc}
 800641e:	bf00      	nop
 8006420:	20000e10 	.word	0x20000e10
 8006424:	20000b14 	.word	0x20000b14

08006428 <CDC_Init_FS>:
{
 8006428:	b510      	push	{r4, lr}
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 800642a:	4c06      	ldr	r4, [pc, #24]	; (8006444 <CDC_Init_FS+0x1c>)
 800642c:	2200      	movs	r2, #0
 800642e:	4906      	ldr	r1, [pc, #24]	; (8006448 <CDC_Init_FS+0x20>)
 8006430:	4620      	mov	r0, r4
 8006432:	f7fd f9ad 	bl	8003790 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 8006436:	4905      	ldr	r1, [pc, #20]	; (800644c <CDC_Init_FS+0x24>)
 8006438:	4620      	mov	r0, r4
 800643a:	f7fd f9b1 	bl	80037a0 <USBD_CDC_SetRxBuffer>
}
 800643e:	2000      	movs	r0, #0
 8006440:	bd10      	pop	{r4, pc}
 8006442:	bf00      	nop
 8006444:	20000e10 	.word	0x20000e10
 8006448:	200012c8 	.word	0x200012c8
 800644c:	200010d4 	.word	0x200010d4

08006450 <CDC_Transmit_FS>:
  * @param  Buf: Buffer of data to be sent
  * @param  Len: Number of data to be sent (in bytes)
  * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
  */
uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
{
 8006450:	b510      	push	{r4, lr}
  uint8_t result = USBD_OK;
  /* USER CODE BEGIN 7 */
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 8006452:	4c09      	ldr	r4, [pc, #36]	; (8006478 <CDC_Transmit_FS+0x28>)
{
 8006454:	460a      	mov	r2, r1
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 8006456:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
  if (hcdc->TxState != 0){
 800645a:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800645e:	b943      	cbnz	r3, 8006472 <CDC_Transmit_FS+0x22>
    return USBD_BUSY;
  }
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 8006460:	4601      	mov	r1, r0
 8006462:	4620      	mov	r0, r4
 8006464:	f7fd f994 	bl	8003790 <USBD_CDC_SetTxBuffer>
  result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 8006468:	4620      	mov	r0, r4
  /* USER CODE END 7 */
  return result;
}
 800646a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 800646e:	f7fd b99d 	b.w	80037ac <USBD_CDC_TransmitPacket>
}
 8006472:	2001      	movs	r0, #1
 8006474:	bd10      	pop	{r4, pc}
 8006476:	bf00      	nop
 8006478:	20000e10 	.word	0x20000e10

0800647c <HAL_PCD_MspInit>:
 800647c:	b507      	push	{r0, r1, r2, lr}
 800647e:	4b0e      	ldr	r3, [pc, #56]	; (80064b8 <HAL_PCD_MspInit+0x3c>)
 8006480:	6802      	ldr	r2, [r0, #0]
 8006482:	429a      	cmp	r2, r3
 8006484:	d115      	bne.n	80064b2 <HAL_PCD_MspInit+0x36>
 8006486:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 800648a:	69da      	ldr	r2, [r3, #28]
 800648c:	2014      	movs	r0, #20
 800648e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006492:	61da      	str	r2, [r3, #28]
 8006494:	2200      	movs	r2, #0
 8006496:	69db      	ldr	r3, [r3, #28]
 8006498:	4611      	mov	r1, r2
 800649a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800649e:	9301      	str	r3, [sp, #4]
 80064a0:	9b01      	ldr	r3, [sp, #4]
 80064a2:	f7fa fb73 	bl	8000b8c <HAL_NVIC_SetPriority>
 80064a6:	2014      	movs	r0, #20
 80064a8:	b003      	add	sp, #12
 80064aa:	f85d eb04 	ldr.w	lr, [sp], #4
 80064ae:	f7fa bba1 	b.w	8000bf4 <HAL_NVIC_EnableIRQ>
 80064b2:	b003      	add	sp, #12
 80064b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80064b8:	40005c00 	.word	0x40005c00

080064bc <HAL_PCD_SetupStageCallback>:
 80064bc:	f500 710c 	add.w	r1, r0, #560	; 0x230
 80064c0:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 80064c4:	f7fd b9d1 	b.w	800386a <USBD_LL_SetupStage>

080064c8 <HAL_PCD_DataOutStageCallback>:
 80064c8:	eb00 1341 	add.w	r3, r0, r1, lsl #5
 80064cc:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 80064d0:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 80064d4:	f7fd b9f6 	b.w	80038c4 <USBD_LL_DataOutStage>

080064d8 <HAL_PCD_DataInStageCallback>:
 80064d8:	eb00 1341 	add.w	r3, r0, r1, lsl #5
 80064dc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80064de:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 80064e2:	f7fd ba29 	b.w	8003938 <USBD_LL_DataInStage>

080064e6 <HAL_PCD_SOFCallback>:
 80064e6:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 80064ea:	f7fd babd 	b.w	8003a68 <USBD_LL_SOF>

080064ee <HAL_PCD_ResetCallback>:
 80064ee:	6883      	ldr	r3, [r0, #8]
 80064f0:	b510      	push	{r4, lr}
 80064f2:	2b02      	cmp	r3, #2
 80064f4:	4604      	mov	r4, r0
 80064f6:	d001      	beq.n	80064fc <HAL_PCD_ResetCallback+0xe>
 80064f8:	f7fe fc6a 	bl	8004dd0 <Error_Handler>
 80064fc:	f8d4 0268 	ldr.w	r0, [r4, #616]	; 0x268
 8006500:	2101      	movs	r1, #1
 8006502:	f7fd fa9b 	bl	8003a3c <USBD_LL_SetSpeed>
 8006506:	f8d4 0268 	ldr.w	r0, [r4, #616]	; 0x268
 800650a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800650e:	f7fd ba6e 	b.w	80039ee <USBD_LL_Reset>
	...

08006514 <HAL_PCD_SuspendCallback>:
 8006514:	b510      	push	{r4, lr}
 8006516:	4604      	mov	r4, r0
 8006518:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 800651c:	f7fd fa91 	bl	8003a42 <USBD_LL_Suspend>
 8006520:	69a3      	ldr	r3, [r4, #24]
 8006522:	b123      	cbz	r3, 800652e <HAL_PCD_SuspendCallback+0x1a>
 8006524:	4a02      	ldr	r2, [pc, #8]	; (8006530 <HAL_PCD_SuspendCallback+0x1c>)
 8006526:	6913      	ldr	r3, [r2, #16]
 8006528:	f043 0306 	orr.w	r3, r3, #6
 800652c:	6113      	str	r3, [r2, #16]
 800652e:	bd10      	pop	{r4, pc}
 8006530:	e000ed00 	.word	0xe000ed00

08006534 <HAL_PCD_ResumeCallback>:
 8006534:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 8006538:	f7fd ba8c 	b.w	8003a54 <USBD_LL_Resume>

0800653c <USBD_LL_Init>:
 800653c:	2308      	movs	r3, #8
 800653e:	b510      	push	{r4, lr}
 8006540:	4a1d      	ldr	r2, [pc, #116]	; (80065b8 <USBD_LL_Init+0x7c>)
 8006542:	4604      	mov	r4, r0
 8006544:	481d      	ldr	r0, [pc, #116]	; (80065bc <USBD_LL_Init+0x80>)
 8006546:	e9c0 2300 	strd	r2, r3, [r0]
 800654a:	2302      	movs	r3, #2
 800654c:	6083      	str	r3, [r0, #8]
 800654e:	2300      	movs	r3, #0
 8006550:	f8c4 02c0 	str.w	r0, [r4, #704]	; 0x2c0
 8006554:	f8c0 4268 	str.w	r4, [r0, #616]	; 0x268
 8006558:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800655c:	6203      	str	r3, [r0, #32]
 800655e:	f7fa fed0 	bl	8001302 <HAL_PCD_Init>
 8006562:	b108      	cbz	r0, 8006568 <USBD_LL_Init+0x2c>
 8006564:	f7fe fc34 	bl	8004dd0 <Error_Handler>
 8006568:	2200      	movs	r2, #0
 800656a:	2318      	movs	r3, #24
 800656c:	4611      	mov	r1, r2
 800656e:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 8006572:	f7fb fa74 	bl	8001a5e <HAL_PCDEx_PMAConfig>
 8006576:	2358      	movs	r3, #88	; 0x58
 8006578:	2200      	movs	r2, #0
 800657a:	2180      	movs	r1, #128	; 0x80
 800657c:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 8006580:	f7fb fa6d 	bl	8001a5e <HAL_PCDEx_PMAConfig>
 8006584:	23c0      	movs	r3, #192	; 0xc0
 8006586:	2200      	movs	r2, #0
 8006588:	2181      	movs	r1, #129	; 0x81
 800658a:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800658e:	f7fb fa66 	bl	8001a5e <HAL_PCDEx_PMAConfig>
 8006592:	f44f 7388 	mov.w	r3, #272	; 0x110
 8006596:	2200      	movs	r2, #0
 8006598:	2101      	movs	r1, #1
 800659a:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800659e:	f7fb fa5e 	bl	8001a5e <HAL_PCDEx_PMAConfig>
 80065a2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80065a6:	2200      	movs	r2, #0
 80065a8:	2182      	movs	r1, #130	; 0x82
 80065aa:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 80065ae:	f7fb fa56 	bl	8001a5e <HAL_PCDEx_PMAConfig>
 80065b2:	2000      	movs	r0, #0
 80065b4:	bd10      	pop	{r4, pc}
 80065b6:	bf00      	nop
 80065b8:	40005c00 	.word	0x40005c00
 80065bc:	200014bc 	.word	0x200014bc

080065c0 <USBD_LL_Start>:
 80065c0:	b508      	push	{r3, lr}
 80065c2:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 80065c6:	f7fa ff11 	bl	80013ec <HAL_PCD_Start>
 80065ca:	2803      	cmp	r0, #3
 80065cc:	bf96      	itet	ls
 80065ce:	4b02      	ldrls	r3, [pc, #8]	; (80065d8 <USBD_LL_Start+0x18>)
 80065d0:	2002      	movhi	r0, #2
 80065d2:	5c18      	ldrbls	r0, [r3, r0]
 80065d4:	bd08      	pop	{r3, pc}
 80065d6:	bf00      	nop
 80065d8:	080086c1 	.word	0x080086c1

080065dc <USBD_LL_OpenEP>:
 80065dc:	b510      	push	{r4, lr}
 80065de:	461c      	mov	r4, r3
 80065e0:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 80065e4:	4613      	mov	r3, r2
 80065e6:	4622      	mov	r2, r4
 80065e8:	f7fa ff2b 	bl	8001442 <HAL_PCD_EP_Open>
 80065ec:	2803      	cmp	r0, #3
 80065ee:	bf96      	itet	ls
 80065f0:	4b01      	ldrls	r3, [pc, #4]	; (80065f8 <USBD_LL_OpenEP+0x1c>)
 80065f2:	2002      	movhi	r0, #2
 80065f4:	5c18      	ldrbls	r0, [r3, r0]
 80065f6:	bd10      	pop	{r4, pc}
 80065f8:	080086c1 	.word	0x080086c1

080065fc <USBD_LL_CloseEP>:
 80065fc:	b508      	push	{r3, lr}
 80065fe:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 8006602:	f7fa ff51 	bl	80014a8 <HAL_PCD_EP_Close>
 8006606:	2803      	cmp	r0, #3
 8006608:	bf96      	itet	ls
 800660a:	4b02      	ldrls	r3, [pc, #8]	; (8006614 <USBD_LL_CloseEP+0x18>)
 800660c:	2002      	movhi	r0, #2
 800660e:	5c18      	ldrbls	r0, [r3, r0]
 8006610:	bd08      	pop	{r3, pc}
 8006612:	bf00      	nop
 8006614:	080086c1 	.word	0x080086c1

08006618 <USBD_LL_StallEP>:
 8006618:	b508      	push	{r3, lr}
 800661a:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800661e:	f7fb f9b7 	bl	8001990 <HAL_PCD_EP_SetStall>
 8006622:	2803      	cmp	r0, #3
 8006624:	bf96      	itet	ls
 8006626:	4b02      	ldrls	r3, [pc, #8]	; (8006630 <USBD_LL_StallEP+0x18>)
 8006628:	2002      	movhi	r0, #2
 800662a:	5c18      	ldrbls	r0, [r3, r0]
 800662c:	bd08      	pop	{r3, pc}
 800662e:	bf00      	nop
 8006630:	080086c1 	.word	0x080086c1

08006634 <USBD_LL_ClearStallEP>:
 8006634:	b508      	push	{r3, lr}
 8006636:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800663a:	f7fb f9dd 	bl	80019f8 <HAL_PCD_EP_ClrStall>
 800663e:	2803      	cmp	r0, #3
 8006640:	bf96      	itet	ls
 8006642:	4b02      	ldrls	r3, [pc, #8]	; (800664c <USBD_LL_ClearStallEP+0x18>)
 8006644:	2002      	movhi	r0, #2
 8006646:	5c18      	ldrbls	r0, [r3, r0]
 8006648:	bd08      	pop	{r3, pc}
 800664a:	bf00      	nop
 800664c:	080086c1 	.word	0x080086c1

08006650 <USBD_LL_IsStallEP>:
 8006650:	060a      	lsls	r2, r1, #24
 8006652:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8006656:	bf45      	ittet	mi
 8006658:	f001 017f 	andmi.w	r1, r1, #127	; 0x7f
 800665c:	eb03 1341 	addmi.w	r3, r3, r1, lsl #5
 8006660:	eb03 1341 	addpl.w	r3, r3, r1, lsl #5
 8006664:	f893 002a 	ldrbmi.w	r0, [r3, #42]	; 0x2a
 8006668:	bf58      	it	pl
 800666a:	f893 012a 	ldrbpl.w	r0, [r3, #298]	; 0x12a
 800666e:	4770      	bx	lr

08006670 <USBD_LL_SetUSBAddress>:
 8006670:	b508      	push	{r3, lr}
 8006672:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 8006676:	f7fa fed0 	bl	800141a <HAL_PCD_SetAddress>
 800667a:	2803      	cmp	r0, #3
 800667c:	bf96      	itet	ls
 800667e:	4b02      	ldrls	r3, [pc, #8]	; (8006688 <USBD_LL_SetUSBAddress+0x18>)
 8006680:	2002      	movhi	r0, #2
 8006682:	5c18      	ldrbls	r0, [r3, r0]
 8006684:	bd08      	pop	{r3, pc}
 8006686:	bf00      	nop
 8006688:	080086c1 	.word	0x080086c1

0800668c <USBD_LL_Transmit>:
 800668c:	b508      	push	{r3, lr}
 800668e:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 8006692:	f7fa ff51 	bl	8001538 <HAL_PCD_EP_Transmit>
 8006696:	2803      	cmp	r0, #3
 8006698:	bf96      	itet	ls
 800669a:	4b02      	ldrls	r3, [pc, #8]	; (80066a4 <USBD_LL_Transmit+0x18>)
 800669c:	2002      	movhi	r0, #2
 800669e:	5c18      	ldrbls	r0, [r3, r0]
 80066a0:	bd08      	pop	{r3, pc}
 80066a2:	bf00      	nop
 80066a4:	080086c1 	.word	0x080086c1

080066a8 <USBD_LL_PrepareReceive>:
 80066a8:	b508      	push	{r3, lr}
 80066aa:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 80066ae:	f7fa ff24 	bl	80014fa <HAL_PCD_EP_Receive>
 80066b2:	2803      	cmp	r0, #3
 80066b4:	bf96      	itet	ls
 80066b6:	4b02      	ldrls	r3, [pc, #8]	; (80066c0 <USBD_LL_PrepareReceive+0x18>)
 80066b8:	2002      	movhi	r0, #2
 80066ba:	5c18      	ldrbls	r0, [r3, r0]
 80066bc:	bd08      	pop	{r3, pc}
 80066be:	bf00      	nop
 80066c0:	080086c1 	.word	0x080086c1

080066c4 <USBD_LL_GetRxDataSize>:
 80066c4:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 80066c8:	f7fa bf2f 	b.w	800152a <HAL_PCD_EP_GetRxCount>

080066cc <USBD_static_malloc>:
 80066cc:	4800      	ldr	r0, [pc, #0]	; (80066d0 <USBD_static_malloc+0x4>)
 80066ce:	4770      	bx	lr
 80066d0:	20000700 	.word	0x20000700

080066d4 <USBD_static_free>:
 80066d4:	4770      	bx	lr

080066d6 <HAL_PCDEx_SetConnectionState>:
 80066d6:	4770      	bx	lr

080066d8 <USBD_FS_DeviceDescriptor>:
 80066d8:	2312      	movs	r3, #18
 80066da:	4801      	ldr	r0, [pc, #4]	; (80066e0 <USBD_FS_DeviceDescriptor+0x8>)
 80066dc:	800b      	strh	r3, [r1, #0]
 80066de:	4770      	bx	lr
 80066e0:	200001d0 	.word	0x200001d0

080066e4 <USBD_FS_LangIDStrDescriptor>:
 80066e4:	2304      	movs	r3, #4
 80066e6:	4801      	ldr	r0, [pc, #4]	; (80066ec <USBD_FS_LangIDStrDescriptor+0x8>)
 80066e8:	800b      	strh	r3, [r1, #0]
 80066ea:	4770      	bx	lr
 80066ec:	200001e4 	.word	0x200001e4

080066f0 <IntToUnicode>:
 80066f0:	2300      	movs	r3, #0
 80066f2:	b570      	push	{r4, r5, r6, lr}
 80066f4:	461e      	mov	r6, r3
 80066f6:	0f05      	lsrs	r5, r0, #28
 80066f8:	b2ec      	uxtb	r4, r5
 80066fa:	2d09      	cmp	r5, #9
 80066fc:	bf94      	ite	ls
 80066fe:	3430      	addls	r4, #48	; 0x30
 8006700:	3437      	addhi	r4, #55	; 0x37
 8006702:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
 8006706:	eb01 0443 	add.w	r4, r1, r3, lsl #1
 800670a:	3301      	adds	r3, #1
 800670c:	7066      	strb	r6, [r4, #1]
 800670e:	b2dc      	uxtb	r4, r3
 8006710:	42a2      	cmp	r2, r4
 8006712:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8006716:	d8ee      	bhi.n	80066f6 <IntToUnicode+0x6>
 8006718:	bd70      	pop	{r4, r5, r6, pc}
	...

0800671c <USBD_FS_SerialStrDescriptor>:
 800671c:	231a      	movs	r3, #26
 800671e:	b510      	push	{r4, lr}
 8006720:	800b      	strh	r3, [r1, #0]
 8006722:	4b09      	ldr	r3, [pc, #36]	; (8006748 <USBD_FS_SerialStrDescriptor+0x2c>)
 8006724:	6818      	ldr	r0, [r3, #0]
 8006726:	3308      	adds	r3, #8
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	18c0      	adds	r0, r0, r3
 800672c:	d00a      	beq.n	8006744 <USBD_FS_SerialStrDescriptor+0x28>
 800672e:	4b07      	ldr	r3, [pc, #28]	; (800674c <USBD_FS_SerialStrDescriptor+0x30>)
 8006730:	2208      	movs	r2, #8
 8006732:	681c      	ldr	r4, [r3, #0]
 8006734:	4906      	ldr	r1, [pc, #24]	; (8006750 <USBD_FS_SerialStrDescriptor+0x34>)
 8006736:	f7ff ffdb 	bl	80066f0 <IntToUnicode>
 800673a:	2204      	movs	r2, #4
 800673c:	4905      	ldr	r1, [pc, #20]	; (8006754 <USBD_FS_SerialStrDescriptor+0x38>)
 800673e:	4620      	mov	r0, r4
 8006740:	f7ff ffd6 	bl	80066f0 <IntToUnicode>
 8006744:	4804      	ldr	r0, [pc, #16]	; (8006758 <USBD_FS_SerialStrDescriptor+0x3c>)
 8006746:	bd10      	pop	{r4, pc}
 8006748:	1ffff7e8 	.word	0x1ffff7e8
 800674c:	1ffff7ec 	.word	0x1ffff7ec
 8006750:	200001ea 	.word	0x200001ea
 8006754:	200001fa 	.word	0x200001fa
 8006758:	200001e8 	.word	0x200001e8

0800675c <USBD_FS_ManufacturerStrDescriptor>:
 800675c:	b510      	push	{r4, lr}
 800675e:	4c04      	ldr	r4, [pc, #16]	; (8006770 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 8006760:	460a      	mov	r2, r1
 8006762:	4804      	ldr	r0, [pc, #16]	; (8006774 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 8006764:	4621      	mov	r1, r4
 8006766:	f7fd fb88 	bl	8003e7a <USBD_GetString>
 800676a:	4620      	mov	r0, r4
 800676c:	bd10      	pop	{r4, pc}
 800676e:	bf00      	nop
 8006770:	20001728 	.word	0x20001728
 8006774:	080086de 	.word	0x080086de

08006778 <USBD_FS_ProductStrDescriptor>:
 8006778:	b510      	push	{r4, lr}
 800677a:	4c04      	ldr	r4, [pc, #16]	; (800678c <USBD_FS_ProductStrDescriptor+0x14>)
 800677c:	460a      	mov	r2, r1
 800677e:	4804      	ldr	r0, [pc, #16]	; (8006790 <USBD_FS_ProductStrDescriptor+0x18>)
 8006780:	4621      	mov	r1, r4
 8006782:	f7fd fb7a 	bl	8003e7a <USBD_GetString>
 8006786:	4620      	mov	r0, r4
 8006788:	bd10      	pop	{r4, pc}
 800678a:	bf00      	nop
 800678c:	20001728 	.word	0x20001728
 8006790:	080086f1 	.word	0x080086f1

08006794 <USBD_FS_ConfigStrDescriptor>:
 8006794:	b510      	push	{r4, lr}
 8006796:	4c04      	ldr	r4, [pc, #16]	; (80067a8 <USBD_FS_ConfigStrDescriptor+0x14>)
 8006798:	460a      	mov	r2, r1
 800679a:	4804      	ldr	r0, [pc, #16]	; (80067ac <USBD_FS_ConfigStrDescriptor+0x18>)
 800679c:	4621      	mov	r1, r4
 800679e:	f7fd fb6c 	bl	8003e7a <USBD_GetString>
 80067a2:	4620      	mov	r0, r4
 80067a4:	bd10      	pop	{r4, pc}
 80067a6:	bf00      	nop
 80067a8:	20001728 	.word	0x20001728
 80067ac:	080086c5 	.word	0x080086c5

080067b0 <USBD_FS_InterfaceStrDescriptor>:
 80067b0:	b510      	push	{r4, lr}
 80067b2:	4c04      	ldr	r4, [pc, #16]	; (80067c4 <USBD_FS_InterfaceStrDescriptor+0x14>)
 80067b4:	460a      	mov	r2, r1
 80067b6:	4804      	ldr	r0, [pc, #16]	; (80067c8 <USBD_FS_InterfaceStrDescriptor+0x18>)
 80067b8:	4621      	mov	r1, r4
 80067ba:	f7fd fb5e 	bl	8003e7a <USBD_GetString>
 80067be:	4620      	mov	r0, r4
 80067c0:	bd10      	pop	{r4, pc}
 80067c2:	bf00      	nop
 80067c4:	20001728 	.word	0x20001728
 80067c8:	080086d0 	.word	0x080086d0

080067cc <vt100_process_byte>:
 80067cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067d0:	4d1c      	ldr	r5, [pc, #112]	; (8006844 <vt100_process_byte+0x78>)
 80067d2:	782b      	ldrb	r3, [r5, #0]
 80067d4:	b91b      	cbnz	r3, 80067de <vt100_process_byte+0x12>
 80067d6:	f1a0 0220 	sub.w	r2, r0, #32
 80067da:	2a5e      	cmp	r2, #94	; 0x5e
 80067dc:	d92e      	bls.n	800683c <vt100_process_byte+0x70>
 80067de:	280d      	cmp	r0, #13
 80067e0:	d02e      	beq.n	8006840 <vt100_process_byte+0x74>
 80067e2:	4c19      	ldr	r4, [pc, #100]	; (8006848 <vt100_process_byte+0x7c>)
 80067e4:	2700      	movs	r7, #0
 80067e6:	f04f 0a0c 	mov.w	sl, #12
 80067ea:	46a3      	mov	fp, r4
 80067ec:	1c5e      	adds	r6, r3, #1
 80067ee:	b2f6      	uxtb	r6, r6
 80067f0:	f8df 9058 	ldr.w	r9, [pc, #88]	; 800684c <vt100_process_byte+0x80>
 80067f4:	702e      	strb	r6, [r5, #0]
 80067f6:	54e0      	strb	r0, [r4, r3]
 80067f8:	fb0a 9807 	mla	r8, sl, r7, r9
 80067fc:	f898 3008 	ldrb.w	r3, [r8, #8]
 8006800:	42b3      	cmp	r3, r6
 8006802:	d112      	bne.n	800682a <vt100_process_byte+0x5e>
 8006804:	4632      	mov	r2, r6
 8006806:	4659      	mov	r1, fp
 8006808:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800680c:	f000 fbf1 	bl	8006ff2 <strncmp>
 8006810:	4603      	mov	r3, r0
 8006812:	b950      	cbnz	r0, 800682a <vt100_process_byte+0x5e>
 8006814:	f898 0000 	ldrb.w	r0, [r8]
 8006818:	b958      	cbnz	r0, 8006832 <vt100_process_byte+0x66>
 800681a:	2e07      	cmp	r6, #7
 800681c:	f04f 0000 	mov.w	r0, #0
 8006820:	d90a      	bls.n	8006838 <vt100_process_byte+0x6c>
 8006822:	7028      	strb	r0, [r5, #0]
 8006824:	6020      	str	r0, [r4, #0]
 8006826:	6060      	str	r0, [r4, #4]
 8006828:	e006      	b.n	8006838 <vt100_process_byte+0x6c>
 800682a:	3701      	adds	r7, #1
 800682c:	2f0f      	cmp	r7, #15
 800682e:	d1e3      	bne.n	80067f8 <vt100_process_byte+0x2c>
 8006830:	e7f3      	b.n	800681a <vt100_process_byte+0x4e>
 8006832:	702b      	strb	r3, [r5, #0]
 8006834:	6023      	str	r3, [r4, #0]
 8006836:	6063      	str	r3, [r4, #4]
 8006838:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800683c:	2001      	movs	r0, #1
 800683e:	e7fb      	b.n	8006838 <vt100_process_byte+0x6c>
 8006840:	2008      	movs	r0, #8
 8006842:	e7f9      	b.n	8006838 <vt100_process_byte+0x6c>
 8006844:	20000928 	.word	0x20000928
 8006848:	20000920 	.word	0x20000920
 800684c:	08008720 	.word	0x08008720

08006850 <vt100_get_keycode>:
 8006850:	280e      	cmp	r0, #14
 8006852:	b530      	push	{r4, r5, lr}
 8006854:	d80c      	bhi.n	8006870 <vt100_get_keycode+0x20>
 8006856:	2200      	movs	r2, #0
 8006858:	240c      	movs	r4, #12
 800685a:	4b06      	ldr	r3, [pc, #24]	; (8006874 <vt100_get_keycode+0x24>)
 800685c:	fb04 f102 	mul.w	r1, r4, r2
 8006860:	5ccd      	ldrb	r5, [r1, r3]
 8006862:	4285      	cmp	r5, r0
 8006864:	d101      	bne.n	800686a <vt100_get_keycode+0x1a>
 8006866:	1858      	adds	r0, r3, r1
 8006868:	bd30      	pop	{r4, r5, pc}
 800686a:	3201      	adds	r2, #1
 800686c:	2a0f      	cmp	r2, #15
 800686e:	d1f5      	bne.n	800685c <vt100_get_keycode+0xc>
 8006870:	2000      	movs	r0, #0
 8006872:	e7f9      	b.n	8006868 <vt100_get_keycode+0x18>
 8006874:	08008720 	.word	0x08008720

08006878 <fx_pwm_pulsing_light_run>:
t_fx_result fx_pwm_pulsing_light_run(t_fx_state state,uint32_t framecount,const uint32_t duration)
{
	uint8_t ii = 0;
	int16_t val;

	switch(state)
 8006878:	2801      	cmp	r0, #1
{
 800687a:	b570      	push	{r4, r5, r6, lr}
	switch(state)
 800687c:	d00b      	beq.n	8006896 <fx_pwm_pulsing_light_run+0x1e>
 800687e:	d303      	bcc.n	8006888 <fx_pwm_pulsing_light_run+0x10>
 8006880:	2802      	cmp	r0, #2
 8006882:	d029      	beq.n	80068d8 <fx_pwm_pulsing_light_run+0x60>
				set_pwm_light(ii, 0);
			return FX_COMPLETED;
		case FX_DONE:
			break;
	}
	return FX_ERROR;
 8006884:	2003      	movs	r0, #3
 8006886:	e005      	b.n	8006894 <fx_pwm_pulsing_light_run+0x1c>
			data = 0;
 8006888:	2400      	movs	r4, #0
 800688a:	4b18      	ldr	r3, [pc, #96]	; (80068ec <fx_pwm_pulsing_light_run+0x74>)
 800688c:	701c      	strb	r4, [r3, #0]
			reset_frame_delay();
 800688e:	f000 f941 	bl	8006b14 <reset_frame_delay>
			return FX_OK;
 8006892:	4620      	mov	r0, r4
}
 8006894:	bd70      	pop	{r4, r5, r6, pc}
				val = data + get_DMX_variable(DMX_STRIP1_COMPLEXITY);
 8006896:	4c15      	ldr	r4, [pc, #84]	; (80068ec <fx_pwm_pulsing_light_run+0x74>)
 8006898:	200f      	movs	r0, #15
 800689a:	7825      	ldrb	r5, [r4, #0]
 800689c:	f000 f95c 	bl	8006b58 <get_DMX_variable>
 80068a0:	4428      	add	r0, r5
				if (val>255)
 80068a2:	b283      	uxth	r3, r0
 80068a4:	2bff      	cmp	r3, #255	; 0xff
					data = 255;
 80068a6:	bf8c      	ite	hi
 80068a8:	23ff      	movhi	r3, #255	; 0xff
					data = val;
 80068aa:	7020      	strbls	r0, [r4, #0]
			val = get_DMX_variable(DMX_STRIP1_SIZE);
 80068ac:	f04f 000e 	mov.w	r0, #14
					data = 255;
 80068b0:	bf88      	it	hi
 80068b2:	7023      	strbhi	r3, [r4, #0]
			val = get_DMX_variable(DMX_STRIP1_SIZE);
 80068b4:	f000 f950 	bl	8006b58 <get_DMX_variable>
 80068b8:	b205      	sxth	r5, r0
 80068ba:	2d09      	cmp	r5, #9
 80068bc:	bfa8      	it	ge
 80068be:	2509      	movge	r5, #9
 80068c0:	2600      	movs	r6, #0
 80068c2:	b2f0      	uxtb	r0, r6
			for (ii=0;ii<val+1;ii++)
 80068c4:	4285      	cmp	r5, r0
 80068c6:	f106 0601 	add.w	r6, r6, #1
 80068ca:	da01      	bge.n	80068d0 <fx_pwm_pulsing_light_run+0x58>
 80068cc:	2002      	movs	r0, #2
 80068ce:	e7e1      	b.n	8006894 <fx_pwm_pulsing_light_run+0x1c>
				set_pwm_light(ii, data);
 80068d0:	7821      	ldrb	r1, [r4, #0]
 80068d2:	f000 f93e 	bl	8006b52 <set_pwm_light>
 80068d6:	e7f4      	b.n	80068c2 <fx_pwm_pulsing_light_run+0x4a>
	switch(state)
 80068d8:	2400      	movs	r4, #0
				set_pwm_light(ii, 0);
 80068da:	b2e0      	uxtb	r0, r4
 80068dc:	2100      	movs	r1, #0
 80068de:	3401      	adds	r4, #1
 80068e0:	f000 f937 	bl	8006b52 <set_pwm_light>
			for (ii=0;ii<10;ii++)
 80068e4:	2c0a      	cmp	r4, #10
 80068e6:	d1f8      	bne.n	80068da <fx_pwm_pulsing_light_run+0x62>
			return FX_COMPLETED;
 80068e8:	2001      	movs	r0, #1
 80068ea:	e7d3      	b.n	8006894 <fx_pwm_pulsing_light_run+0x1c>
 80068ec:	20001928 	.word	0x20001928

080068f0 <fx_pwm_pulsing_light>:
	register_fx(&param1,fx_num);
 80068f0:	4601      	mov	r1, r0
 80068f2:	4801      	ldr	r0, [pc, #4]	; (80068f8 <fx_pwm_pulsing_light+0x8>)
 80068f4:	f7fd bcce 	b.w	8004294 <register_fx>
 80068f8:	080087d4 	.word	0x080087d4

080068fc <fx_pwm_pulsing_pulse_light>:
	register_fx(&param2,fx_num);
 80068fc:	4601      	mov	r1, r0
 80068fe:	4801      	ldr	r0, [pc, #4]	; (8006904 <fx_pwm_pulsing_pulse_light+0x8>)
 8006900:	f7fd bcc8 	b.w	8004294 <register_fx>
 8006904:	080087e8 	.word	0x080087e8

08006908 <fx_pwm_running_light_run>:
t_fx_result fx_pwm_running_light_run(t_fx_state state,uint32_t framecount,const uint32_t duration)
{
	uint8_t ii = 0;
	int16_t val;

	switch(state)
 8006908:	2801      	cmp	r0, #1
{
 800690a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	switch(state)
 800690c:	d012      	beq.n	8006934 <fx_pwm_running_light_run+0x2c>
 800690e:	d303      	bcc.n	8006918 <fx_pwm_running_light_run+0x10>
 8006910:	2802      	cmp	r0, #2
 8006912:	d051      	beq.n	80069b8 <fx_pwm_running_light_run+0xb0>
			free(data);
			return FX_COMPLETED;
		case FX_DONE:
			break;
	}
	return FX_ERROR;
 8006914:	2003      	movs	r0, #3
 8006916:	e00c      	b.n	8006932 <fx_pwm_running_light_run+0x2a>
			data = malloc(11);
 8006918:	200b      	movs	r0, #11
 800691a:	f000 fa73 	bl	8006e04 <malloc>
			memset(data, 0, 11);
 800691e:	2400      	movs	r4, #0
			data = malloc(11);
 8006920:	4b28      	ldr	r3, [pc, #160]	; (80069c4 <fx_pwm_running_light_run+0xbc>)
			memset(data, 0, 11);
 8006922:	e9c0 4400 	strd	r4, r4, [r0]
 8006926:	f8c0 4007 	str.w	r4, [r0, #7]
			data = malloc(11);
 800692a:	6018      	str	r0, [r3, #0]
			reset_frame_delay();
 800692c:	f000 f8f2 	bl	8006b14 <reset_frame_delay>
			return FX_OK;
 8006930:	4620      	mov	r0, r4
}
 8006932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			if (!check_frame_delay(get_DMX_variable(DMX_STRIP1_SPEED))) //Hmmm.... Speed determines the length of the effect but that's fixed for Single Shot... Problem....
 8006934:	200d      	movs	r0, #13
 8006936:	f000 f90f 	bl	8006b58 <get_DMX_variable>
 800693a:	f000 f8f1 	bl	8006b20 <check_frame_delay>
 800693e:	b908      	cbnz	r0, 8006944 <fx_pwm_running_light_run+0x3c>
				return FX_RUNNING;
 8006940:	2002      	movs	r0, #2
 8006942:	e7f6      	b.n	8006932 <fx_pwm_running_light_run+0x2a>
				val = data[ii] - (255 - get_DMX_variable(DMX_STRIP1_COMPLEXITY));
 8006944:	4e1f      	ldr	r6, [pc, #124]	; (80069c4 <fx_pwm_running_light_run+0xbc>)
 8006946:	2700      	movs	r7, #0
 8006948:	4635      	mov	r5, r6
 800694a:	6833      	ldr	r3, [r6, #0]
 800694c:	200f      	movs	r0, #15
 800694e:	5ddc      	ldrb	r4, [r3, r7]
 8006950:	f000 f902 	bl	8006b58 <get_DMX_variable>
 8006954:	38ff      	subs	r0, #255	; 0xff
 8006956:	4404      	add	r4, r0
 8006958:	b224      	sxth	r4, r4
				data[ii] = (uint8_t)val;
 800695a:	6833      	ldr	r3, [r6, #0]
 800695c:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8006960:	55dc      	strb	r4, [r3, r7]
 8006962:	3701      	adds	r7, #1
			for (ii=0;ii<10;ii++)
 8006964:	2f0a      	cmp	r7, #10
 8006966:	d1f0      	bne.n	800694a <fx_pwm_running_light_run+0x42>
			ii = get_DMX_variable(DMX_STRIP1_SIZE);
 8006968:	200e      	movs	r0, #14
 800696a:	f000 f8f5 	bl	8006b58 <get_DMX_variable>
 800696e:	2809      	cmp	r0, #9
 8006970:	bf28      	it	cs
 8006972:	2009      	movcs	r0, #9
 8006974:	b2c4      	uxtb	r4, r0
			if (get_DMX_variable(DMX_STRIP1_PATTERN))	//Reverse
 8006976:	200c      	movs	r0, #12
 8006978:	f000 f8ee 	bl	8006b58 <get_DMX_variable>
				if (data[10] == 0)
 800697c:	6833      	ldr	r3, [r6, #0]
 800697e:	7a9a      	ldrb	r2, [r3, #10]
			if (get_DMX_variable(DMX_STRIP1_PATTERN))	//Reverse
 8006980:	b198      	cbz	r0, 80069aa <fx_pwm_running_light_run+0xa2>
				if (data[10] == 0)
 8006982:	b90a      	cbnz	r2, 8006988 <fx_pwm_running_light_run+0x80>
					data[10] = ii + 1;
 8006984:	3401      	adds	r4, #1
 8006986:	729c      	strb	r4, [r3, #10]
				data[10]--;
 8006988:	7a9a      	ldrb	r2, [r3, #10]
 800698a:	3a01      	subs	r2, #1
			data[data[10]] = 255;
 800698c:	21ff      	movs	r1, #255	; 0xff
 800698e:	2400      	movs	r4, #0
				data[10]++;
 8006990:	729a      	strb	r2, [r3, #10]
			data[data[10]] = 255;
 8006992:	682b      	ldr	r3, [r5, #0]
 8006994:	7a9a      	ldrb	r2, [r3, #10]
 8006996:	5499      	strb	r1, [r3, r2]
				set_pwm_light(ii, data[ii]);
 8006998:	682b      	ldr	r3, [r5, #0]
 800699a:	b2e0      	uxtb	r0, r4
 800699c:	5d19      	ldrb	r1, [r3, r4]
 800699e:	3401      	adds	r4, #1
 80069a0:	f000 f8d7 	bl	8006b52 <set_pwm_light>
			for (ii=0;ii<10;ii++)
 80069a4:	2c0a      	cmp	r4, #10
 80069a6:	d1f7      	bne.n	8006998 <fx_pwm_running_light_run+0x90>
 80069a8:	e7ca      	b.n	8006940 <fx_pwm_running_light_run+0x38>
				if (data[10] == ii)
 80069aa:	42a2      	cmp	r2, r4
					data[10] = 255;
 80069ac:	bf04      	itt	eq
 80069ae:	22ff      	moveq	r2, #255	; 0xff
 80069b0:	729a      	strbeq	r2, [r3, #10]
				data[10]++;
 80069b2:	7a9a      	ldrb	r2, [r3, #10]
 80069b4:	3201      	adds	r2, #1
 80069b6:	e7e9      	b.n	800698c <fx_pwm_running_light_run+0x84>
			free(data);
 80069b8:	4b02      	ldr	r3, [pc, #8]	; (80069c4 <fx_pwm_running_light_run+0xbc>)
 80069ba:	6818      	ldr	r0, [r3, #0]
 80069bc:	f000 fa2a 	bl	8006e14 <free>
			return FX_COMPLETED;
 80069c0:	2001      	movs	r0, #1
 80069c2:	e7b6      	b.n	8006932 <fx_pwm_running_light_run+0x2a>
 80069c4:	20001928 	.word	0x20001928

080069c8 <fx_pwm_running_light>:
	register_fx(&param1, fx_num);
 80069c8:	4601      	mov	r1, r0
 80069ca:	4801      	ldr	r0, [pc, #4]	; (80069d0 <fx_pwm_running_light+0x8>)
 80069cc:	f7fd bc62 	b.w	8004294 <register_fx>
 80069d0:	080087fc 	.word	0x080087fc

080069d4 <fx_pwm_running_pulse_light>:
	register_fx(&param2, fx_num);
 80069d4:	4601      	mov	r1, r0
 80069d6:	4801      	ldr	r0, [pc, #4]	; (80069dc <fx_pwm_running_pulse_light+0x8>)
 80069d8:	f7fd bc5c 	b.w	8004294 <register_fx>
 80069dc:	08008810 	.word	0x08008810

080069e0 <fx_strip_running_light_run>:
	register_fx(&param,fx_num);
}


t_fx_result fx_strip_running_light_run(t_fx_state state,uint32_t framecount,const uint32_t duration)
{
 80069e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	static int16_t pos[CH_MAX] = {0,0};
	static int16_t step[CH_MAX] = {0,0};
	static uint32_t delay[CH_MAX] = {0,0};

	switch(state)
 80069e4:	2801      	cmp	r0, #1
{
 80069e6:	b085      	sub	sp, #20
	switch(state)
 80069e8:	d004      	beq.n	80069f4 <fx_strip_running_light_run+0x14>
 80069ea:	d35a      	bcc.n	8006aa2 <fx_strip_running_light_run+0xc2>
 80069ec:	2802      	cmp	r0, #2
 80069ee:	d07a      	beq.n	8006ae6 <fx_strip_running_light_run+0x106>
			WS2812B_clear(CH2);
			return FX_COMPLETED;
		case FX_DONE:
			break;
	}
	return FX_ERROR;
 80069f0:	2003      	movs	r0, #3
 80069f2:	e044      	b.n	8006a7e <fx_strip_running_light_run+0x9e>
	switch(state)
 80069f4:	2400      	movs	r4, #0
 80069f6:	4e40      	ldr	r6, [pc, #256]	; (8006af8 <fx_strip_running_light_run+0x118>)
				if (check_custom_frame_delay(&delay[ii],get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_SPEED]))) //Hmmm.... Speed determines the length of the effect but that's fixed for Single Shot... Problem....
 80069f8:	f8df b108 	ldr.w	fp, [pc, #264]	; 8006b04 <fx_strip_running_light_run+0x124>
					WS2812B_setPixelColor((t_stripchannel)ii,pos[ii],get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V1]), get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V2]), get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V3]));
 80069fc:	4d3f      	ldr	r5, [pc, #252]	; (8006afc <fx_strip_running_light_run+0x11c>)
					pos[ii] = pos[ii] + step[ii];
 80069fe:	f8df 8100 	ldr.w	r8, [pc, #256]	; 8006b00 <fx_strip_running_light_run+0x120>
				if (check_custom_frame_delay(&delay[ii],get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_SPEED]))) //Hmmm.... Speed determines the length of the effect but that's fixed for Single Shot... Problem....
 8006a02:	7870      	ldrb	r0, [r6, #1]
 8006a04:	f000 f8a8 	bl	8006b58 <get_DMX_variable>
 8006a08:	4601      	mov	r1, r0
 8006a0a:	eb0b 0084 	add.w	r0, fp, r4, lsl #2
 8006a0e:	fa5f fa84 	uxtb.w	sl, r4
 8006a12:	f000 f893 	bl	8006b3c <check_custom_frame_delay>
 8006a16:	b378      	cbz	r0, 8006a78 <fx_strip_running_light_run+0x98>
					WS2812B_clear((t_stripchannel)ii);
 8006a18:	4650      	mov	r0, sl
 8006a1a:	f000 f90b 	bl	8006c34 <WS2812B_clear>
					WS2812B_setPixelColor((t_stripchannel)ii,pos[ii],get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V1]), get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V2]), get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_V3]));
 8006a1e:	7930      	ldrb	r0, [r6, #4]
 8006a20:	f835 7014 	ldrh.w	r7, [r5, r4, lsl #1]
 8006a24:	f000 f898 	bl	8006b58 <get_DMX_variable>
 8006a28:	9003      	str	r0, [sp, #12]
 8006a2a:	7970      	ldrb	r0, [r6, #5]
 8006a2c:	f000 f894 	bl	8006b58 <get_DMX_variable>
 8006a30:	9002      	str	r0, [sp, #8]
 8006a32:	79b0      	ldrb	r0, [r6, #6]
 8006a34:	f000 f890 	bl	8006b58 <get_DMX_variable>
 8006a38:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8006a3c:	4639      	mov	r1, r7
 8006a3e:	9000      	str	r0, [sp, #0]
 8006a40:	4650      	mov	r0, sl
 8006a42:	f000 f8c1 	bl	8006bc8 <WS2812B_setPixelColor>
					pos[ii] = pos[ii] + step[ii];
 8006a46:	f835 7014 	ldrh.w	r7, [r5, r4, lsl #1]
 8006a4a:	f838 3014 	ldrh.w	r3, [r8, r4, lsl #1]
					if (pos[ii] > WS2812B_numPixels((t_stripchannel)ii))
 8006a4e:	4650      	mov	r0, sl
					pos[ii] = pos[ii] + step[ii];
 8006a50:	441f      	add	r7, r3
 8006a52:	b23f      	sxth	r7, r7
 8006a54:	f825 7014 	strh.w	r7, [r5, r4, lsl #1]
					if (pos[ii] > WS2812B_numPixels((t_stripchannel)ii))
 8006a58:	f000 f8e4 	bl	8006c24 <WS2812B_numPixels>
 8006a5c:	4287      	cmp	r7, r0
 8006a5e:	ea4f 0944 	mov.w	r9, r4, lsl #1
 8006a62:	dd11      	ble.n	8006a88 <fx_strip_running_light_run+0xa8>
						step[ii] = -step[ii];
 8006a64:	f838 2014 	ldrh.w	r2, [r8, r4, lsl #1]
 8006a68:	4253      	negs	r3, r2
 8006a6a:	f828 3014 	strh.w	r3, [r8, r4, lsl #1]
						pos[ii] = pos[ii] + step[ii];
 8006a6e:	f835 3014 	ldrh.w	r3, [r5, r4, lsl #1]
 8006a72:	1a9b      	subs	r3, r3, r2
 8006a74:	f825 3014 	strh.w	r3, [r5, r4, lsl #1]
 8006a78:	3607      	adds	r6, #7
			for (uint8_t ii = 0;ii<CH_MAX;ii++)
 8006a7a:	b11c      	cbz	r4, 8006a84 <fx_strip_running_light_run+0xa4>
 8006a7c:	2002      	movs	r0, #2
}
 8006a7e:	b005      	add	sp, #20
 8006a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			for (uint8_t ii = 0;ii<CH_MAX;ii++)
 8006a84:	2401      	movs	r4, #1
 8006a86:	e7bc      	b.n	8006a02 <fx_strip_running_light_run+0x22>
					else if (pos[ii] < 0)
 8006a88:	f935 3014 	ldrsh.w	r3, [r5, r4, lsl #1]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	daf3      	bge.n	8006a78 <fx_strip_running_light_run+0x98>
						step[ii] = -step[ii];
 8006a90:	f839 2008 	ldrh.w	r2, [r9, r8]
 8006a94:	4251      	negs	r1, r2
						pos[ii] = pos[ii] + step[ii];
 8006a96:	1a9b      	subs	r3, r3, r2
						step[ii] = -step[ii];
 8006a98:	f829 1008 	strh.w	r1, [r9, r8]
						pos[ii] = pos[ii] + step[ii];
 8006a9c:	f829 3005 	strh.w	r3, [r9, r5]
 8006aa0:	e7ea      	b.n	8006a78 <fx_strip_running_light_run+0x98>
	switch(state)
 8006aa2:	2400      	movs	r4, #0
				step[ii] = get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_SIZE]);
 8006aa4:	4f14      	ldr	r7, [pc, #80]	; (8006af8 <fx_strip_running_light_run+0x118>)
 8006aa6:	4e16      	ldr	r6, [pc, #88]	; (8006b00 <fx_strip_running_light_run+0x120>)
				  pos[ii] = WS2812B_numPixels((t_stripchannel)ii);
 8006aa8:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8006afc <fx_strip_running_light_run+0x11c>
 8006aac:	00e5      	lsls	r5, r4, #3
 8006aae:	1b2d      	subs	r5, r5, r4
				step[ii] = get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_SIZE]);
 8006ab0:	19eb      	adds	r3, r5, r7
 8006ab2:	7898      	ldrb	r0, [r3, #2]
 8006ab4:	f000 f850 	bl	8006b58 <get_DMX_variable>
 8006ab8:	f826 0014 	strh.w	r0, [r6, r4, lsl #1]
				if (0 != get_DMX_variable(DMX_CH_REG[ii][DMX_STRIP_PATTERN]))
 8006abc:	5d78      	ldrb	r0, [r7, r5]
 8006abe:	fa5f f984 	uxtb.w	r9, r4
 8006ac2:	f000 f849 	bl	8006b58 <get_DMX_variable>
 8006ac6:	b148      	cbz	r0, 8006adc <fx_strip_running_light_run+0xfc>
				  pos[ii] = WS2812B_numPixels((t_stripchannel)ii);
 8006ac8:	4648      	mov	r0, r9
 8006aca:	f000 f8ab 	bl	8006c24 <WS2812B_numPixels>
				  step[ii] = -step[ii];
 8006ace:	f836 3014 	ldrh.w	r3, [r6, r4, lsl #1]
				  pos[ii] = WS2812B_numPixels((t_stripchannel)ii);
 8006ad2:	f828 0014 	strh.w	r0, [r8, r4, lsl #1]
				  step[ii] = -step[ii];
 8006ad6:	425b      	negs	r3, r3
 8006ad8:	f826 3014 	strh.w	r3, [r6, r4, lsl #1]
			for (uint8_t ii = 0;ii<CH_MAX;ii++)
 8006adc:	b10c      	cbz	r4, 8006ae2 <fx_strip_running_light_run+0x102>
			return FX_OK;
 8006ade:	2000      	movs	r0, #0
 8006ae0:	e7cd      	b.n	8006a7e <fx_strip_running_light_run+0x9e>
 8006ae2:	2401      	movs	r4, #1
 8006ae4:	e7e2      	b.n	8006aac <fx_strip_running_light_run+0xcc>
			WS2812B_clear(CH1);
 8006ae6:	2000      	movs	r0, #0
 8006ae8:	f000 f8a4 	bl	8006c34 <WS2812B_clear>
			WS2812B_clear(CH2);
 8006aec:	2001      	movs	r0, #1
 8006aee:	f000 f8a1 	bl	8006c34 <WS2812B_clear>
			return FX_COMPLETED;
 8006af2:	2001      	movs	r0, #1
 8006af4:	e7c3      	b.n	8006a7e <fx_strip_running_light_run+0x9e>
 8006af6:	bf00      	nop
 8006af8:	08008838 	.word	0x08008838
 8006afc:	20000934 	.word	0x20000934
 8006b00:	20000938 	.word	0x20000938
 8006b04:	2000092c 	.word	0x2000092c

08006b08 <fx_strip_running_light>:
	register_fx(&param,fx_num);
 8006b08:	4601      	mov	r1, r0
 8006b0a:	4801      	ldr	r0, [pc, #4]	; (8006b10 <fx_strip_running_light+0x8>)
 8006b0c:	f7fd bbc2 	b.w	8004294 <register_fx>
 8006b10:	08008824 	.word	0x08008824

08006b14 <reset_frame_delay>:


//Reset the Frame Delay Counter
void reset_frame_delay(void)
{
	 delay_count = 0;
 8006b14:	2200      	movs	r2, #0
 8006b16:	4b01      	ldr	r3, [pc, #4]	; (8006b1c <reset_frame_delay+0x8>)
 8006b18:	601a      	str	r2, [r3, #0]
}
 8006b1a:	4770      	bx	lr
 8006b1c:	2000093c 	.word	0x2000093c

08006b20 <check_frame_delay>:

//Returns true if "delay" frames have passed, else false
uint8_t check_frame_delay(uint32_t delay)
{
	if (delay == delay_count)
 8006b20:	4a05      	ldr	r2, [pc, #20]	; (8006b38 <check_frame_delay+0x18>)
 8006b22:	6813      	ldr	r3, [r2, #0]
 8006b24:	4283      	cmp	r3, r0
 8006b26:	f04f 0000 	mov.w	r0, #0
	{
		delay_count = 0;
		return 1;
	}
	delay_count++;
 8006b2a:	bf15      	itete	ne
 8006b2c:	3301      	addne	r3, #1
		delay_count = 0;
 8006b2e:	6010      	streq	r0, [r2, #0]
	delay_count++;
 8006b30:	6013      	strne	r3, [r2, #0]
		return 1;
 8006b32:	2001      	moveq	r0, #1
	return 0;
}
 8006b34:	4770      	bx	lr
 8006b36:	bf00      	nop
 8006b38:	2000093c 	.word	0x2000093c

08006b3c <check_custom_frame_delay>:


//Custom Delay with on Variable
uint8_t check_custom_frame_delay(uint32_t* count, uint32_t delay)
{
 8006b3c:	2300      	movs	r3, #0
	if (delay == *count)
 8006b3e:	6802      	ldr	r2, [r0, #0]
 8006b40:	428a      	cmp	r2, r1
	{
		*count = 0;
		return 1;
	}
	*count = *count + 1;
 8006b42:	bf15      	itete	ne
 8006b44:	3201      	addne	r2, #1
		*count = 0;
 8006b46:	6003      	streq	r3, [r0, #0]
	*count = *count + 1;
 8006b48:	6002      	strne	r2, [r0, #0]
		return 1;
 8006b4a:	2001      	moveq	r0, #1
	return 0;
 8006b4c:	bf18      	it	ne
 8006b4e:	4618      	movne	r0, r3
}
 8006b50:	4770      	bx	lr

08006b52 <set_pwm_light>:


//Set Light by index (0..9)
void set_pwm_light(uint8_t index, uint8_t val)
{
	set_reg(index+1, val);
 8006b52:	3001      	adds	r0, #1
 8006b54:	f7fd ba2c 	b.w	8003fb0 <set_reg>

08006b58 <get_DMX_variable>:
}

//Get a DMX Variable
uint8_t get_DMX_variable(t_dmx_var var)
{
	return get_reg((uint32_t)var);
 8006b58:	f7fd ba38 	b.w	8003fcc <get_reg>

08006b5c <WS2812B_show>:
  static uint8_t errorcnt = 0;

  //SPI.dmaSendAsync(pixels,numBytes);// Start the DMA transfer of the current pixel buffer to the LEDs and return immediately.

  //Wait for last transfer to finish
  while(__HAL_SPI_GET_FLAG(stripchannel[ch].phspi, SPI_FLAG_BSY ))
 8006b5c:	231c      	movs	r3, #28
{
 8006b5e:	b570      	push	{r4, r5, r6, lr}
 8006b60:	4606      	mov	r6, r0
  while(__HAL_SPI_GET_FLAG(stripchannel[ch].phspi, SPI_FLAG_BSY ))
 8006b62:	4c17      	ldr	r4, [pc, #92]	; (8006bc0 <WS2812B_show+0x64>)
 8006b64:	fb03 4300 	mla	r3, r3, r0, r4
 8006b68:	695b      	ldr	r3, [r3, #20]
 8006b6a:	681a      	ldr	r2, [r3, #0]
 8006b6c:	6893      	ldr	r3, [r2, #8]
 8006b6e:	061b      	lsls	r3, r3, #24
 8006b70:	d4fc      	bmi.n	8006b6c <WS2812B_show+0x10>
  {
	  loopcnt++;
  }

  while (HAL_GetTick()<stripchannel[ch].time)
 8006b72:	251c      	movs	r5, #28
 8006b74:	fb05 4506 	mla	r5, r5, r6, r4
 8006b78:	f7f9 fdb6 	bl	80006e8 <HAL_GetTick>
 8006b7c:	682b      	ldr	r3, [r5, #0]
 8006b7e:	4298      	cmp	r0, r3
 8006b80:	d3fa      	bcc.n	8006b78 <WS2812B_show+0x1c>

  //we know how long the transfer takes..
  //(440ns per bit) * 8 bits * 3 colors * number of pixels...

  //Send Data via DMA
  if (HAL_OK != HAL_SPI_Transmit_DMA(stripchannel[ch].phspi, stripchannel[ch].pixels, stripchannel[ch].numBytes))
 8006b82:	88ea      	ldrh	r2, [r5, #6]
 8006b84:	68e9      	ldr	r1, [r5, #12]
 8006b86:	6968      	ldr	r0, [r5, #20]
 8006b88:	f7fb fbbc 	bl	8002304 <HAL_SPI_Transmit_DMA>
 8006b8c:	b118      	cbz	r0, 8006b96 <WS2812B_show+0x3a>
	  errorcnt++;
 8006b8e:	4a0d      	ldr	r2, [pc, #52]	; (8006bc4 <WS2812B_show+0x68>)
 8006b90:	7813      	ldrb	r3, [r2, #0]
 8006b92:	3301      	adds	r3, #1
 8006b94:	7013      	strb	r3, [r2, #0]
  stripchannel[ch].time = HAL_GetTick() + 6;  //we need to wait at least XXX systicks for the colors to latch in after the last transfer.
 8006b96:	f7f9 fda7 	bl	80006e8 <HAL_GetTick>
 8006b9a:	221c      	movs	r2, #28
 8006b9c:	4372      	muls	r2, r6
 8006b9e:	3006      	adds	r0, #6
 8006ba0:	18a3      	adds	r3, r4, r2
 8006ba2:	50a0      	str	r0, [r4, r2]
 8006ba4:	88da      	ldrh	r2, [r3, #6]
  	  	  	  	  	  	  	 //The added 6 ms here are purely experimental...

  // Need to copy the last / current buffer to the other half of the double buffer as most API code does not rebuild the entire contents
  // from scratch. Often just a few pixels are changed e.g in a chaser effect

  if (stripchannel[ch].pixels==stripchannel[ch].doubleBuffer)
 8006ba6:	e9d3 1003 	ldrd	r1, r0, [r3, #12]
 8006baa:	4281      	cmp	r1, r0
  {
	// pixels was using the first buffer
	  stripchannel[ch].pixels = stripchannel[ch].doubleBuffer+stripchannel[ch].numBytes;  // set pixels to second buffer
 8006bac:	bf07      	ittee	eq
 8006bae:	1888      	addeq	r0, r1, r2
 8006bb0:	60d8      	streq	r0, [r3, #12]
	memcpy(stripchannel[ch].pixels,stripchannel[ch].doubleBuffer,stripchannel[ch].numBytes);// copy first buffer to second buffer
  }
  else
  {
	// pixels was using the second buffer
	  stripchannel[ch].pixels	= stripchannel[ch].doubleBuffer;  // set pixels to first buffer
 8006bb2:	60d8      	strne	r0, [r3, #12]
	memcpy(stripchannel[ch].pixels,stripchannel[ch].doubleBuffer+stripchannel[ch].numBytes,stripchannel[ch].numBytes);	 // copy second buffer to first buffer
 8006bb4:	1881      	addne	r1, r0, r2
  }
}
 8006bb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	memcpy(stripchannel[ch].pixels,stripchannel[ch].doubleBuffer+stripchannel[ch].numBytes,stripchannel[ch].numBytes);	 // copy second buffer to first buffer
 8006bba:	f000 b933 	b.w	8006e24 <memcpy>
 8006bbe:	bf00      	nop
 8006bc0:	20000ba8 	.word	0x20000ba8
 8006bc4:	20000940 	.word	0x20000940

08006bc8 <WS2812B_setPixelColor>:

//Sets a specific pixel to a specific r,g,b colour
//Because the pixels buffer contains the encoded bitstream, which is in triplets
//the lookup table need to be used to find the correct pattern for each byte in the 3 byte sequence.
void WS2812B_setPixelColor(t_stripchannel ch,uint16_t n, uint8_t r, uint8_t g, uint8_t b)
 {
 8006bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006bca:	241c      	movs	r4, #28
 8006bcc:	4e13      	ldr	r6, [pc, #76]	; (8006c1c <WS2812B_setPixelColor+0x54>)
   uint8_t *tPtr = (uint8_t *)encoderLookup + g*2 + g;// need to index 3 x g into the lookup
 8006bce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006bd2:	fb04 6000 	mla	r0, r4, r0, r6
   uint8_t *tPtr = (uint8_t *)encoderLookup + g*2 + g;// need to index 3 x g into the lookup
 8006bd6:	4c12      	ldr	r4, [pc, #72]	; (8006c20 <WS2812B_setPixelColor+0x58>)
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006bd8:	68c7      	ldr	r7, [r0, #12]
   uint8_t *tPtr = (uint8_t *)encoderLookup + g*2 + g;// need to index 3 x g into the lookup
 8006bda:	18e6      	adds	r6, r4, r3
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006bdc:	eb01 01c1 	add.w	r1, r1, r1, lsl #3

   *bptr++ = *tPtr++;
 8006be0:	5ce3      	ldrb	r3, [r4, r3]
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006be2:	3101      	adds	r1, #1
   *bptr++ = *tPtr++;
 8006be4:	547b      	strb	r3, [r7, r1]
   *bptr++ = *tPtr++;
 8006be6:	7873      	ldrb	r3, [r6, #1]
   uint8_t *bptr = stripchannel[ch].pixels + (n<<3) + n +1;
 8006be8:	1878      	adds	r0, r7, r1
   *bptr++ = *tPtr++;
 8006bea:	7043      	strb	r3, [r0, #1]
   *bptr++ = *tPtr++;
 8006bec:	78b3      	ldrb	r3, [r6, #2]

   tPtr = (uint8_t *)encoderLookup + r*2 + r;
 8006bee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   *bptr++ = *tPtr++;
 8006bf2:	7083      	strb	r3, [r0, #2]
   tPtr = (uint8_t *)encoderLookup + r*2 + r;
 8006bf4:	18a3      	adds	r3, r4, r2
   *bptr++ = *tPtr++;
 8006bf6:	5ca2      	ldrb	r2, [r4, r2]
 {
 8006bf8:	f89d 5014 	ldrb.w	r5, [sp, #20]
   *bptr++ = *tPtr++;
 8006bfc:	70c2      	strb	r2, [r0, #3]
   *bptr++ = *tPtr++;
 8006bfe:	785a      	ldrb	r2, [r3, #1]
   *bptr++ = *tPtr++;

   tPtr = (uint8_t *)encoderLookup + b*2 + b;
 8006c00:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   *bptr++ = *tPtr++;
 8006c04:	7102      	strb	r2, [r0, #4]
   *bptr++ = *tPtr++;
 8006c06:	789b      	ldrb	r3, [r3, #2]
 8006c08:	7143      	strb	r3, [r0, #5]
   *bptr++ = *tPtr++;
 8006c0a:	5d62      	ldrb	r2, [r4, r5]
   tPtr = (uint8_t *)encoderLookup + b*2 + b;
 8006c0c:	1963      	adds	r3, r4, r5
   *bptr++ = *tPtr++;
 8006c0e:	7182      	strb	r2, [r0, #6]
   *bptr++ = *tPtr++;
 8006c10:	785a      	ldrb	r2, [r3, #1]
 8006c12:	71c2      	strb	r2, [r0, #7]
   *bptr++ = *tPtr++;
 8006c14:	789b      	ldrb	r3, [r3, #2]
 8006c16:	7203      	strb	r3, [r0, #8]
 }
 8006c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c1a:	bf00      	nop
 8006c1c:	20000ba8 	.word	0x20000ba8
 8006c20:	08008846 	.word	0x08008846

08006c24 <WS2812B_numPixels>:
}

//Get the number of pixels
uint16_t WS2812B_numPixels(t_stripchannel ch)
{
  return stripchannel[ch].numLEDs;
 8006c24:	231c      	movs	r3, #28
 8006c26:	4a02      	ldr	r2, [pc, #8]	; (8006c30 <WS2812B_numPixels+0xc>)
 8006c28:	fb03 2000 	mla	r0, r3, r0, r2
}
 8006c2c:	8880      	ldrh	r0, [r0, #4]
 8006c2e:	4770      	bx	lr
 8006c30:	20000ba8 	.word	0x20000ba8

08006c34 <WS2812B_clear>:
}

//Sets the encoded pixel data to turn all the LEDs off.
void WS2812B_clear(t_stripchannel ch)
{
	uint8_t * bptr= stripchannel[ch].pixels+1;// Note first byte in the buffer is a preable and is always zero. hence the +1
 8006c34:	231c      	movs	r3, #28
{
 8006c36:	b570      	push	{r4, r5, r6, lr}
	uint8_t *tPtr;

	for(int i=0;i< (stripchannel[ch].numLEDs *3);i++)
 8006c38:	2100      	movs	r1, #0
	{
    tPtr = (uint8_t *)encoderLookup;
    *bptr++ = *tPtr++;
 8006c3a:	2492      	movs	r4, #146	; 0x92
    *bptr++ = *tPtr++;
 8006c3c:	2549      	movs	r5, #73	; 0x49
    *bptr++ = *tPtr++;
 8006c3e:	2624      	movs	r6, #36	; 0x24
	uint8_t * bptr= stripchannel[ch].pixels+1;// Note first byte in the buffer is a preable and is always zero. hence the +1
 8006c40:	4a09      	ldr	r2, [pc, #36]	; (8006c68 <WS2812B_clear+0x34>)
 8006c42:	fb03 2000 	mla	r0, r3, r0, r2
 8006c46:	68c3      	ldr	r3, [r0, #12]
 8006c48:	3301      	adds	r3, #1
	for(int i=0;i< (stripchannel[ch].numLEDs *3);i++)
 8006c4a:	8882      	ldrh	r2, [r0, #4]
 8006c4c:	3303      	adds	r3, #3
 8006c4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8006c52:	428a      	cmp	r2, r1
 8006c54:	dc00      	bgt.n	8006c58 <WS2812B_clear+0x24>
	}
}
 8006c56:	bd70      	pop	{r4, r5, r6, pc}
    *bptr++ = *tPtr++;
 8006c58:	f803 4c03 	strb.w	r4, [r3, #-3]
    *bptr++ = *tPtr++;
 8006c5c:	f803 5c02 	strb.w	r5, [r3, #-2]
    *bptr++ = *tPtr++;
 8006c60:	f803 6c01 	strb.w	r6, [r3, #-1]
	for(int i=0;i< (stripchannel[ch].numLEDs *3);i++)
 8006c64:	3101      	adds	r1, #1
 8006c66:	e7f0      	b.n	8006c4a <WS2812B_clear+0x16>
 8006c68:	20000ba8 	.word	0x20000ba8

08006c6c <WS2812B_init>:
{
 8006c6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
	stripchannel[ch].brightness = 255;
 8006c70:	221c      	movs	r2, #28
{
 8006c72:	4688      	mov	r8, r1
	stripchannel[ch].brightness = 255;
 8006c74:	21ff      	movs	r1, #255	; 0xff
 8006c76:	4342      	muls	r2, r0
 8006c78:	4d2d      	ldr	r5, [pc, #180]	; (8006d30 <WS2812B_init+0xc4>)
{
 8006c7a:	4604      	mov	r4, r0
	stripchannel[ch].brightness = 255;
 8006c7c:	18ab      	adds	r3, r5, r2
 8006c7e:	7219      	strb	r1, [r3, #8]
	stripchannel[ch].pixels = NULL;
 8006c80:	2100      	movs	r1, #0
	stripchannel[ch].doubleBuffer = NULL;
 8006c82:	e9c3 1103 	strd	r1, r1, [r3, #12]
	stripchannel[ch].time = 0;
 8006c86:	50a9      	str	r1, [r5, r2]
	if (ch == CH1)
 8006c88:	bb20      	cbnz	r0, 8006cd4 <WS2812B_init+0x68>
		stripchannel[ch].phspi = &hspi1;
 8006c8a:	4b2a      	ldr	r3, [pc, #168]	; (8006d34 <WS2812B_init+0xc8>)
 8006c8c:	616b      	str	r3, [r5, #20]
		stripchannel[ch].phdma_spi_tx = &hdma_spi1_tx;
 8006c8e:	4b2a      	ldr	r3, [pc, #168]	; (8006d38 <WS2812B_init+0xcc>)
 8006c90:	61ab      	str	r3, [r5, #24]
  stripchannel[ch].numBytes = (number_of_leds<<3) + number_of_leds + 2; // 9 encoded bytes per pixel. 1 byte empty peamble to fix issue with SPI MOSI and on byte at the end to clear down MOSI
 8006c92:	261c      	movs	r6, #28
  uint8_t buffer0[2] = { 0, 0 };
 8006c94:	f04f 0900 	mov.w	r9, #0
  stripchannel[ch].numBytes = (number_of_leds<<3) + number_of_leds + 2; // 9 encoded bytes per pixel. 1 byte empty peamble to fix issue with SPI MOSI and on byte at the end to clear down MOSI
 8006c98:	fb06 5604 	mla	r6, r6, r4, r5
 8006c9c:	f108 0002 	add.w	r0, r8, #2
 8006ca0:	eb00 00c8 	add.w	r0, r0, r8, lsl #3
 8006ca4:	b287      	uxth	r7, r0
 8006ca6:	80f7      	strh	r7, [r6, #6]
  if((stripchannel[ch].doubleBuffer = (uint8_t *)malloc(stripchannel[ch].numBytes*2)))
 8006ca8:	0078      	lsls	r0, r7, #1
  uint8_t buffer0[2] = { 0, 0 };
 8006caa:	f8ad 9004 	strh.w	r9, [sp, #4]
  if((stripchannel[ch].doubleBuffer = (uint8_t *)malloc(stripchannel[ch].numBytes*2)))
 8006cae:	f000 f8a9 	bl	8006e04 <malloc>
 8006cb2:	6130      	str	r0, [r6, #16]
 8006cb4:	b198      	cbz	r0, 8006cde <WS2812B_init+0x72>
	stripchannel[ch].pixels = stripchannel[ch].doubleBuffer;
 8006cb6:	60f0      	str	r0, [r6, #12]
    *stripchannel[ch].pixels=0;//clear the preamble byte
 8006cb8:	f880 9000 	strb.w	r9, [r0]
    *(stripchannel[ch].pixels+stripchannel[ch].numBytes-1)=0;// clear the post send cleardown byte.
 8006cbc:	4438      	add	r0, r7
 8006cbe:	f800 9c01 	strb.w	r9, [r0, #-1]
	stripchannel[ch].numLEDs = number_of_leds;
 8006cc2:	f8a6 8004 	strh.w	r8, [r6, #4]
    WS2812B_clear(ch);// Set the encoded data to all encoded zeros
 8006cc6:	4620      	mov	r0, r4
 8006cc8:	f7ff ffb4 	bl	8006c34 <WS2812B_clear>
  if (ch == CH1)
 8006ccc:	b15c      	cbz	r4, 8006ce6 <WS2812B_init+0x7a>
	  stripchannel[ch].phdma_spi_tx->Instance = DMA1_Channel4;
 8006cce:	69b3      	ldr	r3, [r6, #24]
 8006cd0:	4a1a      	ldr	r2, [pc, #104]	; (8006d3c <WS2812B_init+0xd0>)
 8006cd2:	e00a      	b.n	8006cea <WS2812B_init+0x7e>
		stripchannel[ch].phspi = &hspi2;
 8006cd4:	4a1a      	ldr	r2, [pc, #104]	; (8006d40 <WS2812B_init+0xd4>)
 8006cd6:	615a      	str	r2, [r3, #20]
		stripchannel[ch].phdma_spi_tx = &hdma_spi2_tx;
 8006cd8:	4a1a      	ldr	r2, [pc, #104]	; (8006d44 <WS2812B_init+0xd8>)
 8006cda:	619a      	str	r2, [r3, #24]
 8006cdc:	e7d9      	b.n	8006c92 <WS2812B_init+0x26>
	  stripchannel[ch].numLEDs = stripchannel[ch].numBytes = 0;
 8006cde:	6070      	str	r0, [r6, #4]
}
 8006ce0:	b003      	add	sp, #12
 8006ce2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	  stripchannel[ch].phdma_spi_tx->Instance = DMA1_Channel3;
 8006ce6:	69ab      	ldr	r3, [r5, #24]
 8006ce8:	4a17      	ldr	r2, [pc, #92]	; (8006d48 <WS2812B_init+0xdc>)
	  stripchannel[ch].phdma_spi_tx->Instance = DMA1_Channel4;
 8006cea:	601a      	str	r2, [r3, #0]
  stripchannel[ch].phdma_spi_tx->Init.Direction = DMA_MEMORY_TO_PERIPH;
 8006cec:	231c      	movs	r3, #28
 8006cee:	fb03 5504 	mla	r5, r3, r4, r5
  stripchannel[ch].phdma_spi_tx->Init.PeriphInc = DMA_PINC_DISABLE;
 8006cf2:	2400      	movs	r4, #0
 8006cf4:	2310      	movs	r3, #16
  stripchannel[ch].phdma_spi_tx->Init.Direction = DMA_MEMORY_TO_PERIPH;
 8006cf6:	69a8      	ldr	r0, [r5, #24]
  stripchannel[ch].phdma_spi_tx->Init.PeriphInc = DMA_PINC_DISABLE;
 8006cf8:	e9c0 3401 	strd	r3, r4, [r0, #4]
  stripchannel[ch].phdma_spi_tx->Init.MemInc = DMA_MINC_ENABLE;
 8006cfc:	2380      	movs	r3, #128	; 0x80
  stripchannel[ch].phdma_spi_tx->Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006cfe:	e9c0 3403 	strd	r3, r4, [r0, #12]
  stripchannel[ch].phdma_spi_tx->Init.Priority = DMA_PRIORITY_MEDIUM;
 8006d02:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  stripchannel[ch].phdma_spi_tx->Init.Mode = DMA_NORMAL;
 8006d06:	e9c0 4405 	strd	r4, r4, [r0, #20]
  stripchannel[ch].phdma_spi_tx->Init.Priority = DMA_PRIORITY_MEDIUM;
 8006d0a:	61c3      	str	r3, [r0, #28]
  if (HAL_DMA_Init(stripchannel[ch].phdma_spi_tx) != HAL_OK)
 8006d0c:	f7f9 ff96 	bl	8000c3c <HAL_DMA_Init>
 8006d10:	b110      	cbz	r0, 8006d18 <WS2812B_init+0xac>
	    stripchannel[ch].numLEDs = stripchannel[ch].numBytes = 0;
 8006d12:	606c      	str	r4, [r5, #4]
	    return 0;
 8006d14:	4620      	mov	r0, r4
 8006d16:	e7e3      	b.n	8006ce0 <WS2812B_init+0x74>
  __HAL_LINKDMA(stripchannel[ch].phspi,hdmatx,*stripchannel[ch].phdma_spi_tx);
 8006d18:	e9d5 0305 	ldrd	r0, r3, [r5, #20]
   HAL_SPI_Transmit(stripchannel[ch].phspi, buffer0, 1, 100 );
 8006d1c:	2201      	movs	r2, #1
  __HAL_LINKDMA(stripchannel[ch].phspi,hdmatx,*stripchannel[ch].phdma_spi_tx);
 8006d1e:	6483      	str	r3, [r0, #72]	; 0x48
   HAL_SPI_Transmit(stripchannel[ch].phspi, buffer0, 1, 100 );
 8006d20:	a901      	add	r1, sp, #4
  __HAL_LINKDMA(stripchannel[ch].phspi,hdmatx,*stripchannel[ch].phdma_spi_tx);
 8006d22:	6258      	str	r0, [r3, #36]	; 0x24
   HAL_SPI_Transmit(stripchannel[ch].phspi, buffer0, 1, 100 );
 8006d24:	2364      	movs	r3, #100	; 0x64
 8006d26:	f7fb fa44 	bl	80021b2 <HAL_SPI_Transmit>
   return 1;
 8006d2a:	2001      	movs	r0, #1
 8006d2c:	e7d8      	b.n	8006ce0 <WS2812B_init+0x74>
 8006d2e:	bf00      	nop
 8006d30:	20000ba8 	.word	0x20000ba8
 8006d34:	20000c50 	.word	0x20000c50
 8006d38:	20000cec 	.word	0x20000cec
 8006d3c:	40020044 	.word	0x40020044
 8006d40:	20000abc 	.word	0x20000abc
 8006d44:	20000ca8 	.word	0x20000ca8
 8006d48:	40020030 	.word	0x40020030

08006d4c <Reset_Handler>:
 8006d4c:	2100      	movs	r1, #0
 8006d4e:	e003      	b.n	8006d58 <LoopCopyDataInit>

08006d50 <CopyDataInit>:
 8006d50:	4b0b      	ldr	r3, [pc, #44]	; (8006d80 <LoopFillZerobss+0x14>)
 8006d52:	585b      	ldr	r3, [r3, r1]
 8006d54:	5043      	str	r3, [r0, r1]
 8006d56:	3104      	adds	r1, #4

08006d58 <LoopCopyDataInit>:
 8006d58:	480a      	ldr	r0, [pc, #40]	; (8006d84 <LoopFillZerobss+0x18>)
 8006d5a:	4b0b      	ldr	r3, [pc, #44]	; (8006d88 <LoopFillZerobss+0x1c>)
 8006d5c:	1842      	adds	r2, r0, r1
 8006d5e:	429a      	cmp	r2, r3
 8006d60:	d3f6      	bcc.n	8006d50 <CopyDataInit>
 8006d62:	4a0a      	ldr	r2, [pc, #40]	; (8006d8c <LoopFillZerobss+0x20>)
 8006d64:	e002      	b.n	8006d6c <LoopFillZerobss>

08006d66 <FillZerobss>:
 8006d66:	2300      	movs	r3, #0
 8006d68:	f842 3b04 	str.w	r3, [r2], #4

08006d6c <LoopFillZerobss>:
 8006d6c:	4b08      	ldr	r3, [pc, #32]	; (8006d90 <LoopFillZerobss+0x24>)
 8006d6e:	429a      	cmp	r2, r3
 8006d70:	d3f9      	bcc.n	8006d66 <FillZerobss>
 8006d72:	f7ff f999 	bl	80060a8 <SystemInit>
 8006d76:	f000 f821 	bl	8006dbc <__libc_init_array>
 8006d7a:	f7fd fdb9 	bl	80048f0 <main>
 8006d7e:	4770      	bx	lr
 8006d80:	08008c8c 	.word	0x08008c8c
 8006d84:	20000000 	.word	0x20000000
 8006d88:	200003d4 	.word	0x200003d4
 8006d8c:	200003d8 	.word	0x200003d8
 8006d90:	20001930 	.word	0x20001930

08006d94 <CAN1_RX1_IRQHandler>:
 8006d94:	e7fe      	b.n	8006d94 <CAN1_RX1_IRQHandler>

08006d96 <atoi>:
 8006d96:	220a      	movs	r2, #10
 8006d98:	2100      	movs	r1, #0
 8006d9a:	f000 ba21 	b.w	80071e0 <strtol>
	...

08006da0 <calloc>:
 8006da0:	4b02      	ldr	r3, [pc, #8]	; (8006dac <calloc+0xc>)
 8006da2:	460a      	mov	r2, r1
 8006da4:	4601      	mov	r1, r0
 8006da6:	6818      	ldr	r0, [r3, #0]
 8006da8:	f000 b84f 	b.w	8006e4a <_calloc_r>
 8006dac:	20000204 	.word	0x20000204

08006db0 <__errno>:
 8006db0:	4b01      	ldr	r3, [pc, #4]	; (8006db8 <__errno+0x8>)
 8006db2:	6818      	ldr	r0, [r3, #0]
 8006db4:	4770      	bx	lr
 8006db6:	bf00      	nop
 8006db8:	20000204 	.word	0x20000204

08006dbc <__libc_init_array>:
 8006dbc:	b570      	push	{r4, r5, r6, lr}
 8006dbe:	2500      	movs	r5, #0
 8006dc0:	4e0c      	ldr	r6, [pc, #48]	; (8006df4 <__libc_init_array+0x38>)
 8006dc2:	4c0d      	ldr	r4, [pc, #52]	; (8006df8 <__libc_init_array+0x3c>)
 8006dc4:	1ba4      	subs	r4, r4, r6
 8006dc6:	10a4      	asrs	r4, r4, #2
 8006dc8:	42a5      	cmp	r5, r4
 8006dca:	d109      	bne.n	8006de0 <__libc_init_array+0x24>
 8006dcc:	f000 fdac 	bl	8007928 <_init>
 8006dd0:	2500      	movs	r5, #0
 8006dd2:	4e0a      	ldr	r6, [pc, #40]	; (8006dfc <__libc_init_array+0x40>)
 8006dd4:	4c0a      	ldr	r4, [pc, #40]	; (8006e00 <__libc_init_array+0x44>)
 8006dd6:	1ba4      	subs	r4, r4, r6
 8006dd8:	10a4      	asrs	r4, r4, #2
 8006dda:	42a5      	cmp	r5, r4
 8006ddc:	d105      	bne.n	8006dea <__libc_init_array+0x2e>
 8006dde:	bd70      	pop	{r4, r5, r6, pc}
 8006de0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006de4:	4798      	blx	r3
 8006de6:	3501      	adds	r5, #1
 8006de8:	e7ee      	b.n	8006dc8 <__libc_init_array+0xc>
 8006dea:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006dee:	4798      	blx	r3
 8006df0:	3501      	adds	r5, #1
 8006df2:	e7f2      	b.n	8006dda <__libc_init_array+0x1e>
 8006df4:	08008c84 	.word	0x08008c84
 8006df8:	08008c84 	.word	0x08008c84
 8006dfc:	08008c84 	.word	0x08008c84
 8006e00:	08008c88 	.word	0x08008c88

08006e04 <malloc>:
 8006e04:	4b02      	ldr	r3, [pc, #8]	; (8006e10 <malloc+0xc>)
 8006e06:	4601      	mov	r1, r0
 8006e08:	6818      	ldr	r0, [r3, #0]
 8006e0a:	f000 b879 	b.w	8006f00 <_malloc_r>
 8006e0e:	bf00      	nop
 8006e10:	20000204 	.word	0x20000204

08006e14 <free>:
 8006e14:	4b02      	ldr	r3, [pc, #8]	; (8006e20 <free+0xc>)
 8006e16:	4601      	mov	r1, r0
 8006e18:	6818      	ldr	r0, [r3, #0]
 8006e1a:	f000 b825 	b.w	8006e68 <_free_r>
 8006e1e:	bf00      	nop
 8006e20:	20000204 	.word	0x20000204

08006e24 <memcpy>:
 8006e24:	b510      	push	{r4, lr}
 8006e26:	1e43      	subs	r3, r0, #1
 8006e28:	440a      	add	r2, r1
 8006e2a:	4291      	cmp	r1, r2
 8006e2c:	d100      	bne.n	8006e30 <memcpy+0xc>
 8006e2e:	bd10      	pop	{r4, pc}
 8006e30:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006e34:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006e38:	e7f7      	b.n	8006e2a <memcpy+0x6>

08006e3a <memset>:
 8006e3a:	4603      	mov	r3, r0
 8006e3c:	4402      	add	r2, r0
 8006e3e:	4293      	cmp	r3, r2
 8006e40:	d100      	bne.n	8006e44 <memset+0xa>
 8006e42:	4770      	bx	lr
 8006e44:	f803 1b01 	strb.w	r1, [r3], #1
 8006e48:	e7f9      	b.n	8006e3e <memset+0x4>

08006e4a <_calloc_r>:
 8006e4a:	b538      	push	{r3, r4, r5, lr}
 8006e4c:	fb02 f401 	mul.w	r4, r2, r1
 8006e50:	4621      	mov	r1, r4
 8006e52:	f000 f855 	bl	8006f00 <_malloc_r>
 8006e56:	4605      	mov	r5, r0
 8006e58:	b118      	cbz	r0, 8006e62 <_calloc_r+0x18>
 8006e5a:	4622      	mov	r2, r4
 8006e5c:	2100      	movs	r1, #0
 8006e5e:	f7ff ffec 	bl	8006e3a <memset>
 8006e62:	4628      	mov	r0, r5
 8006e64:	bd38      	pop	{r3, r4, r5, pc}
	...

08006e68 <_free_r>:
 8006e68:	b538      	push	{r3, r4, r5, lr}
 8006e6a:	4605      	mov	r5, r0
 8006e6c:	2900      	cmp	r1, #0
 8006e6e:	d043      	beq.n	8006ef8 <_free_r+0x90>
 8006e70:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006e74:	1f0c      	subs	r4, r1, #4
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	bfb8      	it	lt
 8006e7a:	18e4      	addlt	r4, r4, r3
 8006e7c:	f000 fa15 	bl	80072aa <__malloc_lock>
 8006e80:	4a1e      	ldr	r2, [pc, #120]	; (8006efc <_free_r+0x94>)
 8006e82:	6813      	ldr	r3, [r2, #0]
 8006e84:	4610      	mov	r0, r2
 8006e86:	b933      	cbnz	r3, 8006e96 <_free_r+0x2e>
 8006e88:	6063      	str	r3, [r4, #4]
 8006e8a:	6014      	str	r4, [r2, #0]
 8006e8c:	4628      	mov	r0, r5
 8006e8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006e92:	f000 ba0b 	b.w	80072ac <__malloc_unlock>
 8006e96:	42a3      	cmp	r3, r4
 8006e98:	d90b      	bls.n	8006eb2 <_free_r+0x4a>
 8006e9a:	6821      	ldr	r1, [r4, #0]
 8006e9c:	1862      	adds	r2, r4, r1
 8006e9e:	4293      	cmp	r3, r2
 8006ea0:	bf01      	itttt	eq
 8006ea2:	681a      	ldreq	r2, [r3, #0]
 8006ea4:	685b      	ldreq	r3, [r3, #4]
 8006ea6:	1852      	addeq	r2, r2, r1
 8006ea8:	6022      	streq	r2, [r4, #0]
 8006eaa:	6063      	str	r3, [r4, #4]
 8006eac:	6004      	str	r4, [r0, #0]
 8006eae:	e7ed      	b.n	8006e8c <_free_r+0x24>
 8006eb0:	4613      	mov	r3, r2
 8006eb2:	685a      	ldr	r2, [r3, #4]
 8006eb4:	b10a      	cbz	r2, 8006eba <_free_r+0x52>
 8006eb6:	42a2      	cmp	r2, r4
 8006eb8:	d9fa      	bls.n	8006eb0 <_free_r+0x48>
 8006eba:	6819      	ldr	r1, [r3, #0]
 8006ebc:	1858      	adds	r0, r3, r1
 8006ebe:	42a0      	cmp	r0, r4
 8006ec0:	d10b      	bne.n	8006eda <_free_r+0x72>
 8006ec2:	6820      	ldr	r0, [r4, #0]
 8006ec4:	4401      	add	r1, r0
 8006ec6:	1858      	adds	r0, r3, r1
 8006ec8:	4282      	cmp	r2, r0
 8006eca:	6019      	str	r1, [r3, #0]
 8006ecc:	d1de      	bne.n	8006e8c <_free_r+0x24>
 8006ece:	6810      	ldr	r0, [r2, #0]
 8006ed0:	6852      	ldr	r2, [r2, #4]
 8006ed2:	4401      	add	r1, r0
 8006ed4:	6019      	str	r1, [r3, #0]
 8006ed6:	605a      	str	r2, [r3, #4]
 8006ed8:	e7d8      	b.n	8006e8c <_free_r+0x24>
 8006eda:	d902      	bls.n	8006ee2 <_free_r+0x7a>
 8006edc:	230c      	movs	r3, #12
 8006ede:	602b      	str	r3, [r5, #0]
 8006ee0:	e7d4      	b.n	8006e8c <_free_r+0x24>
 8006ee2:	6820      	ldr	r0, [r4, #0]
 8006ee4:	1821      	adds	r1, r4, r0
 8006ee6:	428a      	cmp	r2, r1
 8006ee8:	bf01      	itttt	eq
 8006eea:	6811      	ldreq	r1, [r2, #0]
 8006eec:	6852      	ldreq	r2, [r2, #4]
 8006eee:	1809      	addeq	r1, r1, r0
 8006ef0:	6021      	streq	r1, [r4, #0]
 8006ef2:	6062      	str	r2, [r4, #4]
 8006ef4:	605c      	str	r4, [r3, #4]
 8006ef6:	e7c9      	b.n	8006e8c <_free_r+0x24>
 8006ef8:	bd38      	pop	{r3, r4, r5, pc}
 8006efa:	bf00      	nop
 8006efc:	20000944 	.word	0x20000944

08006f00 <_malloc_r>:
 8006f00:	b570      	push	{r4, r5, r6, lr}
 8006f02:	1ccd      	adds	r5, r1, #3
 8006f04:	f025 0503 	bic.w	r5, r5, #3
 8006f08:	3508      	adds	r5, #8
 8006f0a:	2d0c      	cmp	r5, #12
 8006f0c:	bf38      	it	cc
 8006f0e:	250c      	movcc	r5, #12
 8006f10:	2d00      	cmp	r5, #0
 8006f12:	4606      	mov	r6, r0
 8006f14:	db01      	blt.n	8006f1a <_malloc_r+0x1a>
 8006f16:	42a9      	cmp	r1, r5
 8006f18:	d903      	bls.n	8006f22 <_malloc_r+0x22>
 8006f1a:	230c      	movs	r3, #12
 8006f1c:	6033      	str	r3, [r6, #0]
 8006f1e:	2000      	movs	r0, #0
 8006f20:	bd70      	pop	{r4, r5, r6, pc}
 8006f22:	f000 f9c2 	bl	80072aa <__malloc_lock>
 8006f26:	4a21      	ldr	r2, [pc, #132]	; (8006fac <_malloc_r+0xac>)
 8006f28:	6814      	ldr	r4, [r2, #0]
 8006f2a:	4621      	mov	r1, r4
 8006f2c:	b991      	cbnz	r1, 8006f54 <_malloc_r+0x54>
 8006f2e:	4c20      	ldr	r4, [pc, #128]	; (8006fb0 <_malloc_r+0xb0>)
 8006f30:	6823      	ldr	r3, [r4, #0]
 8006f32:	b91b      	cbnz	r3, 8006f3c <_malloc_r+0x3c>
 8006f34:	4630      	mov	r0, r6
 8006f36:	f000 f83d 	bl	8006fb4 <_sbrk_r>
 8006f3a:	6020      	str	r0, [r4, #0]
 8006f3c:	4629      	mov	r1, r5
 8006f3e:	4630      	mov	r0, r6
 8006f40:	f000 f838 	bl	8006fb4 <_sbrk_r>
 8006f44:	1c43      	adds	r3, r0, #1
 8006f46:	d124      	bne.n	8006f92 <_malloc_r+0x92>
 8006f48:	230c      	movs	r3, #12
 8006f4a:	4630      	mov	r0, r6
 8006f4c:	6033      	str	r3, [r6, #0]
 8006f4e:	f000 f9ad 	bl	80072ac <__malloc_unlock>
 8006f52:	e7e4      	b.n	8006f1e <_malloc_r+0x1e>
 8006f54:	680b      	ldr	r3, [r1, #0]
 8006f56:	1b5b      	subs	r3, r3, r5
 8006f58:	d418      	bmi.n	8006f8c <_malloc_r+0x8c>
 8006f5a:	2b0b      	cmp	r3, #11
 8006f5c:	d90f      	bls.n	8006f7e <_malloc_r+0x7e>
 8006f5e:	600b      	str	r3, [r1, #0]
 8006f60:	18cc      	adds	r4, r1, r3
 8006f62:	50cd      	str	r5, [r1, r3]
 8006f64:	4630      	mov	r0, r6
 8006f66:	f000 f9a1 	bl	80072ac <__malloc_unlock>
 8006f6a:	f104 000b 	add.w	r0, r4, #11
 8006f6e:	1d23      	adds	r3, r4, #4
 8006f70:	f020 0007 	bic.w	r0, r0, #7
 8006f74:	1ac3      	subs	r3, r0, r3
 8006f76:	d0d3      	beq.n	8006f20 <_malloc_r+0x20>
 8006f78:	425a      	negs	r2, r3
 8006f7a:	50e2      	str	r2, [r4, r3]
 8006f7c:	e7d0      	b.n	8006f20 <_malloc_r+0x20>
 8006f7e:	684b      	ldr	r3, [r1, #4]
 8006f80:	428c      	cmp	r4, r1
 8006f82:	bf16      	itet	ne
 8006f84:	6063      	strne	r3, [r4, #4]
 8006f86:	6013      	streq	r3, [r2, #0]
 8006f88:	460c      	movne	r4, r1
 8006f8a:	e7eb      	b.n	8006f64 <_malloc_r+0x64>
 8006f8c:	460c      	mov	r4, r1
 8006f8e:	6849      	ldr	r1, [r1, #4]
 8006f90:	e7cc      	b.n	8006f2c <_malloc_r+0x2c>
 8006f92:	1cc4      	adds	r4, r0, #3
 8006f94:	f024 0403 	bic.w	r4, r4, #3
 8006f98:	42a0      	cmp	r0, r4
 8006f9a:	d005      	beq.n	8006fa8 <_malloc_r+0xa8>
 8006f9c:	1a21      	subs	r1, r4, r0
 8006f9e:	4630      	mov	r0, r6
 8006fa0:	f000 f808 	bl	8006fb4 <_sbrk_r>
 8006fa4:	3001      	adds	r0, #1
 8006fa6:	d0cf      	beq.n	8006f48 <_malloc_r+0x48>
 8006fa8:	6025      	str	r5, [r4, #0]
 8006faa:	e7db      	b.n	8006f64 <_malloc_r+0x64>
 8006fac:	20000944 	.word	0x20000944
 8006fb0:	20000948 	.word	0x20000948

08006fb4 <_sbrk_r>:
 8006fb4:	b538      	push	{r3, r4, r5, lr}
 8006fb6:	2300      	movs	r3, #0
 8006fb8:	4c05      	ldr	r4, [pc, #20]	; (8006fd0 <_sbrk_r+0x1c>)
 8006fba:	4605      	mov	r5, r0
 8006fbc:	4608      	mov	r0, r1
 8006fbe:	6023      	str	r3, [r4, #0]
 8006fc0:	f7ff f858 	bl	8006074 <_sbrk>
 8006fc4:	1c43      	adds	r3, r0, #1
 8006fc6:	d102      	bne.n	8006fce <_sbrk_r+0x1a>
 8006fc8:	6823      	ldr	r3, [r4, #0]
 8006fca:	b103      	cbz	r3, 8006fce <_sbrk_r+0x1a>
 8006fcc:	602b      	str	r3, [r5, #0]
 8006fce:	bd38      	pop	{r3, r4, r5, pc}
 8006fd0:	2000192c 	.word	0x2000192c

08006fd4 <strcat>:
 8006fd4:	4603      	mov	r3, r0
 8006fd6:	b510      	push	{r4, lr}
 8006fd8:	781a      	ldrb	r2, [r3, #0]
 8006fda:	1c5c      	adds	r4, r3, #1
 8006fdc:	b93a      	cbnz	r2, 8006fee <strcat+0x1a>
 8006fde:	3b01      	subs	r3, #1
 8006fe0:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006fe4:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006fe8:	2a00      	cmp	r2, #0
 8006fea:	d1f9      	bne.n	8006fe0 <strcat+0xc>
 8006fec:	bd10      	pop	{r4, pc}
 8006fee:	4623      	mov	r3, r4
 8006ff0:	e7f2      	b.n	8006fd8 <strcat+0x4>

08006ff2 <strncmp>:
 8006ff2:	b510      	push	{r4, lr}
 8006ff4:	b16a      	cbz	r2, 8007012 <strncmp+0x20>
 8006ff6:	3901      	subs	r1, #1
 8006ff8:	1884      	adds	r4, r0, r2
 8006ffa:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006ffe:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007002:	4293      	cmp	r3, r2
 8007004:	d103      	bne.n	800700e <strncmp+0x1c>
 8007006:	42a0      	cmp	r0, r4
 8007008:	d001      	beq.n	800700e <strncmp+0x1c>
 800700a:	2b00      	cmp	r3, #0
 800700c:	d1f5      	bne.n	8006ffa <strncmp+0x8>
 800700e:	1a98      	subs	r0, r3, r2
 8007010:	bd10      	pop	{r4, pc}
 8007012:	4610      	mov	r0, r2
 8007014:	e7fc      	b.n	8007010 <strncmp+0x1e>

08007016 <strncpy>:
 8007016:	b570      	push	{r4, r5, r6, lr}
 8007018:	4604      	mov	r4, r0
 800701a:	3901      	subs	r1, #1
 800701c:	b902      	cbnz	r2, 8007020 <strncpy+0xa>
 800701e:	bd70      	pop	{r4, r5, r6, pc}
 8007020:	4623      	mov	r3, r4
 8007022:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8007026:	1e56      	subs	r6, r2, #1
 8007028:	f803 5b01 	strb.w	r5, [r3], #1
 800702c:	b92d      	cbnz	r5, 800703a <strncpy+0x24>
 800702e:	4414      	add	r4, r2
 8007030:	42a3      	cmp	r3, r4
 8007032:	d0f4      	beq.n	800701e <strncpy+0x8>
 8007034:	f803 5b01 	strb.w	r5, [r3], #1
 8007038:	e7fa      	b.n	8007030 <strncpy+0x1a>
 800703a:	461c      	mov	r4, r3
 800703c:	4632      	mov	r2, r6
 800703e:	e7ed      	b.n	800701c <strncpy+0x6>

08007040 <strtok>:
 8007040:	4b13      	ldr	r3, [pc, #76]	; (8007090 <strtok+0x50>)
 8007042:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007046:	681d      	ldr	r5, [r3, #0]
 8007048:	4606      	mov	r6, r0
 800704a:	6dac      	ldr	r4, [r5, #88]	; 0x58
 800704c:	460f      	mov	r7, r1
 800704e:	b9b4      	cbnz	r4, 800707e <strtok+0x3e>
 8007050:	2050      	movs	r0, #80	; 0x50
 8007052:	f7ff fed7 	bl	8006e04 <malloc>
 8007056:	65a8      	str	r0, [r5, #88]	; 0x58
 8007058:	e9c0 4400 	strd	r4, r4, [r0]
 800705c:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8007060:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8007064:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8007068:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 800706c:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8007070:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8007074:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8007078:	6184      	str	r4, [r0, #24]
 800707a:	7704      	strb	r4, [r0, #28]
 800707c:	6244      	str	r4, [r0, #36]	; 0x24
 800707e:	6daa      	ldr	r2, [r5, #88]	; 0x58
 8007080:	4639      	mov	r1, r7
 8007082:	4630      	mov	r0, r6
 8007084:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007088:	2301      	movs	r3, #1
 800708a:	f000 b803 	b.w	8007094 <__strtok_r>
 800708e:	bf00      	nop
 8007090:	20000204 	.word	0x20000204

08007094 <__strtok_r>:
 8007094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007096:	b918      	cbnz	r0, 80070a0 <__strtok_r+0xc>
 8007098:	6810      	ldr	r0, [r2, #0]
 800709a:	b908      	cbnz	r0, 80070a0 <__strtok_r+0xc>
 800709c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800709e:	4620      	mov	r0, r4
 80070a0:	4604      	mov	r4, r0
 80070a2:	460f      	mov	r7, r1
 80070a4:	f814 5b01 	ldrb.w	r5, [r4], #1
 80070a8:	f817 6b01 	ldrb.w	r6, [r7], #1
 80070ac:	b91e      	cbnz	r6, 80070b6 <__strtok_r+0x22>
 80070ae:	b96d      	cbnz	r5, 80070cc <__strtok_r+0x38>
 80070b0:	6015      	str	r5, [r2, #0]
 80070b2:	4628      	mov	r0, r5
 80070b4:	e7f2      	b.n	800709c <__strtok_r+0x8>
 80070b6:	42b5      	cmp	r5, r6
 80070b8:	d1f6      	bne.n	80070a8 <__strtok_r+0x14>
 80070ba:	2b00      	cmp	r3, #0
 80070bc:	d1ef      	bne.n	800709e <__strtok_r+0xa>
 80070be:	6014      	str	r4, [r2, #0]
 80070c0:	7003      	strb	r3, [r0, #0]
 80070c2:	e7eb      	b.n	800709c <__strtok_r+0x8>
 80070c4:	462b      	mov	r3, r5
 80070c6:	e00d      	b.n	80070e4 <__strtok_r+0x50>
 80070c8:	b926      	cbnz	r6, 80070d4 <__strtok_r+0x40>
 80070ca:	461c      	mov	r4, r3
 80070cc:	4623      	mov	r3, r4
 80070ce:	460f      	mov	r7, r1
 80070d0:	f813 5b01 	ldrb.w	r5, [r3], #1
 80070d4:	f817 6b01 	ldrb.w	r6, [r7], #1
 80070d8:	42b5      	cmp	r5, r6
 80070da:	d1f5      	bne.n	80070c8 <__strtok_r+0x34>
 80070dc:	2d00      	cmp	r5, #0
 80070de:	d0f1      	beq.n	80070c4 <__strtok_r+0x30>
 80070e0:	2100      	movs	r1, #0
 80070e2:	7021      	strb	r1, [r4, #0]
 80070e4:	6013      	str	r3, [r2, #0]
 80070e6:	e7d9      	b.n	800709c <__strtok_r+0x8>

080070e8 <_strtol_l.isra.0>:
 80070e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80070ec:	4680      	mov	r8, r0
 80070ee:	4689      	mov	r9, r1
 80070f0:	4692      	mov	sl, r2
 80070f2:	461e      	mov	r6, r3
 80070f4:	460f      	mov	r7, r1
 80070f6:	463d      	mov	r5, r7
 80070f8:	9808      	ldr	r0, [sp, #32]
 80070fa:	f815 4b01 	ldrb.w	r4, [r5], #1
 80070fe:	f000 f8bf 	bl	8007280 <__locale_ctype_ptr_l>
 8007102:	4420      	add	r0, r4
 8007104:	7843      	ldrb	r3, [r0, #1]
 8007106:	f013 0308 	ands.w	r3, r3, #8
 800710a:	d132      	bne.n	8007172 <_strtol_l.isra.0+0x8a>
 800710c:	2c2d      	cmp	r4, #45	; 0x2d
 800710e:	d132      	bne.n	8007176 <_strtol_l.isra.0+0x8e>
 8007110:	2201      	movs	r2, #1
 8007112:	787c      	ldrb	r4, [r7, #1]
 8007114:	1cbd      	adds	r5, r7, #2
 8007116:	2e00      	cmp	r6, #0
 8007118:	d05d      	beq.n	80071d6 <_strtol_l.isra.0+0xee>
 800711a:	2e10      	cmp	r6, #16
 800711c:	d109      	bne.n	8007132 <_strtol_l.isra.0+0x4a>
 800711e:	2c30      	cmp	r4, #48	; 0x30
 8007120:	d107      	bne.n	8007132 <_strtol_l.isra.0+0x4a>
 8007122:	782b      	ldrb	r3, [r5, #0]
 8007124:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8007128:	2b58      	cmp	r3, #88	; 0x58
 800712a:	d14f      	bne.n	80071cc <_strtol_l.isra.0+0xe4>
 800712c:	2610      	movs	r6, #16
 800712e:	786c      	ldrb	r4, [r5, #1]
 8007130:	3502      	adds	r5, #2
 8007132:	2a00      	cmp	r2, #0
 8007134:	bf14      	ite	ne
 8007136:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 800713a:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 800713e:	2700      	movs	r7, #0
 8007140:	fbb1 fcf6 	udiv	ip, r1, r6
 8007144:	4638      	mov	r0, r7
 8007146:	fb06 1e1c 	mls	lr, r6, ip, r1
 800714a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800714e:	2b09      	cmp	r3, #9
 8007150:	d817      	bhi.n	8007182 <_strtol_l.isra.0+0x9a>
 8007152:	461c      	mov	r4, r3
 8007154:	42a6      	cmp	r6, r4
 8007156:	dd23      	ble.n	80071a0 <_strtol_l.isra.0+0xb8>
 8007158:	1c7b      	adds	r3, r7, #1
 800715a:	d007      	beq.n	800716c <_strtol_l.isra.0+0x84>
 800715c:	4584      	cmp	ip, r0
 800715e:	d31c      	bcc.n	800719a <_strtol_l.isra.0+0xb2>
 8007160:	d101      	bne.n	8007166 <_strtol_l.isra.0+0x7e>
 8007162:	45a6      	cmp	lr, r4
 8007164:	db19      	blt.n	800719a <_strtol_l.isra.0+0xb2>
 8007166:	2701      	movs	r7, #1
 8007168:	fb00 4006 	mla	r0, r0, r6, r4
 800716c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007170:	e7eb      	b.n	800714a <_strtol_l.isra.0+0x62>
 8007172:	462f      	mov	r7, r5
 8007174:	e7bf      	b.n	80070f6 <_strtol_l.isra.0+0xe>
 8007176:	2c2b      	cmp	r4, #43	; 0x2b
 8007178:	bf04      	itt	eq
 800717a:	1cbd      	addeq	r5, r7, #2
 800717c:	787c      	ldrbeq	r4, [r7, #1]
 800717e:	461a      	mov	r2, r3
 8007180:	e7c9      	b.n	8007116 <_strtol_l.isra.0+0x2e>
 8007182:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 8007186:	2b19      	cmp	r3, #25
 8007188:	d801      	bhi.n	800718e <_strtol_l.isra.0+0xa6>
 800718a:	3c37      	subs	r4, #55	; 0x37
 800718c:	e7e2      	b.n	8007154 <_strtol_l.isra.0+0x6c>
 800718e:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 8007192:	2b19      	cmp	r3, #25
 8007194:	d804      	bhi.n	80071a0 <_strtol_l.isra.0+0xb8>
 8007196:	3c57      	subs	r4, #87	; 0x57
 8007198:	e7dc      	b.n	8007154 <_strtol_l.isra.0+0x6c>
 800719a:	f04f 37ff 	mov.w	r7, #4294967295
 800719e:	e7e5      	b.n	800716c <_strtol_l.isra.0+0x84>
 80071a0:	1c7b      	adds	r3, r7, #1
 80071a2:	d108      	bne.n	80071b6 <_strtol_l.isra.0+0xce>
 80071a4:	2322      	movs	r3, #34	; 0x22
 80071a6:	4608      	mov	r0, r1
 80071a8:	f8c8 3000 	str.w	r3, [r8]
 80071ac:	f1ba 0f00 	cmp.w	sl, #0
 80071b0:	d107      	bne.n	80071c2 <_strtol_l.isra.0+0xda>
 80071b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80071b6:	b102      	cbz	r2, 80071ba <_strtol_l.isra.0+0xd2>
 80071b8:	4240      	negs	r0, r0
 80071ba:	f1ba 0f00 	cmp.w	sl, #0
 80071be:	d0f8      	beq.n	80071b2 <_strtol_l.isra.0+0xca>
 80071c0:	b10f      	cbz	r7, 80071c6 <_strtol_l.isra.0+0xde>
 80071c2:	f105 39ff 	add.w	r9, r5, #4294967295
 80071c6:	f8ca 9000 	str.w	r9, [sl]
 80071ca:	e7f2      	b.n	80071b2 <_strtol_l.isra.0+0xca>
 80071cc:	2430      	movs	r4, #48	; 0x30
 80071ce:	2e00      	cmp	r6, #0
 80071d0:	d1af      	bne.n	8007132 <_strtol_l.isra.0+0x4a>
 80071d2:	2608      	movs	r6, #8
 80071d4:	e7ad      	b.n	8007132 <_strtol_l.isra.0+0x4a>
 80071d6:	2c30      	cmp	r4, #48	; 0x30
 80071d8:	d0a3      	beq.n	8007122 <_strtol_l.isra.0+0x3a>
 80071da:	260a      	movs	r6, #10
 80071dc:	e7a9      	b.n	8007132 <_strtol_l.isra.0+0x4a>
	...

080071e0 <strtol>:
 80071e0:	4b08      	ldr	r3, [pc, #32]	; (8007204 <strtol+0x24>)
 80071e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80071e4:	681c      	ldr	r4, [r3, #0]
 80071e6:	4d08      	ldr	r5, [pc, #32]	; (8007208 <strtol+0x28>)
 80071e8:	6a23      	ldr	r3, [r4, #32]
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	bf08      	it	eq
 80071ee:	462b      	moveq	r3, r5
 80071f0:	9300      	str	r3, [sp, #0]
 80071f2:	4613      	mov	r3, r2
 80071f4:	460a      	mov	r2, r1
 80071f6:	4601      	mov	r1, r0
 80071f8:	4620      	mov	r0, r4
 80071fa:	f7ff ff75 	bl	80070e8 <_strtol_l.isra.0>
 80071fe:	b003      	add	sp, #12
 8007200:	bd30      	pop	{r4, r5, pc}
 8007202:	bf00      	nop
 8007204:	20000204 	.word	0x20000204
 8007208:	20000268 	.word	0x20000268

0800720c <_vsniprintf_r>:
 800720c:	b530      	push	{r4, r5, lr}
 800720e:	1e14      	subs	r4, r2, #0
 8007210:	4605      	mov	r5, r0
 8007212:	b09b      	sub	sp, #108	; 0x6c
 8007214:	4618      	mov	r0, r3
 8007216:	da05      	bge.n	8007224 <_vsniprintf_r+0x18>
 8007218:	238b      	movs	r3, #139	; 0x8b
 800721a:	f04f 30ff 	mov.w	r0, #4294967295
 800721e:	602b      	str	r3, [r5, #0]
 8007220:	b01b      	add	sp, #108	; 0x6c
 8007222:	bd30      	pop	{r4, r5, pc}
 8007224:	f44f 7302 	mov.w	r3, #520	; 0x208
 8007228:	f8ad 300c 	strh.w	r3, [sp, #12]
 800722c:	bf0c      	ite	eq
 800722e:	4623      	moveq	r3, r4
 8007230:	f104 33ff 	addne.w	r3, r4, #4294967295
 8007234:	9302      	str	r3, [sp, #8]
 8007236:	9305      	str	r3, [sp, #20]
 8007238:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800723c:	9100      	str	r1, [sp, #0]
 800723e:	9104      	str	r1, [sp, #16]
 8007240:	f8ad 300e 	strh.w	r3, [sp, #14]
 8007244:	4602      	mov	r2, r0
 8007246:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8007248:	4669      	mov	r1, sp
 800724a:	4628      	mov	r0, r5
 800724c:	f000 f88a 	bl	8007364 <_svfiprintf_r>
 8007250:	1c43      	adds	r3, r0, #1
 8007252:	bfbc      	itt	lt
 8007254:	238b      	movlt	r3, #139	; 0x8b
 8007256:	602b      	strlt	r3, [r5, #0]
 8007258:	2c00      	cmp	r4, #0
 800725a:	d0e1      	beq.n	8007220 <_vsniprintf_r+0x14>
 800725c:	2200      	movs	r2, #0
 800725e:	9b00      	ldr	r3, [sp, #0]
 8007260:	701a      	strb	r2, [r3, #0]
 8007262:	e7dd      	b.n	8007220 <_vsniprintf_r+0x14>

08007264 <vsniprintf>:
 8007264:	b507      	push	{r0, r1, r2, lr}
 8007266:	9300      	str	r3, [sp, #0]
 8007268:	4613      	mov	r3, r2
 800726a:	460a      	mov	r2, r1
 800726c:	4601      	mov	r1, r0
 800726e:	4803      	ldr	r0, [pc, #12]	; (800727c <vsniprintf+0x18>)
 8007270:	6800      	ldr	r0, [r0, #0]
 8007272:	f7ff ffcb 	bl	800720c <_vsniprintf_r>
 8007276:	b003      	add	sp, #12
 8007278:	f85d fb04 	ldr.w	pc, [sp], #4
 800727c:	20000204 	.word	0x20000204

08007280 <__locale_ctype_ptr_l>:
 8007280:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8007284:	4770      	bx	lr

08007286 <__ascii_mbtowc>:
 8007286:	b082      	sub	sp, #8
 8007288:	b901      	cbnz	r1, 800728c <__ascii_mbtowc+0x6>
 800728a:	a901      	add	r1, sp, #4
 800728c:	b142      	cbz	r2, 80072a0 <__ascii_mbtowc+0x1a>
 800728e:	b14b      	cbz	r3, 80072a4 <__ascii_mbtowc+0x1e>
 8007290:	7813      	ldrb	r3, [r2, #0]
 8007292:	600b      	str	r3, [r1, #0]
 8007294:	7812      	ldrb	r2, [r2, #0]
 8007296:	1c10      	adds	r0, r2, #0
 8007298:	bf18      	it	ne
 800729a:	2001      	movne	r0, #1
 800729c:	b002      	add	sp, #8
 800729e:	4770      	bx	lr
 80072a0:	4610      	mov	r0, r2
 80072a2:	e7fb      	b.n	800729c <__ascii_mbtowc+0x16>
 80072a4:	f06f 0001 	mvn.w	r0, #1
 80072a8:	e7f8      	b.n	800729c <__ascii_mbtowc+0x16>

080072aa <__malloc_lock>:
 80072aa:	4770      	bx	lr

080072ac <__malloc_unlock>:
 80072ac:	4770      	bx	lr

080072ae <__ssputs_r>:
 80072ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80072b2:	688e      	ldr	r6, [r1, #8]
 80072b4:	4682      	mov	sl, r0
 80072b6:	429e      	cmp	r6, r3
 80072b8:	460c      	mov	r4, r1
 80072ba:	4690      	mov	r8, r2
 80072bc:	4699      	mov	r9, r3
 80072be:	d837      	bhi.n	8007330 <__ssputs_r+0x82>
 80072c0:	898a      	ldrh	r2, [r1, #12]
 80072c2:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80072c6:	d031      	beq.n	800732c <__ssputs_r+0x7e>
 80072c8:	2302      	movs	r3, #2
 80072ca:	6825      	ldr	r5, [r4, #0]
 80072cc:	6909      	ldr	r1, [r1, #16]
 80072ce:	1a6f      	subs	r7, r5, r1
 80072d0:	6965      	ldr	r5, [r4, #20]
 80072d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80072d6:	fb95 f5f3 	sdiv	r5, r5, r3
 80072da:	f109 0301 	add.w	r3, r9, #1
 80072de:	443b      	add	r3, r7
 80072e0:	429d      	cmp	r5, r3
 80072e2:	bf38      	it	cc
 80072e4:	461d      	movcc	r5, r3
 80072e6:	0553      	lsls	r3, r2, #21
 80072e8:	d530      	bpl.n	800734c <__ssputs_r+0x9e>
 80072ea:	4629      	mov	r1, r5
 80072ec:	f7ff fe08 	bl	8006f00 <_malloc_r>
 80072f0:	4606      	mov	r6, r0
 80072f2:	b950      	cbnz	r0, 800730a <__ssputs_r+0x5c>
 80072f4:	230c      	movs	r3, #12
 80072f6:	f04f 30ff 	mov.w	r0, #4294967295
 80072fa:	f8ca 3000 	str.w	r3, [sl]
 80072fe:	89a3      	ldrh	r3, [r4, #12]
 8007300:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007304:	81a3      	strh	r3, [r4, #12]
 8007306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800730a:	463a      	mov	r2, r7
 800730c:	6921      	ldr	r1, [r4, #16]
 800730e:	f7ff fd89 	bl	8006e24 <memcpy>
 8007312:	89a3      	ldrh	r3, [r4, #12]
 8007314:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8007318:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800731c:	81a3      	strh	r3, [r4, #12]
 800731e:	6126      	str	r6, [r4, #16]
 8007320:	443e      	add	r6, r7
 8007322:	6026      	str	r6, [r4, #0]
 8007324:	464e      	mov	r6, r9
 8007326:	6165      	str	r5, [r4, #20]
 8007328:	1bed      	subs	r5, r5, r7
 800732a:	60a5      	str	r5, [r4, #8]
 800732c:	454e      	cmp	r6, r9
 800732e:	d900      	bls.n	8007332 <__ssputs_r+0x84>
 8007330:	464e      	mov	r6, r9
 8007332:	4632      	mov	r2, r6
 8007334:	4641      	mov	r1, r8
 8007336:	6820      	ldr	r0, [r4, #0]
 8007338:	f000 faaf 	bl	800789a <memmove>
 800733c:	68a3      	ldr	r3, [r4, #8]
 800733e:	2000      	movs	r0, #0
 8007340:	1b9b      	subs	r3, r3, r6
 8007342:	60a3      	str	r3, [r4, #8]
 8007344:	6823      	ldr	r3, [r4, #0]
 8007346:	441e      	add	r6, r3
 8007348:	6026      	str	r6, [r4, #0]
 800734a:	e7dc      	b.n	8007306 <__ssputs_r+0x58>
 800734c:	462a      	mov	r2, r5
 800734e:	f000 fabd 	bl	80078cc <_realloc_r>
 8007352:	4606      	mov	r6, r0
 8007354:	2800      	cmp	r0, #0
 8007356:	d1e2      	bne.n	800731e <__ssputs_r+0x70>
 8007358:	6921      	ldr	r1, [r4, #16]
 800735a:	4650      	mov	r0, sl
 800735c:	f7ff fd84 	bl	8006e68 <_free_r>
 8007360:	e7c8      	b.n	80072f4 <__ssputs_r+0x46>
	...

08007364 <_svfiprintf_r>:
 8007364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007368:	461d      	mov	r5, r3
 800736a:	898b      	ldrh	r3, [r1, #12]
 800736c:	b09d      	sub	sp, #116	; 0x74
 800736e:	061f      	lsls	r7, r3, #24
 8007370:	4680      	mov	r8, r0
 8007372:	460c      	mov	r4, r1
 8007374:	4616      	mov	r6, r2
 8007376:	d50f      	bpl.n	8007398 <_svfiprintf_r+0x34>
 8007378:	690b      	ldr	r3, [r1, #16]
 800737a:	b96b      	cbnz	r3, 8007398 <_svfiprintf_r+0x34>
 800737c:	2140      	movs	r1, #64	; 0x40
 800737e:	f7ff fdbf 	bl	8006f00 <_malloc_r>
 8007382:	6020      	str	r0, [r4, #0]
 8007384:	6120      	str	r0, [r4, #16]
 8007386:	b928      	cbnz	r0, 8007394 <_svfiprintf_r+0x30>
 8007388:	230c      	movs	r3, #12
 800738a:	f8c8 3000 	str.w	r3, [r8]
 800738e:	f04f 30ff 	mov.w	r0, #4294967295
 8007392:	e0c8      	b.n	8007526 <_svfiprintf_r+0x1c2>
 8007394:	2340      	movs	r3, #64	; 0x40
 8007396:	6163      	str	r3, [r4, #20]
 8007398:	2300      	movs	r3, #0
 800739a:	9309      	str	r3, [sp, #36]	; 0x24
 800739c:	2320      	movs	r3, #32
 800739e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80073a2:	2330      	movs	r3, #48	; 0x30
 80073a4:	f04f 0b01 	mov.w	fp, #1
 80073a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80073ac:	9503      	str	r5, [sp, #12]
 80073ae:	4637      	mov	r7, r6
 80073b0:	463d      	mov	r5, r7
 80073b2:	f815 3b01 	ldrb.w	r3, [r5], #1
 80073b6:	b10b      	cbz	r3, 80073bc <_svfiprintf_r+0x58>
 80073b8:	2b25      	cmp	r3, #37	; 0x25
 80073ba:	d13e      	bne.n	800743a <_svfiprintf_r+0xd6>
 80073bc:	ebb7 0a06 	subs.w	sl, r7, r6
 80073c0:	d00b      	beq.n	80073da <_svfiprintf_r+0x76>
 80073c2:	4653      	mov	r3, sl
 80073c4:	4632      	mov	r2, r6
 80073c6:	4621      	mov	r1, r4
 80073c8:	4640      	mov	r0, r8
 80073ca:	f7ff ff70 	bl	80072ae <__ssputs_r>
 80073ce:	3001      	adds	r0, #1
 80073d0:	f000 80a4 	beq.w	800751c <_svfiprintf_r+0x1b8>
 80073d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80073d6:	4453      	add	r3, sl
 80073d8:	9309      	str	r3, [sp, #36]	; 0x24
 80073da:	783b      	ldrb	r3, [r7, #0]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	f000 809d 	beq.w	800751c <_svfiprintf_r+0x1b8>
 80073e2:	2300      	movs	r3, #0
 80073e4:	f04f 32ff 	mov.w	r2, #4294967295
 80073e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80073ec:	9304      	str	r3, [sp, #16]
 80073ee:	9307      	str	r3, [sp, #28]
 80073f0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80073f4:	931a      	str	r3, [sp, #104]	; 0x68
 80073f6:	462f      	mov	r7, r5
 80073f8:	2205      	movs	r2, #5
 80073fa:	f817 1b01 	ldrb.w	r1, [r7], #1
 80073fe:	4850      	ldr	r0, [pc, #320]	; (8007540 <_svfiprintf_r+0x1dc>)
 8007400:	f000 fa3d 	bl	800787e <memchr>
 8007404:	9b04      	ldr	r3, [sp, #16]
 8007406:	b9d0      	cbnz	r0, 800743e <_svfiprintf_r+0xda>
 8007408:	06d9      	lsls	r1, r3, #27
 800740a:	bf44      	itt	mi
 800740c:	2220      	movmi	r2, #32
 800740e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8007412:	071a      	lsls	r2, r3, #28
 8007414:	bf44      	itt	mi
 8007416:	222b      	movmi	r2, #43	; 0x2b
 8007418:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800741c:	782a      	ldrb	r2, [r5, #0]
 800741e:	2a2a      	cmp	r2, #42	; 0x2a
 8007420:	d015      	beq.n	800744e <_svfiprintf_r+0xea>
 8007422:	462f      	mov	r7, r5
 8007424:	2000      	movs	r0, #0
 8007426:	250a      	movs	r5, #10
 8007428:	9a07      	ldr	r2, [sp, #28]
 800742a:	4639      	mov	r1, r7
 800742c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007430:	3b30      	subs	r3, #48	; 0x30
 8007432:	2b09      	cmp	r3, #9
 8007434:	d94d      	bls.n	80074d2 <_svfiprintf_r+0x16e>
 8007436:	b1b8      	cbz	r0, 8007468 <_svfiprintf_r+0x104>
 8007438:	e00f      	b.n	800745a <_svfiprintf_r+0xf6>
 800743a:	462f      	mov	r7, r5
 800743c:	e7b8      	b.n	80073b0 <_svfiprintf_r+0x4c>
 800743e:	4a40      	ldr	r2, [pc, #256]	; (8007540 <_svfiprintf_r+0x1dc>)
 8007440:	463d      	mov	r5, r7
 8007442:	1a80      	subs	r0, r0, r2
 8007444:	fa0b f000 	lsl.w	r0, fp, r0
 8007448:	4318      	orrs	r0, r3
 800744a:	9004      	str	r0, [sp, #16]
 800744c:	e7d3      	b.n	80073f6 <_svfiprintf_r+0x92>
 800744e:	9a03      	ldr	r2, [sp, #12]
 8007450:	1d11      	adds	r1, r2, #4
 8007452:	6812      	ldr	r2, [r2, #0]
 8007454:	9103      	str	r1, [sp, #12]
 8007456:	2a00      	cmp	r2, #0
 8007458:	db01      	blt.n	800745e <_svfiprintf_r+0xfa>
 800745a:	9207      	str	r2, [sp, #28]
 800745c:	e004      	b.n	8007468 <_svfiprintf_r+0x104>
 800745e:	4252      	negs	r2, r2
 8007460:	f043 0302 	orr.w	r3, r3, #2
 8007464:	9207      	str	r2, [sp, #28]
 8007466:	9304      	str	r3, [sp, #16]
 8007468:	783b      	ldrb	r3, [r7, #0]
 800746a:	2b2e      	cmp	r3, #46	; 0x2e
 800746c:	d10c      	bne.n	8007488 <_svfiprintf_r+0x124>
 800746e:	787b      	ldrb	r3, [r7, #1]
 8007470:	2b2a      	cmp	r3, #42	; 0x2a
 8007472:	d133      	bne.n	80074dc <_svfiprintf_r+0x178>
 8007474:	9b03      	ldr	r3, [sp, #12]
 8007476:	3702      	adds	r7, #2
 8007478:	1d1a      	adds	r2, r3, #4
 800747a:	681b      	ldr	r3, [r3, #0]
 800747c:	9203      	str	r2, [sp, #12]
 800747e:	2b00      	cmp	r3, #0
 8007480:	bfb8      	it	lt
 8007482:	f04f 33ff 	movlt.w	r3, #4294967295
 8007486:	9305      	str	r3, [sp, #20]
 8007488:	4d2e      	ldr	r5, [pc, #184]	; (8007544 <_svfiprintf_r+0x1e0>)
 800748a:	2203      	movs	r2, #3
 800748c:	7839      	ldrb	r1, [r7, #0]
 800748e:	4628      	mov	r0, r5
 8007490:	f000 f9f5 	bl	800787e <memchr>
 8007494:	b138      	cbz	r0, 80074a6 <_svfiprintf_r+0x142>
 8007496:	2340      	movs	r3, #64	; 0x40
 8007498:	1b40      	subs	r0, r0, r5
 800749a:	fa03 f000 	lsl.w	r0, r3, r0
 800749e:	9b04      	ldr	r3, [sp, #16]
 80074a0:	3701      	adds	r7, #1
 80074a2:	4303      	orrs	r3, r0
 80074a4:	9304      	str	r3, [sp, #16]
 80074a6:	7839      	ldrb	r1, [r7, #0]
 80074a8:	2206      	movs	r2, #6
 80074aa:	4827      	ldr	r0, [pc, #156]	; (8007548 <_svfiprintf_r+0x1e4>)
 80074ac:	1c7e      	adds	r6, r7, #1
 80074ae:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80074b2:	f000 f9e4 	bl	800787e <memchr>
 80074b6:	2800      	cmp	r0, #0
 80074b8:	d038      	beq.n	800752c <_svfiprintf_r+0x1c8>
 80074ba:	4b24      	ldr	r3, [pc, #144]	; (800754c <_svfiprintf_r+0x1e8>)
 80074bc:	bb13      	cbnz	r3, 8007504 <_svfiprintf_r+0x1a0>
 80074be:	9b03      	ldr	r3, [sp, #12]
 80074c0:	3307      	adds	r3, #7
 80074c2:	f023 0307 	bic.w	r3, r3, #7
 80074c6:	3308      	adds	r3, #8
 80074c8:	9303      	str	r3, [sp, #12]
 80074ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074cc:	444b      	add	r3, r9
 80074ce:	9309      	str	r3, [sp, #36]	; 0x24
 80074d0:	e76d      	b.n	80073ae <_svfiprintf_r+0x4a>
 80074d2:	fb05 3202 	mla	r2, r5, r2, r3
 80074d6:	2001      	movs	r0, #1
 80074d8:	460f      	mov	r7, r1
 80074da:	e7a6      	b.n	800742a <_svfiprintf_r+0xc6>
 80074dc:	2300      	movs	r3, #0
 80074de:	250a      	movs	r5, #10
 80074e0:	4619      	mov	r1, r3
 80074e2:	3701      	adds	r7, #1
 80074e4:	9305      	str	r3, [sp, #20]
 80074e6:	4638      	mov	r0, r7
 80074e8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80074ec:	3a30      	subs	r2, #48	; 0x30
 80074ee:	2a09      	cmp	r2, #9
 80074f0:	d903      	bls.n	80074fa <_svfiprintf_r+0x196>
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d0c8      	beq.n	8007488 <_svfiprintf_r+0x124>
 80074f6:	9105      	str	r1, [sp, #20]
 80074f8:	e7c6      	b.n	8007488 <_svfiprintf_r+0x124>
 80074fa:	fb05 2101 	mla	r1, r5, r1, r2
 80074fe:	2301      	movs	r3, #1
 8007500:	4607      	mov	r7, r0
 8007502:	e7f0      	b.n	80074e6 <_svfiprintf_r+0x182>
 8007504:	ab03      	add	r3, sp, #12
 8007506:	9300      	str	r3, [sp, #0]
 8007508:	4622      	mov	r2, r4
 800750a:	4b11      	ldr	r3, [pc, #68]	; (8007550 <_svfiprintf_r+0x1ec>)
 800750c:	a904      	add	r1, sp, #16
 800750e:	4640      	mov	r0, r8
 8007510:	f3af 8000 	nop.w
 8007514:	f1b0 3fff 	cmp.w	r0, #4294967295
 8007518:	4681      	mov	r9, r0
 800751a:	d1d6      	bne.n	80074ca <_svfiprintf_r+0x166>
 800751c:	89a3      	ldrh	r3, [r4, #12]
 800751e:	065b      	lsls	r3, r3, #25
 8007520:	f53f af35 	bmi.w	800738e <_svfiprintf_r+0x2a>
 8007524:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007526:	b01d      	add	sp, #116	; 0x74
 8007528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800752c:	ab03      	add	r3, sp, #12
 800752e:	9300      	str	r3, [sp, #0]
 8007530:	4622      	mov	r2, r4
 8007532:	4b07      	ldr	r3, [pc, #28]	; (8007550 <_svfiprintf_r+0x1ec>)
 8007534:	a904      	add	r1, sp, #16
 8007536:	4640      	mov	r0, r8
 8007538:	f000 f882 	bl	8007640 <_printf_i>
 800753c:	e7ea      	b.n	8007514 <_svfiprintf_r+0x1b0>
 800753e:	bf00      	nop
 8007540:	08008b50 	.word	0x08008b50
 8007544:	08008b56 	.word	0x08008b56
 8007548:	08008b5a 	.word	0x08008b5a
 800754c:	00000000 	.word	0x00000000
 8007550:	080072af 	.word	0x080072af

08007554 <_printf_common>:
 8007554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007558:	4691      	mov	r9, r2
 800755a:	461f      	mov	r7, r3
 800755c:	688a      	ldr	r2, [r1, #8]
 800755e:	690b      	ldr	r3, [r1, #16]
 8007560:	4606      	mov	r6, r0
 8007562:	4293      	cmp	r3, r2
 8007564:	bfb8      	it	lt
 8007566:	4613      	movlt	r3, r2
 8007568:	f8c9 3000 	str.w	r3, [r9]
 800756c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007570:	460c      	mov	r4, r1
 8007572:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007576:	b112      	cbz	r2, 800757e <_printf_common+0x2a>
 8007578:	3301      	adds	r3, #1
 800757a:	f8c9 3000 	str.w	r3, [r9]
 800757e:	6823      	ldr	r3, [r4, #0]
 8007580:	0699      	lsls	r1, r3, #26
 8007582:	bf42      	ittt	mi
 8007584:	f8d9 3000 	ldrmi.w	r3, [r9]
 8007588:	3302      	addmi	r3, #2
 800758a:	f8c9 3000 	strmi.w	r3, [r9]
 800758e:	6825      	ldr	r5, [r4, #0]
 8007590:	f015 0506 	ands.w	r5, r5, #6
 8007594:	d107      	bne.n	80075a6 <_printf_common+0x52>
 8007596:	f104 0a19 	add.w	sl, r4, #25
 800759a:	68e3      	ldr	r3, [r4, #12]
 800759c:	f8d9 2000 	ldr.w	r2, [r9]
 80075a0:	1a9b      	subs	r3, r3, r2
 80075a2:	42ab      	cmp	r3, r5
 80075a4:	dc29      	bgt.n	80075fa <_printf_common+0xa6>
 80075a6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80075aa:	6822      	ldr	r2, [r4, #0]
 80075ac:	3300      	adds	r3, #0
 80075ae:	bf18      	it	ne
 80075b0:	2301      	movne	r3, #1
 80075b2:	0692      	lsls	r2, r2, #26
 80075b4:	d42e      	bmi.n	8007614 <_printf_common+0xc0>
 80075b6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80075ba:	4639      	mov	r1, r7
 80075bc:	4630      	mov	r0, r6
 80075be:	47c0      	blx	r8
 80075c0:	3001      	adds	r0, #1
 80075c2:	d021      	beq.n	8007608 <_printf_common+0xb4>
 80075c4:	6823      	ldr	r3, [r4, #0]
 80075c6:	68e5      	ldr	r5, [r4, #12]
 80075c8:	f003 0306 	and.w	r3, r3, #6
 80075cc:	2b04      	cmp	r3, #4
 80075ce:	bf18      	it	ne
 80075d0:	2500      	movne	r5, #0
 80075d2:	f8d9 2000 	ldr.w	r2, [r9]
 80075d6:	f04f 0900 	mov.w	r9, #0
 80075da:	bf08      	it	eq
 80075dc:	1aad      	subeq	r5, r5, r2
 80075de:	68a3      	ldr	r3, [r4, #8]
 80075e0:	6922      	ldr	r2, [r4, #16]
 80075e2:	bf08      	it	eq
 80075e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80075e8:	4293      	cmp	r3, r2
 80075ea:	bfc4      	itt	gt
 80075ec:	1a9b      	subgt	r3, r3, r2
 80075ee:	18ed      	addgt	r5, r5, r3
 80075f0:	341a      	adds	r4, #26
 80075f2:	454d      	cmp	r5, r9
 80075f4:	d11a      	bne.n	800762c <_printf_common+0xd8>
 80075f6:	2000      	movs	r0, #0
 80075f8:	e008      	b.n	800760c <_printf_common+0xb8>
 80075fa:	2301      	movs	r3, #1
 80075fc:	4652      	mov	r2, sl
 80075fe:	4639      	mov	r1, r7
 8007600:	4630      	mov	r0, r6
 8007602:	47c0      	blx	r8
 8007604:	3001      	adds	r0, #1
 8007606:	d103      	bne.n	8007610 <_printf_common+0xbc>
 8007608:	f04f 30ff 	mov.w	r0, #4294967295
 800760c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007610:	3501      	adds	r5, #1
 8007612:	e7c2      	b.n	800759a <_printf_common+0x46>
 8007614:	2030      	movs	r0, #48	; 0x30
 8007616:	18e1      	adds	r1, r4, r3
 8007618:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800761c:	1c5a      	adds	r2, r3, #1
 800761e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007622:	4422      	add	r2, r4
 8007624:	3302      	adds	r3, #2
 8007626:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800762a:	e7c4      	b.n	80075b6 <_printf_common+0x62>
 800762c:	2301      	movs	r3, #1
 800762e:	4622      	mov	r2, r4
 8007630:	4639      	mov	r1, r7
 8007632:	4630      	mov	r0, r6
 8007634:	47c0      	blx	r8
 8007636:	3001      	adds	r0, #1
 8007638:	d0e6      	beq.n	8007608 <_printf_common+0xb4>
 800763a:	f109 0901 	add.w	r9, r9, #1
 800763e:	e7d8      	b.n	80075f2 <_printf_common+0x9e>

08007640 <_printf_i>:
 8007640:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007644:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8007648:	460c      	mov	r4, r1
 800764a:	7e09      	ldrb	r1, [r1, #24]
 800764c:	b085      	sub	sp, #20
 800764e:	296e      	cmp	r1, #110	; 0x6e
 8007650:	4617      	mov	r7, r2
 8007652:	4606      	mov	r6, r0
 8007654:	4698      	mov	r8, r3
 8007656:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007658:	f000 80b3 	beq.w	80077c2 <_printf_i+0x182>
 800765c:	d822      	bhi.n	80076a4 <_printf_i+0x64>
 800765e:	2963      	cmp	r1, #99	; 0x63
 8007660:	d036      	beq.n	80076d0 <_printf_i+0x90>
 8007662:	d80a      	bhi.n	800767a <_printf_i+0x3a>
 8007664:	2900      	cmp	r1, #0
 8007666:	f000 80b9 	beq.w	80077dc <_printf_i+0x19c>
 800766a:	2958      	cmp	r1, #88	; 0x58
 800766c:	f000 8083 	beq.w	8007776 <_printf_i+0x136>
 8007670:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007674:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8007678:	e032      	b.n	80076e0 <_printf_i+0xa0>
 800767a:	2964      	cmp	r1, #100	; 0x64
 800767c:	d001      	beq.n	8007682 <_printf_i+0x42>
 800767e:	2969      	cmp	r1, #105	; 0x69
 8007680:	d1f6      	bne.n	8007670 <_printf_i+0x30>
 8007682:	6820      	ldr	r0, [r4, #0]
 8007684:	6813      	ldr	r3, [r2, #0]
 8007686:	0605      	lsls	r5, r0, #24
 8007688:	f103 0104 	add.w	r1, r3, #4
 800768c:	d52a      	bpl.n	80076e4 <_printf_i+0xa4>
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	6011      	str	r1, [r2, #0]
 8007692:	2b00      	cmp	r3, #0
 8007694:	da03      	bge.n	800769e <_printf_i+0x5e>
 8007696:	222d      	movs	r2, #45	; 0x2d
 8007698:	425b      	negs	r3, r3
 800769a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800769e:	486f      	ldr	r0, [pc, #444]	; (800785c <_printf_i+0x21c>)
 80076a0:	220a      	movs	r2, #10
 80076a2:	e039      	b.n	8007718 <_printf_i+0xd8>
 80076a4:	2973      	cmp	r1, #115	; 0x73
 80076a6:	f000 809d 	beq.w	80077e4 <_printf_i+0x1a4>
 80076aa:	d808      	bhi.n	80076be <_printf_i+0x7e>
 80076ac:	296f      	cmp	r1, #111	; 0x6f
 80076ae:	d020      	beq.n	80076f2 <_printf_i+0xb2>
 80076b0:	2970      	cmp	r1, #112	; 0x70
 80076b2:	d1dd      	bne.n	8007670 <_printf_i+0x30>
 80076b4:	6823      	ldr	r3, [r4, #0]
 80076b6:	f043 0320 	orr.w	r3, r3, #32
 80076ba:	6023      	str	r3, [r4, #0]
 80076bc:	e003      	b.n	80076c6 <_printf_i+0x86>
 80076be:	2975      	cmp	r1, #117	; 0x75
 80076c0:	d017      	beq.n	80076f2 <_printf_i+0xb2>
 80076c2:	2978      	cmp	r1, #120	; 0x78
 80076c4:	d1d4      	bne.n	8007670 <_printf_i+0x30>
 80076c6:	2378      	movs	r3, #120	; 0x78
 80076c8:	4865      	ldr	r0, [pc, #404]	; (8007860 <_printf_i+0x220>)
 80076ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80076ce:	e055      	b.n	800777c <_printf_i+0x13c>
 80076d0:	6813      	ldr	r3, [r2, #0]
 80076d2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80076d6:	1d19      	adds	r1, r3, #4
 80076d8:	681b      	ldr	r3, [r3, #0]
 80076da:	6011      	str	r1, [r2, #0]
 80076dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80076e0:	2301      	movs	r3, #1
 80076e2:	e08c      	b.n	80077fe <_printf_i+0x1be>
 80076e4:	681b      	ldr	r3, [r3, #0]
 80076e6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80076ea:	6011      	str	r1, [r2, #0]
 80076ec:	bf18      	it	ne
 80076ee:	b21b      	sxthne	r3, r3
 80076f0:	e7cf      	b.n	8007692 <_printf_i+0x52>
 80076f2:	6813      	ldr	r3, [r2, #0]
 80076f4:	6825      	ldr	r5, [r4, #0]
 80076f6:	1d18      	adds	r0, r3, #4
 80076f8:	6010      	str	r0, [r2, #0]
 80076fa:	0628      	lsls	r0, r5, #24
 80076fc:	d501      	bpl.n	8007702 <_printf_i+0xc2>
 80076fe:	681b      	ldr	r3, [r3, #0]
 8007700:	e002      	b.n	8007708 <_printf_i+0xc8>
 8007702:	0668      	lsls	r0, r5, #25
 8007704:	d5fb      	bpl.n	80076fe <_printf_i+0xbe>
 8007706:	881b      	ldrh	r3, [r3, #0]
 8007708:	296f      	cmp	r1, #111	; 0x6f
 800770a:	bf14      	ite	ne
 800770c:	220a      	movne	r2, #10
 800770e:	2208      	moveq	r2, #8
 8007710:	4852      	ldr	r0, [pc, #328]	; (800785c <_printf_i+0x21c>)
 8007712:	2100      	movs	r1, #0
 8007714:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007718:	6865      	ldr	r5, [r4, #4]
 800771a:	2d00      	cmp	r5, #0
 800771c:	60a5      	str	r5, [r4, #8]
 800771e:	f2c0 8095 	blt.w	800784c <_printf_i+0x20c>
 8007722:	6821      	ldr	r1, [r4, #0]
 8007724:	f021 0104 	bic.w	r1, r1, #4
 8007728:	6021      	str	r1, [r4, #0]
 800772a:	2b00      	cmp	r3, #0
 800772c:	d13d      	bne.n	80077aa <_printf_i+0x16a>
 800772e:	2d00      	cmp	r5, #0
 8007730:	f040 808e 	bne.w	8007850 <_printf_i+0x210>
 8007734:	4665      	mov	r5, ip
 8007736:	2a08      	cmp	r2, #8
 8007738:	d10b      	bne.n	8007752 <_printf_i+0x112>
 800773a:	6823      	ldr	r3, [r4, #0]
 800773c:	07db      	lsls	r3, r3, #31
 800773e:	d508      	bpl.n	8007752 <_printf_i+0x112>
 8007740:	6923      	ldr	r3, [r4, #16]
 8007742:	6862      	ldr	r2, [r4, #4]
 8007744:	429a      	cmp	r2, r3
 8007746:	bfde      	ittt	le
 8007748:	2330      	movle	r3, #48	; 0x30
 800774a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800774e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8007752:	ebac 0305 	sub.w	r3, ip, r5
 8007756:	6123      	str	r3, [r4, #16]
 8007758:	f8cd 8000 	str.w	r8, [sp]
 800775c:	463b      	mov	r3, r7
 800775e:	aa03      	add	r2, sp, #12
 8007760:	4621      	mov	r1, r4
 8007762:	4630      	mov	r0, r6
 8007764:	f7ff fef6 	bl	8007554 <_printf_common>
 8007768:	3001      	adds	r0, #1
 800776a:	d14d      	bne.n	8007808 <_printf_i+0x1c8>
 800776c:	f04f 30ff 	mov.w	r0, #4294967295
 8007770:	b005      	add	sp, #20
 8007772:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007776:	4839      	ldr	r0, [pc, #228]	; (800785c <_printf_i+0x21c>)
 8007778:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800777c:	6813      	ldr	r3, [r2, #0]
 800777e:	6821      	ldr	r1, [r4, #0]
 8007780:	1d1d      	adds	r5, r3, #4
 8007782:	681b      	ldr	r3, [r3, #0]
 8007784:	6015      	str	r5, [r2, #0]
 8007786:	060a      	lsls	r2, r1, #24
 8007788:	d50b      	bpl.n	80077a2 <_printf_i+0x162>
 800778a:	07ca      	lsls	r2, r1, #31
 800778c:	bf44      	itt	mi
 800778e:	f041 0120 	orrmi.w	r1, r1, #32
 8007792:	6021      	strmi	r1, [r4, #0]
 8007794:	b91b      	cbnz	r3, 800779e <_printf_i+0x15e>
 8007796:	6822      	ldr	r2, [r4, #0]
 8007798:	f022 0220 	bic.w	r2, r2, #32
 800779c:	6022      	str	r2, [r4, #0]
 800779e:	2210      	movs	r2, #16
 80077a0:	e7b7      	b.n	8007712 <_printf_i+0xd2>
 80077a2:	064d      	lsls	r5, r1, #25
 80077a4:	bf48      	it	mi
 80077a6:	b29b      	uxthmi	r3, r3
 80077a8:	e7ef      	b.n	800778a <_printf_i+0x14a>
 80077aa:	4665      	mov	r5, ip
 80077ac:	fbb3 f1f2 	udiv	r1, r3, r2
 80077b0:	fb02 3311 	mls	r3, r2, r1, r3
 80077b4:	5cc3      	ldrb	r3, [r0, r3]
 80077b6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80077ba:	460b      	mov	r3, r1
 80077bc:	2900      	cmp	r1, #0
 80077be:	d1f5      	bne.n	80077ac <_printf_i+0x16c>
 80077c0:	e7b9      	b.n	8007736 <_printf_i+0xf6>
 80077c2:	6813      	ldr	r3, [r2, #0]
 80077c4:	6825      	ldr	r5, [r4, #0]
 80077c6:	1d18      	adds	r0, r3, #4
 80077c8:	6961      	ldr	r1, [r4, #20]
 80077ca:	6010      	str	r0, [r2, #0]
 80077cc:	0628      	lsls	r0, r5, #24
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	d501      	bpl.n	80077d6 <_printf_i+0x196>
 80077d2:	6019      	str	r1, [r3, #0]
 80077d4:	e002      	b.n	80077dc <_printf_i+0x19c>
 80077d6:	066a      	lsls	r2, r5, #25
 80077d8:	d5fb      	bpl.n	80077d2 <_printf_i+0x192>
 80077da:	8019      	strh	r1, [r3, #0]
 80077dc:	2300      	movs	r3, #0
 80077de:	4665      	mov	r5, ip
 80077e0:	6123      	str	r3, [r4, #16]
 80077e2:	e7b9      	b.n	8007758 <_printf_i+0x118>
 80077e4:	6813      	ldr	r3, [r2, #0]
 80077e6:	1d19      	adds	r1, r3, #4
 80077e8:	6011      	str	r1, [r2, #0]
 80077ea:	681d      	ldr	r5, [r3, #0]
 80077ec:	6862      	ldr	r2, [r4, #4]
 80077ee:	2100      	movs	r1, #0
 80077f0:	4628      	mov	r0, r5
 80077f2:	f000 f844 	bl	800787e <memchr>
 80077f6:	b108      	cbz	r0, 80077fc <_printf_i+0x1bc>
 80077f8:	1b40      	subs	r0, r0, r5
 80077fa:	6060      	str	r0, [r4, #4]
 80077fc:	6863      	ldr	r3, [r4, #4]
 80077fe:	6123      	str	r3, [r4, #16]
 8007800:	2300      	movs	r3, #0
 8007802:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007806:	e7a7      	b.n	8007758 <_printf_i+0x118>
 8007808:	6923      	ldr	r3, [r4, #16]
 800780a:	462a      	mov	r2, r5
 800780c:	4639      	mov	r1, r7
 800780e:	4630      	mov	r0, r6
 8007810:	47c0      	blx	r8
 8007812:	3001      	adds	r0, #1
 8007814:	d0aa      	beq.n	800776c <_printf_i+0x12c>
 8007816:	6823      	ldr	r3, [r4, #0]
 8007818:	079b      	lsls	r3, r3, #30
 800781a:	d413      	bmi.n	8007844 <_printf_i+0x204>
 800781c:	68e0      	ldr	r0, [r4, #12]
 800781e:	9b03      	ldr	r3, [sp, #12]
 8007820:	4298      	cmp	r0, r3
 8007822:	bfb8      	it	lt
 8007824:	4618      	movlt	r0, r3
 8007826:	e7a3      	b.n	8007770 <_printf_i+0x130>
 8007828:	2301      	movs	r3, #1
 800782a:	464a      	mov	r2, r9
 800782c:	4639      	mov	r1, r7
 800782e:	4630      	mov	r0, r6
 8007830:	47c0      	blx	r8
 8007832:	3001      	adds	r0, #1
 8007834:	d09a      	beq.n	800776c <_printf_i+0x12c>
 8007836:	3501      	adds	r5, #1
 8007838:	68e3      	ldr	r3, [r4, #12]
 800783a:	9a03      	ldr	r2, [sp, #12]
 800783c:	1a9b      	subs	r3, r3, r2
 800783e:	42ab      	cmp	r3, r5
 8007840:	dcf2      	bgt.n	8007828 <_printf_i+0x1e8>
 8007842:	e7eb      	b.n	800781c <_printf_i+0x1dc>
 8007844:	2500      	movs	r5, #0
 8007846:	f104 0919 	add.w	r9, r4, #25
 800784a:	e7f5      	b.n	8007838 <_printf_i+0x1f8>
 800784c:	2b00      	cmp	r3, #0
 800784e:	d1ac      	bne.n	80077aa <_printf_i+0x16a>
 8007850:	7803      	ldrb	r3, [r0, #0]
 8007852:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007856:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800785a:	e76c      	b.n	8007736 <_printf_i+0xf6>
 800785c:	08008b61 	.word	0x08008b61
 8007860:	08008b72 	.word	0x08008b72

08007864 <__ascii_wctomb>:
 8007864:	b149      	cbz	r1, 800787a <__ascii_wctomb+0x16>
 8007866:	2aff      	cmp	r2, #255	; 0xff
 8007868:	bf8b      	itete	hi
 800786a:	238a      	movhi	r3, #138	; 0x8a
 800786c:	700a      	strbls	r2, [r1, #0]
 800786e:	6003      	strhi	r3, [r0, #0]
 8007870:	2001      	movls	r0, #1
 8007872:	bf88      	it	hi
 8007874:	f04f 30ff 	movhi.w	r0, #4294967295
 8007878:	4770      	bx	lr
 800787a:	4608      	mov	r0, r1
 800787c:	4770      	bx	lr

0800787e <memchr>:
 800787e:	b510      	push	{r4, lr}
 8007880:	b2c9      	uxtb	r1, r1
 8007882:	4402      	add	r2, r0
 8007884:	4290      	cmp	r0, r2
 8007886:	4603      	mov	r3, r0
 8007888:	d101      	bne.n	800788e <memchr+0x10>
 800788a:	2300      	movs	r3, #0
 800788c:	e003      	b.n	8007896 <memchr+0x18>
 800788e:	781c      	ldrb	r4, [r3, #0]
 8007890:	3001      	adds	r0, #1
 8007892:	428c      	cmp	r4, r1
 8007894:	d1f6      	bne.n	8007884 <memchr+0x6>
 8007896:	4618      	mov	r0, r3
 8007898:	bd10      	pop	{r4, pc}

0800789a <memmove>:
 800789a:	4288      	cmp	r0, r1
 800789c:	b510      	push	{r4, lr}
 800789e:	eb01 0302 	add.w	r3, r1, r2
 80078a2:	d807      	bhi.n	80078b4 <memmove+0x1a>
 80078a4:	1e42      	subs	r2, r0, #1
 80078a6:	4299      	cmp	r1, r3
 80078a8:	d00a      	beq.n	80078c0 <memmove+0x26>
 80078aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80078ae:	f802 4f01 	strb.w	r4, [r2, #1]!
 80078b2:	e7f8      	b.n	80078a6 <memmove+0xc>
 80078b4:	4283      	cmp	r3, r0
 80078b6:	d9f5      	bls.n	80078a4 <memmove+0xa>
 80078b8:	1881      	adds	r1, r0, r2
 80078ba:	1ad2      	subs	r2, r2, r3
 80078bc:	42d3      	cmn	r3, r2
 80078be:	d100      	bne.n	80078c2 <memmove+0x28>
 80078c0:	bd10      	pop	{r4, pc}
 80078c2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80078c6:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80078ca:	e7f7      	b.n	80078bc <memmove+0x22>

080078cc <_realloc_r>:
 80078cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078ce:	4607      	mov	r7, r0
 80078d0:	4614      	mov	r4, r2
 80078d2:	460e      	mov	r6, r1
 80078d4:	b921      	cbnz	r1, 80078e0 <_realloc_r+0x14>
 80078d6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80078da:	4611      	mov	r1, r2
 80078dc:	f7ff bb10 	b.w	8006f00 <_malloc_r>
 80078e0:	b922      	cbnz	r2, 80078ec <_realloc_r+0x20>
 80078e2:	f7ff fac1 	bl	8006e68 <_free_r>
 80078e6:	4625      	mov	r5, r4
 80078e8:	4628      	mov	r0, r5
 80078ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80078ec:	f000 f814 	bl	8007918 <_malloc_usable_size_r>
 80078f0:	42a0      	cmp	r0, r4
 80078f2:	d20f      	bcs.n	8007914 <_realloc_r+0x48>
 80078f4:	4621      	mov	r1, r4
 80078f6:	4638      	mov	r0, r7
 80078f8:	f7ff fb02 	bl	8006f00 <_malloc_r>
 80078fc:	4605      	mov	r5, r0
 80078fe:	2800      	cmp	r0, #0
 8007900:	d0f2      	beq.n	80078e8 <_realloc_r+0x1c>
 8007902:	4631      	mov	r1, r6
 8007904:	4622      	mov	r2, r4
 8007906:	f7ff fa8d 	bl	8006e24 <memcpy>
 800790a:	4631      	mov	r1, r6
 800790c:	4638      	mov	r0, r7
 800790e:	f7ff faab 	bl	8006e68 <_free_r>
 8007912:	e7e9      	b.n	80078e8 <_realloc_r+0x1c>
 8007914:	4635      	mov	r5, r6
 8007916:	e7e7      	b.n	80078e8 <_realloc_r+0x1c>

08007918 <_malloc_usable_size_r>:
 8007918:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800791c:	1f18      	subs	r0, r3, #4
 800791e:	2b00      	cmp	r3, #0
 8007920:	bfbc      	itt	lt
 8007922:	580b      	ldrlt	r3, [r1, r0]
 8007924:	18c0      	addlt	r0, r0, r3
 8007926:	4770      	bx	lr

08007928 <_init>:
 8007928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800792a:	bf00      	nop
 800792c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800792e:	bc08      	pop	{r3}
 8007930:	469e      	mov	lr, r3
 8007932:	4770      	bx	lr

08007934 <_fini>:
 8007934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007936:	bf00      	nop
 8007938:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800793a:	bc08      	pop	{r3}
 800793c:	469e      	mov	lr, r3
 800793e:	4770      	bx	lr
